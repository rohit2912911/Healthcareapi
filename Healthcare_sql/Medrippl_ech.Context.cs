//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Healthcare_sql
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Medripple_echEntities : DbContext
    {
        public Medripple_echEntities()
            : base("name=Medripple_echEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccessEntity> AccessEntities { get; set; }
        public virtual DbSet<AccessList> AccessLists { get; set; }
        public virtual DbSet<AccessResolution> AccessResolutions { get; set; }
        public virtual DbSet<AccessTier> AccessTiers { get; set; }
        public virtual DbSet<Allergy> Allergies { get; set; }
        public virtual DbSet<App> Apps { get; set; }
        public virtual DbSet<App_diagnostic> App_diagnostic { get; set; }
        public virtual DbSet<App_doc> App_doc { get; set; }
        public virtual DbSet<App_hospital> App_hospital { get; set; }
        public virtual DbSet<bankinfo> bankinfoes { get; set; }
        public virtual DbSet<BankInfoContactDetail> BankInfoContactDetails { get; set; }
        public virtual DbSet<BankInfoTerm> BankInfoTerms { get; set; }
        public virtual DbSet<BasicHealthDetail> BasicHealthDetails { get; set; }
        public virtual DbSet<bot_table> bot_table { get; set; }
        public virtual DbSet<CityMaster> CityMasters { get; set; }
        public virtual DbSet<ClinicalDoctor> ClinicalDoctors { get; set; }
        public virtual DbSet<ClinicalResearchDetail> ClinicalResearchDetails { get; set; }
        public virtual DbSet<ClinicSpecialitiesMaster> ClinicSpecialitiesMasters { get; set; }
        public virtual DbSet<ConnectRelationMaster> ConnectRelationMasters { get; set; }
        public virtual DbSet<ConnectTransactions_api> ConnectTransactions_api { get; set; }
        public virtual DbSet<CorporateDetail> CorporateDetails { get; set; }
        public virtual DbSet<CountryMaster> CountryMasters { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DependentTbl> DependentTbls { get; set; }
        public virtual DbSet<DetailAccessCount> DetailAccessCounts { get; set; }
        public virtual DbSet<diagnosticCenterHealthCheckUpPlan> diagnosticCenterHealthCheckUpPlans { get; set; }
        public virtual DbSet<DiagnosticCentresContactDetail> DiagnosticCentresContactDetails { get; set; }
        public virtual DbSet<DiagnosticCentresDetail> DiagnosticCentresDetails { get; set; }
        public virtual DbSet<DiagnosticMaster> DiagnosticMasters { get; set; }
        public virtual DbSet<DiagnosticServicesMaster> DiagnosticServicesMasters { get; set; }
        public virtual DbSet<DiseaseMaster> DiseaseMasters { get; set; }
        public virtual DbSet<Disease> Diseases { get; set; }
        public virtual DbSet<DiseasesOther> DiseasesOthers { get; set; }
        public virtual DbSet<DiseaseToDepartment1> DiseaseToDepartment1 { get; set; }
        public virtual DbSet<DoctorsDetail> DoctorsDetails { get; set; }
        public virtual DbSet<DoctorsDetail1> DoctorsDetail1 { get; set; }
        public virtual DbSet<DoctorsDetailaddr> DoctorsDetailaddrs { get; set; }
        public virtual DbSet<DoctorsVisit> DoctorsVisits { get; set; }
        public virtual DbSet<DoctorWorkDetail> DoctorWorkDetails { get; set; }
        public virtual DbSet<Drug> Drugs { get; set; }
        public virtual DbSet<EHRReportDocument> EHRReportDocuments { get; set; }
        public virtual DbSet<example> examples { get; set; }
        public virtual DbSet<GroupConnection> GroupConnections { get; set; }
        public virtual DbSet<GroupConnectionTransaction> GroupConnectionTransactions { get; set; }
        public virtual DbSet<GroupMember> GroupMembers { get; set; }
        public virtual DbSet<GroupMessage> GroupMessages { get; set; }
        public virtual DbSet<GroupMessageTransaction> GroupMessageTransactions { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<healthnewscontent> healthnewscontents { get; set; }
        public virtual DbSet<HospitalConsultant> HospitalConsultants { get; set; }
        public virtual DbSet<HospitalFacilityMaster> HospitalFacilityMasters { get; set; }
        public virtual DbSet<Hospitalization> Hospitalizations { get; set; }
        public virtual DbSet<HospitalsDetail> HospitalsDetails { get; set; }
        public virtual DbSet<HospitalVisitingConsultant> HospitalVisitingConsultants { get; set; }
        public virtual DbSet<Immunization> Immunizations { get; set; }
        public virtual DbSet<InsurancePlan> InsurancePlans { get; set; }
        public virtual DbSet<InterventionMaster> InterventionMasters { get; set; }
        public virtual DbSet<Ipaddress_table> Ipaddress_table { get; set; }
        public virtual DbSet<LabReport> LabReports { get; set; }
        public virtual DbSet<Medication> Medications { get; set; }
        public virtual DbSet<MRCompanyHierarchy> MRCompanyHierarchies { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<OrganizationFacility> OrganizationFacilities { get; set; }
        public virtual DbSet<OrganizationInfo> OrganizationInfoes { get; set; }
        public virtual DbSet<PartnerSiteDetail> PartnerSiteDetails { get; set; }
        public virtual DbSet<PatientDisease> PatientDiseases { get; set; }
        public virtual DbSet<PersonalDetail> PersonalDetails { get; set; }
        public virtual DbSet<Procedure_Master> Procedure_Master { get; set; }
        public virtual DbSet<ProcedureMaster> ProcedureMasters { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductBrand> ProductBrands { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProviderPatientDetail_api> ProviderPatientDetail_api { get; set; }
        public virtual DbSet<ProviderPersonnel> ProviderPersonnels { get; set; }
        public virtual DbSet<ProviderReferral> ProviderReferrals { get; set; }
        public virtual DbSet<Query_Pointsdetail> Query_Pointsdetail { get; set; }
        public virtual DbSet<QueryPatient_AskQuery> QueryPatient_AskQuery { get; set; }
        public virtual DbSet<QueryPatient_ReplyQuery> QueryPatient_ReplyQuery { get; set; }
        public virtual DbSet<QueryPatientInfo> QueryPatientInfoes { get; set; }
        public virtual DbSet<QueryPatientTreatmentCity> QueryPatientTreatmentCities { get; set; }
        public virtual DbSet<QueryPatToComReply> QueryPatToComReplies { get; set; }
        public virtual DbSet<QueryPatToPatReply> QueryPatToPatReplies { get; set; }
        public virtual DbSet<QueryPoint> QueryPoints { get; set; }
        public virtual DbSet<QueryProviderInfo> QueryProviderInfoes { get; set; }
        public virtual DbSet<RefAppTransactions_api> RefAppTransactions_api { get; set; }
        public virtual DbSet<ReferralAdded_api> ReferralAdded_api { get; set; }
        public virtual DbSet<ReferralAppointment_api> ReferralAppointment_api { get; set; }
        public virtual DbSet<ReferralConnect_api> ReferralConnect_api { get; set; }
        public virtual DbSet<ReferralEntityMaster> ReferralEntityMasters { get; set; }
        public virtual DbSet<ReferralRequestDetail_api> ReferralRequestDetail_api { get; set; }
        public virtual DbSet<ReferralStatusMaster> ReferralStatusMasters { get; set; }
        public virtual DbSet<ReferralTransactions_api> ReferralTransactions_api { get; set; }
        public virtual DbSet<review_doctor> review_doctor { get; set; }
        public virtual DbSet<review_hospital> review_hospital { get; set; }
        public virtual DbSet<sample> samples { get; set; }
        public virtual DbSet<SkillsMaster> SkillsMasters { get; set; }
        public virtual DbSet<SkillsMaster1> SkillsMaster1 { get; set; }
        public virtual DbSet<SpecialityClinicsCentreDetail> SpecialityClinicsCentreDetails { get; set; }
        public virtual DbSet<SpecializationMaster> SpecializationMasters { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tabchkdiagId> tabchkdiagIds { get; set; }
        public virtual DbSet<TabchkDocid> TabchkDocids { get; set; }
        public virtual DbSet<tbl_providerlogindetail> tbl_providerlogindetail { get; set; }
        public virtual DbSet<tblRelationMaster_api> tblRelationMaster_api { get; set; }
        public virtual DbSet<UploadMember_api> UploadMember_api { get; set; }
        public virtual DbSet<userallergy> userallergies { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
        public virtual DbSet<BankWorkingHour> BankWorkingHours { get; set; }
        public virtual DbSet<BLOG_T> BLOG_T { get; set; }
        public virtual DbSet<Book_Category> Book_Category { get; set; }
        public virtual DbSet<BookAppointment> BookAppointments { get; set; }
        public virtual DbSet<CityMaster1> CityMaster1 { get; set; }
        public virtual DbSet<Cme_description> Cme_description { get; set; }
        public virtual DbSet<copy_HospitalProcedures> copy_HospitalProcedures { get; set; }
        public virtual DbSet<copyHospitalProcedure> copyHospitalProcedures { get; set; }
        public virtual DbSet<Corporate> Corporates { get; set; }
        public virtual DbSet<Coupons4Pat> Coupons4Pat { get; set; }
        public virtual DbSet<CurrentCondition> CurrentConditions { get; set; }
        public virtual DbSet<dept_hosrating> dept_hosrating { get; set; }
        public virtual DbSet<DIAGNOSTIC_TESTMASTER> DIAGNOSTIC_TESTMASTER { get; set; }
        public virtual DbSet<DiagnosticCentreService> DiagnosticCentreServices { get; set; }
        public virtual DbSet<DiagnosticCentreWorkingHour> DiagnosticCentreWorkingHours { get; set; }
        public virtual DbSet<DiseaseToDepartment> DiseaseToDepartments { get; set; }
        public virtual DbSet<docdetail> docdetails { get; set; }
        public virtual DbSet<docsecret> docsecrets { get; set; }
        public virtual DbSet<Doctor_Ref> Doctor_Ref { get; set; }
        public virtual DbSet<DoctorCategory> DoctorCategories { get; set; }
        public virtual DbSet<DoctorsClinicTiming> DoctorsClinicTimings { get; set; }
        public virtual DbSet<DoctorSkill> DoctorSkills { get; set; }
        public virtual DbSet<doctorsubscription> doctorsubscriptions { get; set; }
        public virtual DbSet<DoctorsVisitingDetail> DoctorsVisitingDetails { get; set; }
        public virtual DbSet<DoctorsVisitingDetail1> DoctorsVisitingDetail1 { get; set; }
        public virtual DbSet<DoctorWorkDetail1> DoctorWorkDetail1 { get; set; }
        public virtual DbSet<Ebook_Detail> Ebook_Detail { get; set; }
        public virtual DbSet<Emp_offer> Emp_offer { get; set; }
        public virtual DbSet<FellowPatientQuery> FellowPatientQueries { get; set; }
        public virtual DbSet<healthexchange> healthexchanges { get; set; }
        public virtual DbSet<HospitalContactPersonDetail> HospitalContactPersonDetails { get; set; }
        public virtual DbSet<HospitalDiagnostic> HospitalDiagnostics { get; set; }
        public virtual DbSet<HospitalFacility> HospitalFacilities { get; set; }
        public virtual DbSet<HospitalIndoorService> HospitalIndoorServices { get; set; }
        public virtual DbSet<HospitalOffer> HospitalOffers { get; set; }
        public virtual DbSet<HospitalProcedure> HospitalProcedures { get; set; }
        public virtual DbSet<HospitalsPackageDetail> HospitalsPackageDetails { get; set; }
        public virtual DbSet<InsuCitylist> InsuCitylists { get; set; }
        public virtual DbSet<InsuranceTiesUpMaster> InsuranceTiesUpMasters { get; set; }
        public virtual DbSet<job_board> job_board { get; set; }
        public virtual DbSet<MIS_Table> MIS_Table { get; set; }
        public virtual DbSet<Newallergy> Newallergies { get; set; }
        public virtual DbSet<newsletter_unsubscription> newsletter_unsubscription { get; set; }
        public virtual DbSet<opddemo> opddemoes { get; set; }
        public virtual DbSet<OpdTiming> OpdTimings { get; set; }
        public virtual DbSet<OrganizationContactPersonDetail> OrganizationContactPersonDetails { get; set; }
        public virtual DbSet<paid_specialist> paid_specialist { get; set; }
        public virtual DbSet<ParameterSetting> ParameterSettings { get; set; }
        public virtual DbSet<Patient_Speak> Patient_Speak { get; set; }
        public virtual DbSet<Patientfeedback> Patientfeedbacks { get; set; }
        public virtual DbSet<Patinsudetail> Patinsudetails { get; set; }
        public virtual DbSet<PDiscount> PDiscounts { get; set; }
        public virtual DbSet<PGFamialy> PGFamialies { get; set; }
        public virtual DbSet<PGIndividual> PGIndividuals { get; set; }
        public virtual DbSet<QueryAreaMaster> QueryAreaMasters { get; set; }
        public virtual DbSet<QueryProcMst> QueryProcMsts { get; set; }
        public virtual DbSet<SuperSpecialityOPDTiming> SuperSpecialityOPDTimings { get; set; }
        public virtual DbSet<TabChkCity> TabChkCities { get; set; }
        public virtual DbSet<tabDoctorCategory> tabDoctorCategories { get; set; }
        public virtual DbSet<tabDoctorsClinicTiming> tabDoctorsClinicTimings { get; set; }
        public virtual DbSet<tabdoctorsdetail> tabdoctorsdetails { get; set; }
        public virtual DbSet<tabDoctorSkill> tabDoctorSkills { get; set; }
        public virtual DbSet<tabDoctorsVisitingDetail> tabDoctorsVisitingDetails { get; set; }
        public virtual DbSet<tabDoctorWorkDetail> tabDoctorWorkDetails { get; set; }
        public virtual DbSet<tabQueryProviderInfo> tabQueryProviderInfoes { get; set; }
        public virtual DbSet<tbl_Bot> tbl_Bot { get; set; }
        public virtual DbSet<temphoscon> temphoscons { get; set; }
        public virtual DbSet<tempp> tempps { get; set; }
        public virtual DbSet<tempq> tempqs { get; set; }
        public virtual DbSet<tempqpinfo> tempqpinfoes { get; set; }
        public virtual DbSet<tempquerypatient_ask> tempquerypatient_ask { get; set; }
        public virtual DbSet<tempquerypatientinfo> tempquerypatientinfoes { get; set; }
        public virtual DbSet<tempquerypatientReply> tempquerypatientReplies { get; set; }
        public virtual DbSet<tempquerypatientTreat> tempquerypatientTreats { get; set; }
        public virtual DbSet<tempr> temprs { get; set; }
        public virtual DbSet<test> tests { get; set; }
        public virtual DbSet<TestTable> TestTables { get; set; }
        public virtual DbSet<tquerypatient_askquery> tquerypatient_askquery { get; set; }
        public virtual DbSet<tquerypatienttreatmentcity> tquerypatienttreatmentcities { get; set; }
        public virtual DbSet<Transaction_detail> Transaction_detail { get; set; }
        public virtual DbSet<viewdoctor> viewdoctors { get; set; }
        public virtual DbSet<AccessMatrix> AccessMatrices { get; set; }
        public virtual DbSet<provider> providers { get; set; }
        public virtual DbSet<ProvidersHierarchy> ProvidersHierarchies { get; set; }
        public virtual DbSet<SearchProduct> SearchProducts { get; set; }
        public virtual DbSet<view_Ansgridview> view_Ansgridview { get; set; }
        public virtual DbSet<View_QueryPackage> View_QueryPackage { get; set; }
        public virtual DbSet<ViewDoctorsdetail> ViewDoctorsdetails { get; set; }
    
        [DbFunction("Medripple_echEntities", "getSubordinate")]
        public virtual IQueryable<getSubordinate_Result> getSubordinate(string providerid)
        {
            var provideridParameter = providerid != null ?
                new ObjectParameter("providerid", providerid) :
                new ObjectParameter("providerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSubordinate_Result>("[Medripple_echEntities].[getSubordinate](@providerid)", provideridParameter);
        }
    
        [DbFunction("Medripple_echEntities", "getSubordinate_Test")]
        public virtual IQueryable<getSubordinate_Test_Result> getSubordinate_Test(string providerid)
        {
            var provideridParameter = providerid != null ?
                new ObjectParameter("providerid", providerid) :
                new ObjectParameter("providerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<getSubordinate_Test_Result>("[Medripple_echEntities].[getSubordinate_Test](@providerid)", provideridParameter);
        }
    
        [DbFunction("Medripple_echEntities", "TestTree")]
        public virtual IQueryable<TestTree_Result> TestTree(string providerid)
        {
            var provideridParameter = providerid != null ?
                new ObjectParameter("providerid", providerid) :
                new ObjectParameter("providerid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TestTree_Result>("[Medripple_echEntities].[TestTree](@providerid)", provideridParameter);
        }
    
        public virtual int Adminquerypatientlist_dp(string patname, string proname, string fdate, string todate, string region, string vcProvId, Nullable<bool> followup, Nullable<int> page, string istr, string email, string str, string vcPatientPhone)
        {
            var patnameParameter = patname != null ?
                new ObjectParameter("Patname", patname) :
                new ObjectParameter("Patname", typeof(string));
    
            var pronameParameter = proname != null ?
                new ObjectParameter("Proname", proname) :
                new ObjectParameter("Proname", typeof(string));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("Fdate", fdate) :
                new ObjectParameter("Fdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var followupParameter = followup.HasValue ?
                new ObjectParameter("followup", followup) :
                new ObjectParameter("followup", typeof(bool));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var strParameter = str != null ?
                new ObjectParameter("Str", str) :
                new ObjectParameter("Str", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Adminquerypatientlist_dp", patnameParameter, pronameParameter, fdateParameter, todateParameter, regionParameter, vcProvIdParameter, followupParameter, pageParameter, istrParameter, emailParameter, strParameter, vcPatientPhoneParameter);
        }
    
        public virtual int Adminquerypatientlist_dp_demo(string patname, string proname, string fdate, string todate, string region, string vcProvId, Nullable<bool> followup, Nullable<int> page)
        {
            var patnameParameter = patname != null ?
                new ObjectParameter("Patname", patname) :
                new ObjectParameter("Patname", typeof(string));
    
            var pronameParameter = proname != null ?
                new ObjectParameter("Proname", proname) :
                new ObjectParameter("Proname", typeof(string));
    
            var fdateParameter = fdate != null ?
                new ObjectParameter("Fdate", fdate) :
                new ObjectParameter("Fdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var followupParameter = followup.HasValue ?
                new ObjectParameter("followup", followup) :
                new ObjectParameter("followup", typeof(bool));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Adminquerypatientlist_dp_demo", patnameParameter, pronameParameter, fdateParameter, todateParameter, regionParameter, vcProvIdParameter, followupParameter, pageParameter);
        }
    
        public virtual int Adminupdate_dp(string vcQueryId, string vcMemberName, string vcPatientName, string vcPatientEmail, string vcPatientPhone, string vcPatientAddress, string vcquery, string vcPatientAge)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var vcPatientEmailParameter = vcPatientEmail != null ?
                new ObjectParameter("vcPatientEmail", vcPatientEmail) :
                new ObjectParameter("vcPatientEmail", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            var vcPatientAddressParameter = vcPatientAddress != null ?
                new ObjectParameter("vcPatientAddress", vcPatientAddress) :
                new ObjectParameter("vcPatientAddress", typeof(string));
    
            var vcqueryParameter = vcquery != null ?
                new ObjectParameter("vcquery", vcquery) :
                new ObjectParameter("vcquery", typeof(string));
    
            var vcPatientAgeParameter = vcPatientAge != null ?
                new ObjectParameter("vcPatientAge", vcPatientAge) :
                new ObjectParameter("vcPatientAge", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Adminupdate_dp", vcQueryIdParameter, vcMemberNameParameter, vcPatientNameParameter, vcPatientEmailParameter, vcPatientPhoneParameter, vcPatientAddressParameter, vcqueryParameter, vcPatientAgeParameter);
        }
    
        public virtual ObjectResult<AllCOnnectedPartners_api_Result> AllCOnnectedPartners_api(string provid, Nullable<short> status, string name)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllCOnnectedPartners_api_Result>("AllCOnnectedPartners_api", providParameter, statusParameter, nameParameter);
        }
    
        public virtual ObjectResult<AllGroupMessages_Result> AllGroupMessages(string groupId)
        {
            var groupIdParameter = groupId != null ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllGroupMessages_Result>("AllGroupMessages", groupIdParameter);
        }
    
        public virtual ObjectResult<AllProviderConnReq_api_Result> AllProviderConnReq_api(string provid, Nullable<short> status, string name)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllProviderConnReq_api_Result>("AllProviderConnReq_api", providParameter, statusParameter, nameParameter);
        }
    
        public virtual int approvequeries_dp(string istr, Nullable<int> page)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("approvequeries_dp", istrParameter, pageParameter);
        }
    
        public virtual ObjectResult<autodiseasetodept_dp_Result> autodiseasetodept_dp(string disease_name, string skill_name, string speciality_name)
        {
            var disease_nameParameter = disease_name != null ?
                new ObjectParameter("Disease_name", disease_name) :
                new ObjectParameter("Disease_name", typeof(string));
    
            var skill_nameParameter = skill_name != null ?
                new ObjectParameter("Skill_name", skill_name) :
                new ObjectParameter("Skill_name", typeof(string));
    
            var speciality_nameParameter = speciality_name != null ?
                new ObjectParameter("Speciality_name", speciality_name) :
                new ObjectParameter("Speciality_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<autodiseasetodept_dp_Result>("autodiseasetodept_dp", disease_nameParameter, skill_nameParameter, speciality_nameParameter);
        }
    
        public virtual ObjectResult<autodiseasetodept_dp_demo_Result> autodiseasetodept_dp_demo(string disease_name, string skill_name, string speciality_name)
        {
            var disease_nameParameter = disease_name != null ?
                new ObjectParameter("Disease_name", disease_name) :
                new ObjectParameter("Disease_name", typeof(string));
    
            var skill_nameParameter = skill_name != null ?
                new ObjectParameter("Skill_name", skill_name) :
                new ObjectParameter("Skill_name", typeof(string));
    
            var speciality_nameParameter = speciality_name != null ?
                new ObjectParameter("Speciality_name", speciality_name) :
                new ObjectParameter("Speciality_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<autodiseasetodept_dp_demo_Result>("autodiseasetodept_dp_demo", disease_nameParameter, skill_nameParameter, speciality_nameParameter);
        }
    
        public virtual ObjectResult<autodisproc_dp_Result> autodisproc_dp(string vcqueryid)
        {
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<autodisproc_dp_Result>("autodisproc_dp", vcqueryidParameter);
        }
    
        public virtual int autovaluefill_dp(string diseasename, string procedurename, string city, string keyword)
        {
            var diseasenameParameter = diseasename != null ?
                new ObjectParameter("Diseasename", diseasename) :
                new ObjectParameter("Diseasename", typeof(string));
    
            var procedurenameParameter = procedurename != null ?
                new ObjectParameter("Procedurename", procedurename) :
                new ObjectParameter("Procedurename", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("autovaluefill_dp", diseasenameParameter, procedurenameParameter, cityParameter, keywordParameter);
        }
    
        public virtual int autovaluefill_dp1(string vcqueryid)
        {
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("autovaluefill_dp1", vcqueryidParameter);
        }
    
        public virtual ObjectResult<string> bankbasdet_dp(string istr, string city_name, string ban_id)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("bankbasdet_dp", istrParameter, city_nameParameter, ban_idParameter);
        }
    
        public virtual ObjectResult<bckinfo_dp_Result> bckinfo_dp(string istr, string ban_id, string vcUserName, string address, string city, string bank_name)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var bank_nameParameter = bank_name != null ?
                new ObjectParameter("bank_name", bank_name) :
                new ObjectParameter("bank_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bckinfo_dp_Result>("bckinfo_dp", istrParameter, ban_idParameter, vcUserNameParameter, addressParameter, cityParameter, bank_nameParameter);
        }
    
        public virtual int bk_appt_dp(string vcName, string vcContactNo, string vcEmailID, string vcOrderID, string dttm_preferdDate, string vcPreferdTime, string vcDiseaseDesc, string vcBookOpFor, string vcusername, string providername, Nullable<bool> app_flg, string cardtype, string age, Nullable<bool> appointmentType)
        {
            var vcNameParameter = vcName != null ?
                new ObjectParameter("vcName", vcName) :
                new ObjectParameter("vcName", typeof(string));
    
            var vcContactNoParameter = vcContactNo != null ?
                new ObjectParameter("vcContactNo", vcContactNo) :
                new ObjectParameter("vcContactNo", typeof(string));
    
            var vcEmailIDParameter = vcEmailID != null ?
                new ObjectParameter("vcEmailID", vcEmailID) :
                new ObjectParameter("vcEmailID", typeof(string));
    
            var vcOrderIDParameter = vcOrderID != null ?
                new ObjectParameter("vcOrderID", vcOrderID) :
                new ObjectParameter("vcOrderID", typeof(string));
    
            var dttm_preferdDateParameter = dttm_preferdDate != null ?
                new ObjectParameter("dttm_preferdDate", dttm_preferdDate) :
                new ObjectParameter("dttm_preferdDate", typeof(string));
    
            var vcPreferdTimeParameter = vcPreferdTime != null ?
                new ObjectParameter("vcPreferdTime", vcPreferdTime) :
                new ObjectParameter("vcPreferdTime", typeof(string));
    
            var vcDiseaseDescParameter = vcDiseaseDesc != null ?
                new ObjectParameter("vcDiseaseDesc", vcDiseaseDesc) :
                new ObjectParameter("vcDiseaseDesc", typeof(string));
    
            var vcBookOpForParameter = vcBookOpFor != null ?
                new ObjectParameter("vcBookOpFor", vcBookOpFor) :
                new ObjectParameter("vcBookOpFor", typeof(string));
    
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            var providernameParameter = providername != null ?
                new ObjectParameter("providername", providername) :
                new ObjectParameter("providername", typeof(string));
    
            var app_flgParameter = app_flg.HasValue ?
                new ObjectParameter("app_flg", app_flg) :
                new ObjectParameter("app_flg", typeof(bool));
    
            var cardtypeParameter = cardtype != null ?
                new ObjectParameter("cardtype", cardtype) :
                new ObjectParameter("cardtype", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var appointmentTypeParameter = appointmentType.HasValue ?
                new ObjectParameter("AppointmentType", appointmentType) :
                new ObjectParameter("AppointmentType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bk_appt_dp", vcNameParameter, vcContactNoParameter, vcEmailIDParameter, vcOrderIDParameter, dttm_preferdDateParameter, vcPreferdTimeParameter, vcDiseaseDescParameter, vcBookOpForParameter, vcusernameParameter, providernameParameter, app_flgParameter, cardtypeParameter, ageParameter, appointmentTypeParameter);
        }
    
        public virtual ObjectResult<bkapp_dp_Result> bkapp_dp(Nullable<int> app_type, Nullable<bool> flag, Nullable<int> id, string vcusername)
        {
            var app_typeParameter = app_type.HasValue ?
                new ObjectParameter("app_type", app_type) :
                new ObjectParameter("app_type", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(bool));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bkapp_dp_Result>("bkapp_dp", app_typeParameter, flagParameter, idParameter, vcusernameParameter);
        }
    
        public virtual int Bkmerge_dp(string vcqueryid, Nullable<int> id, string vcpatientemail, string intlreferdoc)
        {
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var vcpatientemailParameter = vcpatientemail != null ?
                new ObjectParameter("vcpatientemail", vcpatientemail) :
                new ObjectParameter("vcpatientemail", typeof(string));
    
            var intlreferdocParameter = intlreferdoc != null ?
                new ObjectParameter("intlreferdoc", intlreferdoc) :
                new ObjectParameter("intlreferdoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Bkmerge_dp", vcqueryidParameter, idParameter, vcpatientemailParameter, intlreferdocParameter);
        }
    
        public virtual ObjectResult<bkpg_dp_Result> bkpg_dp(string vcusername)
        {
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<bkpg_dp_Result>("bkpg_dp", vcusernameParameter);
        }
    
        public virtual int bloodorganLower_dp(string city, string hospital_name, string facility_id, string address)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var facility_idParameter = facility_id != null ?
                new ObjectParameter("facility_id", facility_id) :
                new ObjectParameter("facility_id", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bloodorganLower_dp", cityParameter, hospital_nameParameter, facility_idParameter, addressParameter);
        }
    
        public virtual ObjectResult<Bookappointment_dp_Result> Bookappointment_dp(string istr, string vcPatientId, Nullable<int> hd_id, string vcUserName, string order_id, Nullable<System.DateTime> dttmAccess)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var hd_idParameter = hd_id.HasValue ?
                new ObjectParameter("hd_id", hd_id) :
                new ObjectParameter("hd_id", typeof(int));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var order_idParameter = order_id != null ?
                new ObjectParameter("Order_id", order_id) :
                new ObjectParameter("Order_id", typeof(string));
    
            var dttmAccessParameter = dttmAccess.HasValue ?
                new ObjectParameter("dttmAccess", dttmAccess) :
                new ObjectParameter("dttmAccess", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Bookappointment_dp_Result>("Bookappointment_dp", istrParameter, vcPatientIdParameter, hd_idParameter, vcUserNameParameter, order_idParameter, dttmAccessParameter);
        }
    
        public virtual int bookappointment_insert_dp(string vcOrderID, Nullable<int> iAccessCount, string vcAccessDetailFor, string vcUserName, string vcName, string vcContactNo, string vcEmailID, string dttm_preferdDate, string vcPreferdTime, string vcDiseaseDesc, string vcBookOpFor, string providername, Nullable<int> app_flg, string cardtype, string age, Nullable<bool> appType, string ip_address)
        {
            var vcOrderIDParameter = vcOrderID != null ?
                new ObjectParameter("vcOrderID", vcOrderID) :
                new ObjectParameter("vcOrderID", typeof(string));
    
            var iAccessCountParameter = iAccessCount.HasValue ?
                new ObjectParameter("iAccessCount", iAccessCount) :
                new ObjectParameter("iAccessCount", typeof(int));
    
            var vcAccessDetailForParameter = vcAccessDetailFor != null ?
                new ObjectParameter("vcAccessDetailFor", vcAccessDetailFor) :
                new ObjectParameter("vcAccessDetailFor", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcNameParameter = vcName != null ?
                new ObjectParameter("vcName", vcName) :
                new ObjectParameter("vcName", typeof(string));
    
            var vcContactNoParameter = vcContactNo != null ?
                new ObjectParameter("vcContactNo", vcContactNo) :
                new ObjectParameter("vcContactNo", typeof(string));
    
            var vcEmailIDParameter = vcEmailID != null ?
                new ObjectParameter("vcEmailID", vcEmailID) :
                new ObjectParameter("vcEmailID", typeof(string));
    
            var dttm_preferdDateParameter = dttm_preferdDate != null ?
                new ObjectParameter("dttm_preferdDate", dttm_preferdDate) :
                new ObjectParameter("dttm_preferdDate", typeof(string));
    
            var vcPreferdTimeParameter = vcPreferdTime != null ?
                new ObjectParameter("vcPreferdTime", vcPreferdTime) :
                new ObjectParameter("vcPreferdTime", typeof(string));
    
            var vcDiseaseDescParameter = vcDiseaseDesc != null ?
                new ObjectParameter("vcDiseaseDesc", vcDiseaseDesc) :
                new ObjectParameter("vcDiseaseDesc", typeof(string));
    
            var vcBookOpForParameter = vcBookOpFor != null ?
                new ObjectParameter("vcBookOpFor", vcBookOpFor) :
                new ObjectParameter("vcBookOpFor", typeof(string));
    
            var providernameParameter = providername != null ?
                new ObjectParameter("providername", providername) :
                new ObjectParameter("providername", typeof(string));
    
            var app_flgParameter = app_flg.HasValue ?
                new ObjectParameter("app_flg", app_flg) :
                new ObjectParameter("app_flg", typeof(int));
    
            var cardtypeParameter = cardtype != null ?
                new ObjectParameter("cardtype", cardtype) :
                new ObjectParameter("cardtype", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var appTypeParameter = appType.HasValue ?
                new ObjectParameter("appType", appType) :
                new ObjectParameter("appType", typeof(bool));
    
            var ip_addressParameter = ip_address != null ?
                new ObjectParameter("Ip_address", ip_address) :
                new ObjectParameter("Ip_address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bookappointment_insert_dp", vcOrderIDParameter, iAccessCountParameter, vcAccessDetailForParameter, vcUserNameParameter, vcNameParameter, vcContactNoParameter, vcEmailIDParameter, dttm_preferdDateParameter, vcPreferdTimeParameter, vcDiseaseDescParameter, vcBookOpForParameter, providernameParameter, app_flgParameter, cardtypeParameter, ageParameter, appTypeParameter, ip_addressParameter);
        }
    
        public virtual int bookappointment_update_dp(Nullable<System.DateTime> dttmAccess, string vcOrderID, string vcAccessDetailFor)
        {
            var dttmAccessParameter = dttmAccess.HasValue ?
                new ObjectParameter("dttmAccess", dttmAccess) :
                new ObjectParameter("dttmAccess", typeof(System.DateTime));
    
            var vcOrderIDParameter = vcOrderID != null ?
                new ObjectParameter("vcOrderID", vcOrderID) :
                new ObjectParameter("vcOrderID", typeof(string));
    
            var vcAccessDetailForParameter = vcAccessDetailFor != null ?
                new ObjectParameter("vcAccessDetailFor", vcAccessDetailFor) :
                new ObjectParameter("vcAccessDetailFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("bookappointment_update_dp", dttmAccessParameter, vcOrderIDParameter, vcAccessDetailForParameter);
        }
    
        public virtual ObjectResult<cachedisease_dp_Result> cachedisease_dp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cachedisease_dp_Result>("cachedisease_dp");
        }
    
        public virtual ObjectResult<cardgen4feedbackpatient_Result> cardgen4feedbackpatient(string vcUserName, string name)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cardgen4feedbackpatient_Result>("cardgen4feedbackpatient", vcUserNameParameter, nameParameter);
        }
    
        public virtual ObjectResult<ChatSummary_Result> ChatSummary(string providerReferralsID)
        {
            var providerReferralsIDParameter = providerReferralsID != null ?
                new ObjectParameter("ProviderReferralsID", providerReferralsID) :
                new ObjectParameter("ProviderReferralsID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ChatSummary_Result>("ChatSummary", providerReferralsIDParameter);
        }
    
        public virtual ObjectResult<clinicalresearch_dp_Result> clinicalresearch_dp(string istr, string city, string specialization_name)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<clinicalresearch_dp_Result>("clinicalresearch_dp", istrParameter, cityParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<consuproc_dp_Result> consuproc_dp(string procedure_name, string city)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consuproc_dp_Result>("consuproc_dp", procedure_nameParameter, cityParameter);
        }
    
        public virtual ObjectResult<string> Coup4Pat_dp(string email, string city, string hospital, Nullable<System.DateTime> currDate, string docname)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var hospitalParameter = hospital != null ?
                new ObjectParameter("Hospital", hospital) :
                new ObjectParameter("Hospital", typeof(string));
    
            var currDateParameter = currDate.HasValue ?
                new ObjectParameter("CurrDate", currDate) :
                new ObjectParameter("CurrDate", typeof(System.DateTime));
    
            var docnameParameter = docname != null ?
                new ObjectParameter("Docname", docname) :
                new ObjectParameter("Docname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Coup4Pat_dp", emailParameter, cityParameter, hospitalParameter, currDateParameter, docnameParameter);
        }
    
        public virtual int Day4treatment_dp(string vcqueryid, Nullable<int> day)
        {
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Day4treatment_dp", vcqueryidParameter, dayParameter);
        }
    
        public virtual int diacity_dp(string service_id, string city, string istr, string diaid)
        {
            var service_idParameter = service_id != null ?
                new ObjectParameter("Service_id", service_id) :
                new ObjectParameter("Service_id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var diaidParameter = diaid != null ?
                new ObjectParameter("diaid", diaid) :
                new ObjectParameter("diaid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("diacity_dp", service_idParameter, cityParameter, istrParameter, diaidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> diagcen_dp(string istr, string dia_id)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("diagcen_dp", istrParameter, dia_idParameter);
        }
    
        public virtual int diagnosticlablower_dp(string service_Name, string city, string subService_Name, string address, string hospital_name, string test_name)
        {
            var service_NameParameter = service_Name != null ?
                new ObjectParameter("Service_Name", service_Name) :
                new ObjectParameter("Service_Name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var subService_NameParameter = subService_Name != null ?
                new ObjectParameter("SubService_Name", subService_Name) :
                new ObjectParameter("SubService_Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var test_nameParameter = test_name != null ?
                new ObjectParameter("test_name", test_name) :
                new ObjectParameter("test_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("diagnosticlablower_dp", service_NameParameter, cityParameter, subService_NameParameter, addressParameter, hospital_nameParameter, test_nameParameter);
        }
    
        public virtual int diagnosticlabupper_dp(string service_name, string city, string subService_Name, string address, string dia_name, string test_Name)
        {
            var service_nameParameter = service_name != null ?
                new ObjectParameter("service_name", service_name) :
                new ObjectParameter("service_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var subService_NameParameter = subService_Name != null ?
                new ObjectParameter("SubService_Name", subService_Name) :
                new ObjectParameter("SubService_Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var dia_nameParameter = dia_name != null ?
                new ObjectParameter("dia_name", dia_name) :
                new ObjectParameter("dia_name", typeof(string));
    
            var test_NameParameter = test_Name != null ?
                new ObjectParameter("Test_Name", test_Name) :
                new ObjectParameter("Test_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("diagnosticlabupper_dp", service_nameParameter, cityParameter, subService_NameParameter, addressParameter, dia_nameParameter, test_NameParameter);
        }
    
        public virtual ObjectResult<Diagtestname_dp_Result> Diagtestname_dp(string test_Name, string service_id, string istr, string vcUserName)
        {
            var test_NameParameter = test_Name != null ?
                new ObjectParameter("Test_Name", test_Name) :
                new ObjectParameter("Test_Name", typeof(string));
    
            var service_idParameter = service_id != null ?
                new ObjectParameter("Service_id", service_id) :
                new ObjectParameter("Service_id", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Diagtestname_dp_Result>("Diagtestname_dp", test_NameParameter, service_idParameter, istrParameter, vcUserNameParameter);
        }
    
        public virtual ObjectResult<disease_City_Result> disease_City(string disease_name)
        {
            var disease_nameParameter = disease_name != null ?
                new ObjectParameter("Disease_name", disease_name) :
                new ObjectParameter("Disease_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<disease_City_Result>("disease_City", disease_nameParameter);
        }
    
        public virtual ObjectResult<disease_mvc_Result> disease_mvc(string disease_name)
        {
            var disease_nameParameter = disease_name != null ?
                new ObjectParameter("Disease_name", disease_name) :
                new ObjectParameter("Disease_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<disease_mvc_Result>("disease_mvc", disease_nameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> diseasedetail_dp(string istr, string category_name, string aboutDisease)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var aboutDiseaseParameter = aboutDisease != null ?
                new ObjectParameter("AboutDisease", aboutDisease) :
                new ObjectParameter("AboutDisease", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("diseasedetail_dp", istrParameter, category_nameParameter, aboutDiseaseParameter);
        }
    
        public virtual int diseasedetail_mvc(Nullable<double> did, Nullable<long> cid)
        {
            var didParameter = did.HasValue ?
                new ObjectParameter("Did", did) :
                new ObjectParameter("Did", typeof(double));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("Cid", cid) :
                new ObjectParameter("Cid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("diseasedetail_mvc", didParameter, cidParameter);
        }
    
        public virtual ObjectResult<diseasedetaildocs_mvc_Result> diseasedetaildocs_mvc(Nullable<double> did, Nullable<long> cid)
        {
            var didParameter = did.HasValue ?
                new ObjectParameter("Did", did) :
                new ObjectParameter("Did", typeof(double));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("Cid", cid) :
                new ObjectParameter("Cid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<diseasedetaildocs_mvc_Result>("diseasedetaildocs_mvc", didParameter, cidParameter);
        }
    
        public virtual ObjectResult<diseasedetailhos_mvc_Result> diseasedetailhos_mvc(Nullable<double> did, Nullable<long> cid)
        {
            var didParameter = did.HasValue ?
                new ObjectParameter("Did", did) :
                new ObjectParameter("Did", typeof(double));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("Cid", cid) :
                new ObjectParameter("Cid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<diseasedetailhos_mvc_Result>("diseasedetailhos_mvc", didParameter, cidParameter);
        }
    
        public virtual int doccatins_dp(string doc_id, string category_name1, string category_name2, string category_name3, string category_name4)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var category_name1Parameter = category_name1 != null ?
                new ObjectParameter("category_name1", category_name1) :
                new ObjectParameter("category_name1", typeof(string));
    
            var category_name2Parameter = category_name2 != null ?
                new ObjectParameter("category_name2", category_name2) :
                new ObjectParameter("category_name2", typeof(string));
    
            var category_name3Parameter = category_name3 != null ?
                new ObjectParameter("category_name3", category_name3) :
                new ObjectParameter("category_name3", typeof(string));
    
            var category_name4Parameter = category_name4 != null ?
                new ObjectParameter("category_name4", category_name4) :
                new ObjectParameter("category_name4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("doccatins_dp", doc_idParameter, category_name1Parameter, category_name2Parameter, category_name3Parameter, category_name4Parameter);
        }
    
        public virtual ObjectResult<docdetil_dp_Result> docdetil_dp(string istr, string doc_id, string clinic_city, string clinic_address, string hosid)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var hosidParameter = hosid != null ?
                new ObjectParameter("hosid", hosid) :
                new ObjectParameter("hosid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<docdetil_dp_Result>("docdetil_dp", istrParameter, doc_idParameter, clinic_cityParameter, clinic_addressParameter, hosidParameter);
        }
    
        public virtual ObjectResult<docdetl_dp_Result> docdetl_dp(string istr, string city, string vcUserName, string docid)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<docdetl_dp_Result>("docdetl_dp", istrParameter, cityParameter, vcUserNameParameter, docidParameter);
        }
    
        public virtual ObjectResult<docspec_dp_Result> docspec_dp(string pname, string city)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<docspec_dp_Result>("docspec_dp", pnameParameter, cityParameter);
        }
    
        public virtual int DoctorResearchInterest_dp(string doc_id, Nullable<bool> btClinicalResearch, Nullable<bool> btPreClinicalResearch, Nullable<bool> btOtherResearch, string vcOtherResearch, Nullable<bool> btUniversityFacility, Nullable<bool> btGeneralFacility, Nullable<bool> btPrimaryFacility, Nullable<bool> btOtherFacility, string vcOtherFacility, Nullable<bool> btPediatricPatient, Nullable<bool> btAdultPatient, Nullable<bool> btElderlyPatient, string vcClinicalStudies, string vcUpdatedBy, string vcExperienceDetails)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var btClinicalResearchParameter = btClinicalResearch.HasValue ?
                new ObjectParameter("btClinicalResearch", btClinicalResearch) :
                new ObjectParameter("btClinicalResearch", typeof(bool));
    
            var btPreClinicalResearchParameter = btPreClinicalResearch.HasValue ?
                new ObjectParameter("btPreClinicalResearch", btPreClinicalResearch) :
                new ObjectParameter("btPreClinicalResearch", typeof(bool));
    
            var btOtherResearchParameter = btOtherResearch.HasValue ?
                new ObjectParameter("btOtherResearch", btOtherResearch) :
                new ObjectParameter("btOtherResearch", typeof(bool));
    
            var vcOtherResearchParameter = vcOtherResearch != null ?
                new ObjectParameter("vcOtherResearch", vcOtherResearch) :
                new ObjectParameter("vcOtherResearch", typeof(string));
    
            var btUniversityFacilityParameter = btUniversityFacility.HasValue ?
                new ObjectParameter("btUniversityFacility", btUniversityFacility) :
                new ObjectParameter("btUniversityFacility", typeof(bool));
    
            var btGeneralFacilityParameter = btGeneralFacility.HasValue ?
                new ObjectParameter("btGeneralFacility", btGeneralFacility) :
                new ObjectParameter("btGeneralFacility", typeof(bool));
    
            var btPrimaryFacilityParameter = btPrimaryFacility.HasValue ?
                new ObjectParameter("btPrimaryFacility", btPrimaryFacility) :
                new ObjectParameter("btPrimaryFacility", typeof(bool));
    
            var btOtherFacilityParameter = btOtherFacility.HasValue ?
                new ObjectParameter("btOtherFacility", btOtherFacility) :
                new ObjectParameter("btOtherFacility", typeof(bool));
    
            var vcOtherFacilityParameter = vcOtherFacility != null ?
                new ObjectParameter("vcOtherFacility", vcOtherFacility) :
                new ObjectParameter("vcOtherFacility", typeof(string));
    
            var btPediatricPatientParameter = btPediatricPatient.HasValue ?
                new ObjectParameter("btPediatricPatient", btPediatricPatient) :
                new ObjectParameter("btPediatricPatient", typeof(bool));
    
            var btAdultPatientParameter = btAdultPatient.HasValue ?
                new ObjectParameter("btAdultPatient", btAdultPatient) :
                new ObjectParameter("btAdultPatient", typeof(bool));
    
            var btElderlyPatientParameter = btElderlyPatient.HasValue ?
                new ObjectParameter("btElderlyPatient", btElderlyPatient) :
                new ObjectParameter("btElderlyPatient", typeof(bool));
    
            var vcClinicalStudiesParameter = vcClinicalStudies != null ?
                new ObjectParameter("vcClinicalStudies", vcClinicalStudies) :
                new ObjectParameter("vcClinicalStudies", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var vcExperienceDetailsParameter = vcExperienceDetails != null ?
                new ObjectParameter("vcExperienceDetails", vcExperienceDetails) :
                new ObjectParameter("vcExperienceDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DoctorResearchInterest_dp", doc_idParameter, btClinicalResearchParameter, btPreClinicalResearchParameter, btOtherResearchParameter, vcOtherResearchParameter, btUniversityFacilityParameter, btGeneralFacilityParameter, btPrimaryFacilityParameter, btOtherFacilityParameter, vcOtherFacilityParameter, btPediatricPatientParameter, btAdultPatientParameter, btElderlyPatientParameter, vcClinicalStudiesParameter, vcUpdatedByParameter, vcExperienceDetailsParameter);
        }
    
        public virtual int doctorsearch_dp(string keyword, string first_name, string middle_name, string last_name, string clinic_Address, string clinic_City, string category_name)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("Middle_name", middle_name) :
                new ObjectParameter("Middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var clinic_AddressParameter = clinic_Address != null ?
                new ObjectParameter("clinic_Address", clinic_Address) :
                new ObjectParameter("clinic_Address", typeof(string));
    
            var clinic_CityParameter = clinic_City != null ?
                new ObjectParameter("clinic_City", clinic_City) :
                new ObjectParameter("clinic_City", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("doctorsearch_dp", keywordParameter, first_nameParameter, middle_nameParameter, last_nameParameter, clinic_AddressParameter, clinic_CityParameter, category_nameParameter);
        }
    
        public virtual int doctorsearch_dp_demo(string keyword, string first_name, string middle_name, string last_name, string clinic_Address, string clinic_City, string category_name)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("Middle_name", middle_name) :
                new ObjectParameter("Middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var clinic_AddressParameter = clinic_Address != null ?
                new ObjectParameter("clinic_Address", clinic_Address) :
                new ObjectParameter("clinic_Address", typeof(string));
    
            var clinic_CityParameter = clinic_City != null ?
                new ObjectParameter("clinic_City", clinic_City) :
                new ObjectParameter("clinic_City", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("doctorsearch_dp_demo", keywordParameter, first_nameParameter, middle_nameParameter, last_nameParameter, clinic_AddressParameter, clinic_CityParameter, category_nameParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> dp_proceduredetails(string skill_name, string city)
        {
            var skill_nameParameter = skill_name != null ?
                new ObjectParameter("skill_name", skill_name) :
                new ObjectParameter("skill_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("dp_proceduredetails", skill_nameParameter, cityParameter);
        }
    
        public virtual int Existingupdate_dp(string existinghos, string existingDoc, string altTrtCity, string vcqueryid)
        {
            var existinghosParameter = existinghos != null ?
                new ObjectParameter("Existinghos", existinghos) :
                new ObjectParameter("Existinghos", typeof(string));
    
            var existingDocParameter = existingDoc != null ?
                new ObjectParameter("ExistingDoc", existingDoc) :
                new ObjectParameter("ExistingDoc", typeof(string));
    
            var altTrtCityParameter = altTrtCity != null ?
                new ObjectParameter("AltTrtCity", altTrtCity) :
                new ObjectParameter("AltTrtCity", typeof(string));
    
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Existingupdate_dp", existinghosParameter, existingDocParameter, altTrtCityParameter, vcqueryidParameter);
        }
    
        public virtual ObjectResult<fellowpatient_dp_Result> fellowpatient_dp(string vcDiseaseName, string istr, string vcQuery)
        {
            var vcDiseaseNameParameter = vcDiseaseName != null ?
                new ObjectParameter("vcDiseaseName", vcDiseaseName) :
                new ObjectParameter("vcDiseaseName", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fellowpatient_dp_Result>("fellowpatient_dp", vcDiseaseNameParameter, istrParameter, vcQueryParameter);
        }
    
        public virtual ObjectResult<Foremail_dp_Result> Foremail_dp(string hos_id, string vcqueryid)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Foremail_dp_Result>("Foremail_dp", hos_idParameter, vcqueryidParameter);
        }
    
        public virtual int GetAllTableSizes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetAllTableSizes");
        }
    
        public virtual ObjectResult<string> GetCell(string vcProviderId)
        {
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCell", vcProviderIdParameter);
        }
    
        public virtual ObjectResult<string> GetChildFunction(string parentId)
        {
            var parentIdParameter = parentId != null ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetChildFunction", parentIdParameter);
        }
    
        public virtual ObjectResult<getdoccty_Result> getdoccty(string docid, string hosid)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            var hosidParameter = hosid != null ?
                new ObjectParameter("hosid", hosid) :
                new ObjectParameter("hosid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getdoccty_Result>("getdoccty", docidParameter, hosidParameter);
        }
    
        public virtual ObjectResult<getgroupmem_Result> getgroupmem(string provId)
        {
            var provIdParameter = provId != null ?
                new ObjectParameter("ProvId", provId) :
                new ObjectParameter("ProvId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getgroupmem_Result>("getgroupmem", provIdParameter);
        }
    
        public virtual ObjectResult<Getgrpconnreq_Result> Getgrpconnreq(string provid, Nullable<short> status)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getgrpconnreq_Result>("Getgrpconnreq", providParameter, statusParameter);
        }
    
        public virtual ObjectResult<gethosid_dp_Result> gethosid_dp(string asd)
        {
            var asdParameter = asd != null ?
                new ObjectParameter("Asd", asd) :
                new ObjectParameter("Asd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<gethosid_dp_Result>("gethosid_dp", asdParameter);
        }
    
        public virtual ObjectResult<string> gethosid_dp_demo(string asd)
        {
            var asdParameter = asd != null ?
                new ObjectParameter("Asd", asd) :
                new ObjectParameter("Asd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("gethosid_dp_demo", asdParameter);
        }
    
        public virtual ObjectResult<GetID_Result> GetID(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetID_Result>("GetID", emailParameter);
        }
    
        public virtual ObjectResult<string> getmaxCorp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getmaxCorp");
        }
    
        public virtual ObjectResult<string> getmaxdiaogid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getmaxdiaogid");
        }
    
        public virtual ObjectResult<string> getmaxdocid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getmaxdocid");
        }
    
        public virtual ObjectResult<string> getmaxhosid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getmaxhosid");
        }
    
        public virtual ObjectResult<string> getPatientId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getPatientId");
        }
    
        public virtual ObjectResult<Getprovconnreq_Result> Getprovconnreq(string provid, Nullable<short> status)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getprovconnreq_Result>("Getprovconnreq", providParameter, statusParameter);
        }
    
        public virtual ObjectResult<getqrydocrply_Result> getqrydocrply()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getqrydocrply_Result>("getqrydocrply");
        }
    
        public virtual ObjectResult<getQueries_Result> getQueries(string vcUsername)
        {
            var vcUsernameParameter = vcUsername != null ?
                new ObjectParameter("vcUsername", vcUsername) :
                new ObjectParameter("vcUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getQueries_Result>("getQueries", vcUsernameParameter);
        }
    
        public virtual ObjectResult<string> getQueryId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getQueryId");
        }
    
        public virtual ObjectResult<GetQueryProvList1_Result> GetQueryProvList1(string vcProvId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string vcProvName, Nullable<bool> bIsForDtUpdate)
        {
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var vcProvNameParameter = vcProvName != null ?
                new ObjectParameter("vcProvName", vcProvName) :
                new ObjectParameter("vcProvName", typeof(string));
    
            var bIsForDtUpdateParameter = bIsForDtUpdate.HasValue ?
                new ObjectParameter("bIsForDtUpdate", bIsForDtUpdate) :
                new ObjectParameter("bIsForDtUpdate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQueryProvList1_Result>("GetQueryProvList1", vcProvIdParameter, fromdateParameter, todateParameter, vcProvNameParameter, bIsForDtUpdateParameter);
        }
    
        public virtual int GetQueryProvList1_Dp(string vcProvId, string fromdate, string todate, string vcProvName, Nullable<bool> bIsForDtUpdate, Nullable<int> page)
        {
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var vcProvNameParameter = vcProvName != null ?
                new ObjectParameter("vcProvName", vcProvName) :
                new ObjectParameter("vcProvName", typeof(string));
    
            var bIsForDtUpdateParameter = bIsForDtUpdate.HasValue ?
                new ObjectParameter("bIsForDtUpdate", bIsForDtUpdate) :
                new ObjectParameter("bIsForDtUpdate", typeof(bool));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetQueryProvList1_Dp", vcProvIdParameter, fromdateParameter, todateParameter, vcProvNameParameter, bIsForDtUpdateParameter, pageParameter);
        }
    
        public virtual ObjectResult<GetQueryProvList2_Result> GetQueryProvList2(string vcProvId, string vcProvName)
        {
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var vcProvNameParameter = vcProvName != null ?
                new ObjectParameter("vcProvName", vcProvName) :
                new ObjectParameter("vcProvName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQueryProvList2_Result>("GetQueryProvList2", vcProvIdParameter, vcProvNameParameter);
        }
    
        public virtual int GetQueryProvList2_Dp(string vcProvId, string vcProvName, Nullable<int> page)
        {
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var vcProvNameParameter = vcProvName != null ?
                new ObjectParameter("vcProvName", vcProvName) :
                new ObjectParameter("vcProvName", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetQueryProvList2_Dp", vcProvIdParameter, vcProvNameParameter, pageParameter);
        }
    
        public virtual ObjectResult<GetQueryProvList3_Result> GetQueryProvList3(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<bool> bIsForDtUpdate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var bIsForDtUpdateParameter = bIsForDtUpdate.HasValue ?
                new ObjectParameter("bIsForDtUpdate", bIsForDtUpdate) :
                new ObjectParameter("bIsForDtUpdate", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQueryProvList3_Result>("GetQueryProvList3", fromdateParameter, todateParameter, bIsForDtUpdateParameter);
        }
    
        public virtual int GetQueryProvList3_Dp(string fromdate, string todate, Nullable<bool> bIsForDtUpdate, Nullable<int> page)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var bIsForDtUpdateParameter = bIsForDtUpdate.HasValue ?
                new ObjectParameter("bIsForDtUpdate", bIsForDtUpdate) :
                new ObjectParameter("bIsForDtUpdate", typeof(bool));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetQueryProvList3_Dp", fromdateParameter, todateParameter, bIsForDtUpdateParameter, pageParameter);
        }
    
        public virtual ObjectResult<GetQueryProvList4_Result> GetQueryProvList4(string vcProvId, string vcProvName, string vcPatientName)
        {
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var vcProvNameParameter = vcProvName != null ?
                new ObjectParameter("vcProvName", vcProvName) :
                new ObjectParameter("vcProvName", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQueryProvList4_Result>("GetQueryProvList4", vcProvIdParameter, vcProvNameParameter, vcPatientNameParameter);
        }
    
        public virtual int GetQueryProvList4_Dp(string vcProvId, string vcProvName, string vcPatientName, Nullable<int> page)
        {
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var vcProvNameParameter = vcProvName != null ?
                new ObjectParameter("vcProvName", vcProvName) :
                new ObjectParameter("vcProvName", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var pageParameter = page.HasValue ?
                new ObjectParameter("page", page) :
                new ObjectParameter("page", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetQueryProvList4_Dp", vcProvIdParameter, vcProvNameParameter, vcPatientNameParameter, pageParameter);
        }
    
        public virtual ObjectResult<getreferdoc_dp_Result> getreferdoc_dp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getreferdoc_dp_Result>("getreferdoc_dp");
        }
    
        public virtual int GetReferralDoctor(string city1, string city2, string city3, string proc1, string proc2, string proc3)
        {
            var city1Parameter = city1 != null ?
                new ObjectParameter("City1", city1) :
                new ObjectParameter("City1", typeof(string));
    
            var city2Parameter = city2 != null ?
                new ObjectParameter("City2", city2) :
                new ObjectParameter("City2", typeof(string));
    
            var city3Parameter = city3 != null ?
                new ObjectParameter("City3", city3) :
                new ObjectParameter("City3", typeof(string));
    
            var proc1Parameter = proc1 != null ?
                new ObjectParameter("proc1", proc1) :
                new ObjectParameter("proc1", typeof(string));
    
            var proc2Parameter = proc2 != null ?
                new ObjectParameter("proc2", proc2) :
                new ObjectParameter("proc2", typeof(string));
    
            var proc3Parameter = proc3 != null ?
                new ObjectParameter("proc3", proc3) :
                new ObjectParameter("proc3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetReferralDoctor", city1Parameter, city2Parameter, city3Parameter, proc1Parameter, proc2Parameter, proc3Parameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getReplyCount(string vcUsername)
        {
            var vcUsernameParameter = vcUsername != null ?
                new ObjectParameter("vcUsername", vcUsername) :
                new ObjectParameter("vcUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getReplyCount", vcUsernameParameter);
        }
    
        public virtual ObjectResult<string> getReplyId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getReplyId");
        }
    
        public virtual ObjectResult<string> getspecothername_dp(string spname)
        {
            var spnameParameter = spname != null ?
                new ObjectParameter("spname", spname) :
                new ObjectParameter("spname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getspecothername_dp", spnameParameter);
        }
    
        public virtual ObjectResult<string> getvcusername(string vcpatientid)
        {
            var vcpatientidParameter = vcpatientid != null ?
                new ObjectParameter("vcpatientid", vcpatientid) :
                new ObjectParameter("vcpatientid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getvcusername", vcpatientidParameter);
        }
    
        public virtual ObjectResult<groupmemMIS_dp_Result> groupmemMIS_dp(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<groupmemMIS_dp_Result>("groupmemMIS_dp", providParameter, fromParameter, toParameter);
        }
    
        public virtual int healthexchange_ins(string patientFirstName, string patientLastName, string patientGender, string patientMobile, string patientEmail, string patientAge, string patientCountry, string patientCity, string querypostedby, string patientBloodGroup, string patientTransplantType, string donorFirstName, string donorLastName, string donorGender, string otherFname, string otherLname, string donorAge, string donorBloodGroup, string otherRelawithPat, string postQuery, string relationwithPatient)
        {
            var patientFirstNameParameter = patientFirstName != null ?
                new ObjectParameter("PatientFirstName", patientFirstName) :
                new ObjectParameter("PatientFirstName", typeof(string));
    
            var patientLastNameParameter = patientLastName != null ?
                new ObjectParameter("PatientLastName", patientLastName) :
                new ObjectParameter("PatientLastName", typeof(string));
    
            var patientGenderParameter = patientGender != null ?
                new ObjectParameter("PatientGender", patientGender) :
                new ObjectParameter("PatientGender", typeof(string));
    
            var patientMobileParameter = patientMobile != null ?
                new ObjectParameter("PatientMobile", patientMobile) :
                new ObjectParameter("PatientMobile", typeof(string));
    
            var patientEmailParameter = patientEmail != null ?
                new ObjectParameter("PatientEmail", patientEmail) :
                new ObjectParameter("PatientEmail", typeof(string));
    
            var patientAgeParameter = patientAge != null ?
                new ObjectParameter("PatientAge", patientAge) :
                new ObjectParameter("PatientAge", typeof(string));
    
            var patientCountryParameter = patientCountry != null ?
                new ObjectParameter("PatientCountry", patientCountry) :
                new ObjectParameter("PatientCountry", typeof(string));
    
            var patientCityParameter = patientCity != null ?
                new ObjectParameter("PatientCity", patientCity) :
                new ObjectParameter("PatientCity", typeof(string));
    
            var querypostedbyParameter = querypostedby != null ?
                new ObjectParameter("querypostedby", querypostedby) :
                new ObjectParameter("querypostedby", typeof(string));
    
            var patientBloodGroupParameter = patientBloodGroup != null ?
                new ObjectParameter("PatientBloodGroup", patientBloodGroup) :
                new ObjectParameter("PatientBloodGroup", typeof(string));
    
            var patientTransplantTypeParameter = patientTransplantType != null ?
                new ObjectParameter("PatientTransplantType", patientTransplantType) :
                new ObjectParameter("PatientTransplantType", typeof(string));
    
            var donorFirstNameParameter = donorFirstName != null ?
                new ObjectParameter("DonorFirstName", donorFirstName) :
                new ObjectParameter("DonorFirstName", typeof(string));
    
            var donorLastNameParameter = donorLastName != null ?
                new ObjectParameter("DonorLastName", donorLastName) :
                new ObjectParameter("DonorLastName", typeof(string));
    
            var donorGenderParameter = donorGender != null ?
                new ObjectParameter("DonorGender", donorGender) :
                new ObjectParameter("DonorGender", typeof(string));
    
            var otherFnameParameter = otherFname != null ?
                new ObjectParameter("OtherFname", otherFname) :
                new ObjectParameter("OtherFname", typeof(string));
    
            var otherLnameParameter = otherLname != null ?
                new ObjectParameter("OtherLname", otherLname) :
                new ObjectParameter("OtherLname", typeof(string));
    
            var donorAgeParameter = donorAge != null ?
                new ObjectParameter("DonorAge", donorAge) :
                new ObjectParameter("DonorAge", typeof(string));
    
            var donorBloodGroupParameter = donorBloodGroup != null ?
                new ObjectParameter("DonorBloodGroup", donorBloodGroup) :
                new ObjectParameter("DonorBloodGroup", typeof(string));
    
            var otherRelawithPatParameter = otherRelawithPat != null ?
                new ObjectParameter("OtherRelawithPat", otherRelawithPat) :
                new ObjectParameter("OtherRelawithPat", typeof(string));
    
            var postQueryParameter = postQuery != null ?
                new ObjectParameter("PostQuery", postQuery) :
                new ObjectParameter("PostQuery", typeof(string));
    
            var relationwithPatientParameter = relationwithPatient != null ?
                new ObjectParameter("RelationwithPatient", relationwithPatient) :
                new ObjectParameter("RelationwithPatient", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("healthexchange_ins", patientFirstNameParameter, patientLastNameParameter, patientGenderParameter, patientMobileParameter, patientEmailParameter, patientAgeParameter, patientCountryParameter, patientCityParameter, querypostedbyParameter, patientBloodGroupParameter, patientTransplantTypeParameter, donorFirstNameParameter, donorLastNameParameter, donorGenderParameter, otherFnameParameter, otherLnameParameter, donorAgeParameter, donorBloodGroupParameter, otherRelawithPatParameter, postQueryParameter, relationwithPatientParameter);
        }
    
        public virtual int Healthstoreproductsearch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Healthstoreproductsearch");
        }
    
        public virtual ObjectResult<string> hlthins_dp(string istr, string hosid, string tieup)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var hosidParameter = hosid != null ?
                new ObjectParameter("hosid", hosid) :
                new ObjectParameter("hosid", typeof(string));
    
            var tieupParameter = tieup != null ?
                new ObjectParameter("tieup", tieup) :
                new ObjectParameter("tieup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("hlthins_dp", istrParameter, hosidParameter, tieupParameter);
        }
    
        public virtual ObjectResult<home_dp_Result> home_dp(string istr)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<home_dp_Result>("home_dp", istrParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> hospdata_db(string istr, Nullable<int> hd_id)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var hd_idParameter = hd_id.HasValue ?
                new ObjectParameter("hd_id", hd_id) :
                new ObjectParameter("hd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("hospdata_db", istrParameter, hd_idParameter);
        }
    
        public virtual int hospdtl_dp(string opd_name, string specialization_name, string city, string address, string hospital_name)
        {
            var opd_nameParameter = opd_name != null ?
                new ObjectParameter("opd_name", opd_name) :
                new ObjectParameter("opd_name", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("hospdtl_dp", opd_nameParameter, specialization_nameParameter, cityParameter, addressParameter, hospital_nameParameter);
        }
    
        public virtual int hosphealthtieup(string hos_id, string type, string tiesUp_With, string other_Info, string updated_By, Nullable<System.DateTime> updated_Datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var tiesUp_WithParameter = tiesUp_With != null ?
                new ObjectParameter("TiesUp_With", tiesUp_With) :
                new ObjectParameter("TiesUp_With", typeof(string));
    
            var other_InfoParameter = other_Info != null ?
                new ObjectParameter("Other_Info", other_Info) :
                new ObjectParameter("Other_Info", typeof(string));
    
            var updated_ByParameter = updated_By != null ?
                new ObjectParameter("Updated_By", updated_By) :
                new ObjectParameter("Updated_By", typeof(string));
    
            var updated_DatetimeParameter = updated_Datetime.HasValue ?
                new ObjectParameter("Updated_Datetime", updated_Datetime) :
                new ObjectParameter("Updated_Datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("hosphealthtieup", hos_idParameter, typeParameter, tiesUp_WithParameter, other_InfoParameter, updated_ByParameter, updated_DatetimeParameter);
        }
    
        public virtual ObjectResult<hospitaldetail_dp_Result> hospitaldetail_dp(string istr, string vcUserName)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<hospitaldetail_dp_Result>("hospitaldetail_dp", istrParameter, vcUserNameParameter);
        }
    
        public virtual int hospitalsearch_dp(string specialization_name, string hospital_name, string city, string opd_name, string istr, string address, string superSpeciality_name)
        {
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var opd_nameParameter = opd_name != null ?
                new ObjectParameter("opd_name", opd_name) :
                new ObjectParameter("opd_name", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var superSpeciality_nameParameter = superSpeciality_name != null ?
                new ObjectParameter("SuperSpeciality_name", superSpeciality_name) :
                new ObjectParameter("SuperSpeciality_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("hospitalsearch_dp", specialization_nameParameter, hospital_nameParameter, cityParameter, opd_nameParameter, istrParameter, addressParameter, superSpeciality_nameParameter);
        }
    
        public virtual ObjectResult<string> hosppkg_dp(string istr, string hos_id, string sPECIALITY_NAME)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var sPECIALITY_NAMEParameter = sPECIALITY_NAME != null ?
                new ObjectParameter("SPECIALITY_NAME", sPECIALITY_NAME) :
                new ObjectParameter("SPECIALITY_NAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("hosppkg_dp", istrParameter, hos_idParameter, sPECIALITY_NAMEParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Inputform_dp(string istr, string doc_id, string hos_id, string pname, string type, string tiesUp_With, string ward_type, string facility_Name, string sPECIALITY_NAME, Nullable<int> intHpId, string experience1)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("Hos_id", hos_id) :
                new ObjectParameter("Hos_id", typeof(string));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("Pname", pname) :
                new ObjectParameter("Pname", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var tiesUp_WithParameter = tiesUp_With != null ?
                new ObjectParameter("TiesUp_With", tiesUp_With) :
                new ObjectParameter("TiesUp_With", typeof(string));
    
            var ward_typeParameter = ward_type != null ?
                new ObjectParameter("ward_type", ward_type) :
                new ObjectParameter("ward_type", typeof(string));
    
            var facility_NameParameter = facility_Name != null ?
                new ObjectParameter("Facility_Name", facility_Name) :
                new ObjectParameter("Facility_Name", typeof(string));
    
            var sPECIALITY_NAMEParameter = sPECIALITY_NAME != null ?
                new ObjectParameter("SPECIALITY_NAME", sPECIALITY_NAME) :
                new ObjectParameter("SPECIALITY_NAME", typeof(string));
    
            var intHpIdParameter = intHpId.HasValue ?
                new ObjectParameter("intHpId", intHpId) :
                new ObjectParameter("intHpId", typeof(int));
    
            var experience1Parameter = experience1 != null ?
                new ObjectParameter("experience1", experience1) :
                new ObjectParameter("experience1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Inputform_dp", istrParameter, doc_idParameter, hos_idParameter, pnameParameter, typeParameter, tiesUp_WithParameter, ward_typeParameter, facility_NameParameter, sPECIALITY_NAMEParameter, intHpIdParameter, experience1Parameter);
        }
    
        public virtual int insbkmydiscuDocHos_dp(string vcName, string vcContactNo, string vcEmailID, string vcOrderID, string dttm_preferdDate, string vcPreferdTime, string vcDiseaseDesc, string vcBookOpFor)
        {
            var vcNameParameter = vcName != null ?
                new ObjectParameter("vcName", vcName) :
                new ObjectParameter("vcName", typeof(string));
    
            var vcContactNoParameter = vcContactNo != null ?
                new ObjectParameter("vcContactNo", vcContactNo) :
                new ObjectParameter("vcContactNo", typeof(string));
    
            var vcEmailIDParameter = vcEmailID != null ?
                new ObjectParameter("vcEmailID", vcEmailID) :
                new ObjectParameter("vcEmailID", typeof(string));
    
            var vcOrderIDParameter = vcOrderID != null ?
                new ObjectParameter("vcOrderID", vcOrderID) :
                new ObjectParameter("vcOrderID", typeof(string));
    
            var dttm_preferdDateParameter = dttm_preferdDate != null ?
                new ObjectParameter("dttm_preferdDate", dttm_preferdDate) :
                new ObjectParameter("dttm_preferdDate", typeof(string));
    
            var vcPreferdTimeParameter = vcPreferdTime != null ?
                new ObjectParameter("vcPreferdTime", vcPreferdTime) :
                new ObjectParameter("vcPreferdTime", typeof(string));
    
            var vcDiseaseDescParameter = vcDiseaseDesc != null ?
                new ObjectParameter("vcDiseaseDesc", vcDiseaseDesc) :
                new ObjectParameter("vcDiseaseDesc", typeof(string));
    
            var vcBookOpForParameter = vcBookOpFor != null ?
                new ObjectParameter("vcBookOpFor", vcBookOpFor) :
                new ObjectParameter("vcBookOpFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insbkmydiscuDocHos_dp", vcNameParameter, vcContactNoParameter, vcEmailIDParameter, vcOrderIDParameter, dttm_preferdDateParameter, vcPreferdTimeParameter, vcDiseaseDescParameter, vcBookOpForParameter);
        }
    
        public virtual int insdetailacc_dp(string vcOrderID, Nullable<int> iAccessCount, string vcAccessDetailFor, string vcUserName)
        {
            var vcOrderIDParameter = vcOrderID != null ?
                new ObjectParameter("vcOrderID", vcOrderID) :
                new ObjectParameter("vcOrderID", typeof(string));
    
            var iAccessCountParameter = iAccessCount.HasValue ?
                new ObjectParameter("iAccessCount", iAccessCount) :
                new ObjectParameter("iAccessCount", typeof(int));
    
            var vcAccessDetailForParameter = vcAccessDetailFor != null ?
                new ObjectParameter("vcAccessDetailFor", vcAccessDetailFor) :
                new ObjectParameter("vcAccessDetailFor", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insdetailacc_dp", vcOrderIDParameter, iAccessCountParameter, vcAccessDetailForParameter, vcUserNameParameter);
        }
    
        public virtual int insdocdet_dp(string doc_id, string first_name, string middle_name, string last_name, Nullable<System.DateTime> date_of_birth, string address, string city, Nullable<decimal> pincode, string primary_std, string primary_phone, string secondry_std, string secondry_phone, string web_url, string email, string qualification1, string specialization_name1, Nullable<decimal> year1, string institute1, string qualification2, string specialization_name2, Nullable<decimal> year2, string institute2, string qualification3, string specialization_name3, Nullable<decimal> year3, string institute3, string qualification4, string specialization_name4, Nullable<decimal> year4, string institute4, string registration_No, Nullable<decimal> consultation_Fee, string experience1, string updated_by, Nullable<System.DateTime> updated_DateTime, string designation, string approval, Nullable<decimal> category_code, string vcUserName)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var primary_stdParameter = primary_std != null ?
                new ObjectParameter("primary_std", primary_std) :
                new ObjectParameter("primary_std", typeof(string));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var secondry_stdParameter = secondry_std != null ?
                new ObjectParameter("secondry_std", secondry_std) :
                new ObjectParameter("secondry_std", typeof(string));
    
            var secondry_phoneParameter = secondry_phone != null ?
                new ObjectParameter("secondry_phone", secondry_phone) :
                new ObjectParameter("secondry_phone", typeof(string));
    
            var web_urlParameter = web_url != null ?
                new ObjectParameter("web_url", web_url) :
                new ObjectParameter("web_url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var qualification1Parameter = qualification1 != null ?
                new ObjectParameter("Qualification1", qualification1) :
                new ObjectParameter("Qualification1", typeof(string));
    
            var specialization_name1Parameter = specialization_name1 != null ?
                new ObjectParameter("specialization_name1", specialization_name1) :
                new ObjectParameter("specialization_name1", typeof(string));
    
            var year1Parameter = year1.HasValue ?
                new ObjectParameter("year1", year1) :
                new ObjectParameter("year1", typeof(decimal));
    
            var institute1Parameter = institute1 != null ?
                new ObjectParameter("institute1", institute1) :
                new ObjectParameter("institute1", typeof(string));
    
            var qualification2Parameter = qualification2 != null ?
                new ObjectParameter("qualification2", qualification2) :
                new ObjectParameter("qualification2", typeof(string));
    
            var specialization_name2Parameter = specialization_name2 != null ?
                new ObjectParameter("specialization_name2", specialization_name2) :
                new ObjectParameter("specialization_name2", typeof(string));
    
            var year2Parameter = year2.HasValue ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(decimal));
    
            var institute2Parameter = institute2 != null ?
                new ObjectParameter("institute2", institute2) :
                new ObjectParameter("institute2", typeof(string));
    
            var qualification3Parameter = qualification3 != null ?
                new ObjectParameter("Qualification3", qualification3) :
                new ObjectParameter("Qualification3", typeof(string));
    
            var specialization_name3Parameter = specialization_name3 != null ?
                new ObjectParameter("specialization_name3", specialization_name3) :
                new ObjectParameter("specialization_name3", typeof(string));
    
            var year3Parameter = year3.HasValue ?
                new ObjectParameter("year3", year3) :
                new ObjectParameter("year3", typeof(decimal));
    
            var institute3Parameter = institute3 != null ?
                new ObjectParameter("institute3", institute3) :
                new ObjectParameter("institute3", typeof(string));
    
            var qualification4Parameter = qualification4 != null ?
                new ObjectParameter("qualification4", qualification4) :
                new ObjectParameter("qualification4", typeof(string));
    
            var specialization_name4Parameter = specialization_name4 != null ?
                new ObjectParameter("specialization_name4", specialization_name4) :
                new ObjectParameter("specialization_name4", typeof(string));
    
            var year4Parameter = year4.HasValue ?
                new ObjectParameter("year4", year4) :
                new ObjectParameter("year4", typeof(decimal));
    
            var institute4Parameter = institute4 != null ?
                new ObjectParameter("institute4", institute4) :
                new ObjectParameter("institute4", typeof(string));
    
            var registration_NoParameter = registration_No != null ?
                new ObjectParameter("Registration_No", registration_No) :
                new ObjectParameter("Registration_No", typeof(string));
    
            var consultation_FeeParameter = consultation_Fee.HasValue ?
                new ObjectParameter("Consultation_Fee", consultation_Fee) :
                new ObjectParameter("Consultation_Fee", typeof(decimal));
    
            var experience1Parameter = experience1 != null ?
                new ObjectParameter("experience1", experience1) :
                new ObjectParameter("experience1", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_DateTimeParameter = updated_DateTime.HasValue ?
                new ObjectParameter("updated_DateTime", updated_DateTime) :
                new ObjectParameter("updated_DateTime", typeof(System.DateTime));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var approvalParameter = approval != null ?
                new ObjectParameter("approval", approval) :
                new ObjectParameter("approval", typeof(string));
    
            var category_codeParameter = category_code.HasValue ?
                new ObjectParameter("category_code", category_code) :
                new ObjectParameter("category_code", typeof(decimal));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insdocdet_dp", doc_idParameter, first_nameParameter, middle_nameParameter, last_nameParameter, date_of_birthParameter, addressParameter, cityParameter, pincodeParameter, primary_stdParameter, primary_phoneParameter, secondry_stdParameter, secondry_phoneParameter, web_urlParameter, emailParameter, qualification1Parameter, specialization_name1Parameter, year1Parameter, institute1Parameter, qualification2Parameter, specialization_name2Parameter, year2Parameter, institute2Parameter, qualification3Parameter, specialization_name3Parameter, year3Parameter, institute3Parameter, qualification4Parameter, specialization_name4Parameter, year4Parameter, institute4Parameter, registration_NoParameter, consultation_FeeParameter, experience1Parameter, updated_byParameter, updated_DateTimeParameter, designationParameter, approvalParameter, category_codeParameter, vcUserNameParameter);
        }
    
        public virtual int Insertdoctorclinictiming_dp(Nullable<bool> chk, string doc_id, string start_time, string end_time, string day_name, string updated_by, string category_name1, string category_name2, string category_name3, string category_name4, string clinic_address, string clinic_city, Nullable<bool> have_selfClinic, string clinic_phone, Nullable<decimal> no_of_beds, Nullable<bool> have_xray, Nullable<bool> have_ultrasound, Nullable<bool> credit_card_accepted, Nullable<bool> emergency_available, Nullable<bool> home_visit)
        {
            var chkParameter = chk.HasValue ?
                new ObjectParameter("chk", chk) :
                new ObjectParameter("chk", typeof(bool));
    
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var start_timeParameter = start_time != null ?
                new ObjectParameter("start_time", start_time) :
                new ObjectParameter("start_time", typeof(string));
    
            var end_timeParameter = end_time != null ?
                new ObjectParameter("end_time", end_time) :
                new ObjectParameter("end_time", typeof(string));
    
            var day_nameParameter = day_name != null ?
                new ObjectParameter("day_name", day_name) :
                new ObjectParameter("day_name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var category_name1Parameter = category_name1 != null ?
                new ObjectParameter("category_name1", category_name1) :
                new ObjectParameter("category_name1", typeof(string));
    
            var category_name2Parameter = category_name2 != null ?
                new ObjectParameter("category_name2", category_name2) :
                new ObjectParameter("category_name2", typeof(string));
    
            var category_name3Parameter = category_name3 != null ?
                new ObjectParameter("category_name3", category_name3) :
                new ObjectParameter("category_name3", typeof(string));
    
            var category_name4Parameter = category_name4 != null ?
                new ObjectParameter("category_name4", category_name4) :
                new ObjectParameter("category_name4", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var have_selfClinicParameter = have_selfClinic.HasValue ?
                new ObjectParameter("have_selfClinic", have_selfClinic) :
                new ObjectParameter("have_selfClinic", typeof(bool));
    
            var clinic_phoneParameter = clinic_phone != null ?
                new ObjectParameter("clinic_phone", clinic_phone) :
                new ObjectParameter("clinic_phone", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(decimal));
    
            var have_xrayParameter = have_xray.HasValue ?
                new ObjectParameter("have_xray", have_xray) :
                new ObjectParameter("have_xray", typeof(bool));
    
            var have_ultrasoundParameter = have_ultrasound.HasValue ?
                new ObjectParameter("have_ultrasound", have_ultrasound) :
                new ObjectParameter("have_ultrasound", typeof(bool));
    
            var credit_card_acceptedParameter = credit_card_accepted.HasValue ?
                new ObjectParameter("credit_card_accepted", credit_card_accepted) :
                new ObjectParameter("credit_card_accepted", typeof(bool));
    
            var emergency_availableParameter = emergency_available.HasValue ?
                new ObjectParameter("emergency_available", emergency_available) :
                new ObjectParameter("emergency_available", typeof(bool));
    
            var home_visitParameter = home_visit.HasValue ?
                new ObjectParameter("home_visit", home_visit) :
                new ObjectParameter("home_visit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insertdoctorclinictiming_dp", chkParameter, doc_idParameter, start_timeParameter, end_timeParameter, day_nameParameter, updated_byParameter, category_name1Parameter, category_name2Parameter, category_name3Parameter, category_name4Parameter, clinic_addressParameter, clinic_cityParameter, have_selfClinicParameter, clinic_phoneParameter, no_of_bedsParameter, have_xrayParameter, have_ultrasoundParameter, credit_card_acceptedParameter, emergency_availableParameter, home_visitParameter);
        }
    
        public virtual int InsertIns_dp(string vcFirstName, string vcLastName, string vcAddress, string vcCity, string vcMobile, string vcEmail, string vcPolicyProvider, string vcPolicyName, Nullable<System.DateTime> vcExpiryDate, string vcPremiumPaid, string vcInsuranceStatus, string intNoofMem, string vcAge)
        {
            var vcFirstNameParameter = vcFirstName != null ?
                new ObjectParameter("vcFirstName", vcFirstName) :
                new ObjectParameter("vcFirstName", typeof(string));
    
            var vcLastNameParameter = vcLastName != null ?
                new ObjectParameter("vcLastName", vcLastName) :
                new ObjectParameter("vcLastName", typeof(string));
    
            var vcAddressParameter = vcAddress != null ?
                new ObjectParameter("vcAddress", vcAddress) :
                new ObjectParameter("vcAddress", typeof(string));
    
            var vcCityParameter = vcCity != null ?
                new ObjectParameter("vcCity", vcCity) :
                new ObjectParameter("vcCity", typeof(string));
    
            var vcMobileParameter = vcMobile != null ?
                new ObjectParameter("vcMobile", vcMobile) :
                new ObjectParameter("vcMobile", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var vcPolicyProviderParameter = vcPolicyProvider != null ?
                new ObjectParameter("vcPolicyProvider", vcPolicyProvider) :
                new ObjectParameter("vcPolicyProvider", typeof(string));
    
            var vcPolicyNameParameter = vcPolicyName != null ?
                new ObjectParameter("vcPolicyName", vcPolicyName) :
                new ObjectParameter("vcPolicyName", typeof(string));
    
            var vcExpiryDateParameter = vcExpiryDate.HasValue ?
                new ObjectParameter("vcExpiryDate", vcExpiryDate) :
                new ObjectParameter("vcExpiryDate", typeof(System.DateTime));
    
            var vcPremiumPaidParameter = vcPremiumPaid != null ?
                new ObjectParameter("vcPremiumPaid", vcPremiumPaid) :
                new ObjectParameter("vcPremiumPaid", typeof(string));
    
            var vcInsuranceStatusParameter = vcInsuranceStatus != null ?
                new ObjectParameter("vcInsuranceStatus", vcInsuranceStatus) :
                new ObjectParameter("vcInsuranceStatus", typeof(string));
    
            var intNoofMemParameter = intNoofMem != null ?
                new ObjectParameter("intNoofMem", intNoofMem) :
                new ObjectParameter("intNoofMem", typeof(string));
    
            var vcAgeParameter = vcAge != null ?
                new ObjectParameter("vcAge", vcAge) :
                new ObjectParameter("vcAge", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertIns_dp", vcFirstNameParameter, vcLastNameParameter, vcAddressParameter, vcCityParameter, vcMobileParameter, vcEmailParameter, vcPolicyProviderParameter, vcPolicyNameParameter, vcExpiryDateParameter, vcPremiumPaidParameter, vcInsuranceStatusParameter, intNoofMemParameter, vcAgeParameter);
        }
    
        public virtual int insertmydisc_dp(string vcProviderId, string vcNukeFname, string vcNukeLname, string vcNukeEmail, string vcNukeUnit, string vcNukeStreet, string vcNukeCity, string vcNukeState, string vcNukeCountry, string vcNukePostalcode, string vcNukeCategory, string vcNukeCell, string vcProviderType, Nullable<decimal> s_Points, Nullable<decimal> r_Points, string vcUserName, string vcRoleType, Nullable<System.DateTime> dtupdationDate, string vcUpdatedBy)
        {
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcNukeFnameParameter = vcNukeFname != null ?
                new ObjectParameter("vcNukeFname", vcNukeFname) :
                new ObjectParameter("vcNukeFname", typeof(string));
    
            var vcNukeLnameParameter = vcNukeLname != null ?
                new ObjectParameter("vcNukeLname", vcNukeLname) :
                new ObjectParameter("vcNukeLname", typeof(string));
    
            var vcNukeEmailParameter = vcNukeEmail != null ?
                new ObjectParameter("vcNukeEmail", vcNukeEmail) :
                new ObjectParameter("vcNukeEmail", typeof(string));
    
            var vcNukeUnitParameter = vcNukeUnit != null ?
                new ObjectParameter("vcNukeUnit", vcNukeUnit) :
                new ObjectParameter("vcNukeUnit", typeof(string));
    
            var vcNukeStreetParameter = vcNukeStreet != null ?
                new ObjectParameter("vcNukeStreet", vcNukeStreet) :
                new ObjectParameter("vcNukeStreet", typeof(string));
    
            var vcNukeCityParameter = vcNukeCity != null ?
                new ObjectParameter("vcNukeCity", vcNukeCity) :
                new ObjectParameter("vcNukeCity", typeof(string));
    
            var vcNukeStateParameter = vcNukeState != null ?
                new ObjectParameter("vcNukeState", vcNukeState) :
                new ObjectParameter("vcNukeState", typeof(string));
    
            var vcNukeCountryParameter = vcNukeCountry != null ?
                new ObjectParameter("vcNukeCountry", vcNukeCountry) :
                new ObjectParameter("vcNukeCountry", typeof(string));
    
            var vcNukePostalcodeParameter = vcNukePostalcode != null ?
                new ObjectParameter("vcNukePostalcode", vcNukePostalcode) :
                new ObjectParameter("vcNukePostalcode", typeof(string));
    
            var vcNukeCategoryParameter = vcNukeCategory != null ?
                new ObjectParameter("vcNukeCategory", vcNukeCategory) :
                new ObjectParameter("vcNukeCategory", typeof(string));
    
            var vcNukeCellParameter = vcNukeCell != null ?
                new ObjectParameter("vcNukeCell", vcNukeCell) :
                new ObjectParameter("vcNukeCell", typeof(string));
    
            var vcProviderTypeParameter = vcProviderType != null ?
                new ObjectParameter("vcProviderType", vcProviderType) :
                new ObjectParameter("vcProviderType", typeof(string));
    
            var s_PointsParameter = s_Points.HasValue ?
                new ObjectParameter("S_Points", s_Points) :
                new ObjectParameter("S_Points", typeof(decimal));
    
            var r_PointsParameter = r_Points.HasValue ?
                new ObjectParameter("R_Points", r_Points) :
                new ObjectParameter("R_Points", typeof(decimal));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var dtupdationDateParameter = dtupdationDate.HasValue ?
                new ObjectParameter("dtupdationDate", dtupdationDate) :
                new ObjectParameter("dtupdationDate", typeof(System.DateTime));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertmydisc_dp", vcProviderIdParameter, vcNukeFnameParameter, vcNukeLnameParameter, vcNukeEmailParameter, vcNukeUnitParameter, vcNukeStreetParameter, vcNukeCityParameter, vcNukeStateParameter, vcNukeCountryParameter, vcNukePostalcodeParameter, vcNukeCategoryParameter, vcNukeCellParameter, vcProviderTypeParameter, s_PointsParameter, r_PointsParameter, vcUserNameParameter, vcRoleTypeParameter, dtupdationDateParameter, vcUpdatedByParameter);
        }
    
        public virtual int insertmydisc_dp1(string vcPatientId, string vcQueryId, string vcReplyId, string vcUserName, string vcReplyMessage, string vcSenderId, string vcRepContact, string vcRepDesig, string vcRepliedBy, Nullable<System.DateTime> dtUpdationDate, string vcSenderName, string vcSenderType, string vcShowRpl, string vcChildSenderId, string vcChildSenderName, string vcRefhosp1, string vcRefhosp2, string vcRefhosp3, string vcreplymsgupdate, string refer1, string refer2, string refer3, string referhos1, string referhos2, string referhos3, string rdoc1, string rdoc2, string rdoc3)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcReplyIdParameter = vcReplyId != null ?
                new ObjectParameter("vcReplyId", vcReplyId) :
                new ObjectParameter("vcReplyId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcReplyMessageParameter = vcReplyMessage != null ?
                new ObjectParameter("vcReplyMessage", vcReplyMessage) :
                new ObjectParameter("vcReplyMessage", typeof(string));
    
            var vcSenderIdParameter = vcSenderId != null ?
                new ObjectParameter("vcSenderId", vcSenderId) :
                new ObjectParameter("vcSenderId", typeof(string));
    
            var vcRepContactParameter = vcRepContact != null ?
                new ObjectParameter("vcRepContact", vcRepContact) :
                new ObjectParameter("vcRepContact", typeof(string));
    
            var vcRepDesigParameter = vcRepDesig != null ?
                new ObjectParameter("vcRepDesig", vcRepDesig) :
                new ObjectParameter("vcRepDesig", typeof(string));
    
            var vcRepliedByParameter = vcRepliedBy != null ?
                new ObjectParameter("vcRepliedBy", vcRepliedBy) :
                new ObjectParameter("vcRepliedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcSenderTypeParameter = vcSenderType != null ?
                new ObjectParameter("vcSenderType", vcSenderType) :
                new ObjectParameter("vcSenderType", typeof(string));
    
            var vcShowRplParameter = vcShowRpl != null ?
                new ObjectParameter("vcShowRpl", vcShowRpl) :
                new ObjectParameter("vcShowRpl", typeof(string));
    
            var vcChildSenderIdParameter = vcChildSenderId != null ?
                new ObjectParameter("vcChildSenderId", vcChildSenderId) :
                new ObjectParameter("vcChildSenderId", typeof(string));
    
            var vcChildSenderNameParameter = vcChildSenderName != null ?
                new ObjectParameter("vcChildSenderName", vcChildSenderName) :
                new ObjectParameter("vcChildSenderName", typeof(string));
    
            var vcRefhosp1Parameter = vcRefhosp1 != null ?
                new ObjectParameter("vcRefhosp1", vcRefhosp1) :
                new ObjectParameter("vcRefhosp1", typeof(string));
    
            var vcRefhosp2Parameter = vcRefhosp2 != null ?
                new ObjectParameter("vcRefhosp2", vcRefhosp2) :
                new ObjectParameter("vcRefhosp2", typeof(string));
    
            var vcRefhosp3Parameter = vcRefhosp3 != null ?
                new ObjectParameter("vcRefhosp3", vcRefhosp3) :
                new ObjectParameter("vcRefhosp3", typeof(string));
    
            var vcreplymsgupdateParameter = vcreplymsgupdate != null ?
                new ObjectParameter("vcreplymsgupdate", vcreplymsgupdate) :
                new ObjectParameter("vcreplymsgupdate", typeof(string));
    
            var refer1Parameter = refer1 != null ?
                new ObjectParameter("refer1", refer1) :
                new ObjectParameter("refer1", typeof(string));
    
            var refer2Parameter = refer2 != null ?
                new ObjectParameter("refer2", refer2) :
                new ObjectParameter("refer2", typeof(string));
    
            var refer3Parameter = refer3 != null ?
                new ObjectParameter("refer3", refer3) :
                new ObjectParameter("refer3", typeof(string));
    
            var referhos1Parameter = referhos1 != null ?
                new ObjectParameter("referhos1", referhos1) :
                new ObjectParameter("referhos1", typeof(string));
    
            var referhos2Parameter = referhos2 != null ?
                new ObjectParameter("referhos2", referhos2) :
                new ObjectParameter("referhos2", typeof(string));
    
            var referhos3Parameter = referhos3 != null ?
                new ObjectParameter("referhos3", referhos3) :
                new ObjectParameter("referhos3", typeof(string));
    
            var rdoc1Parameter = rdoc1 != null ?
                new ObjectParameter("Rdoc1", rdoc1) :
                new ObjectParameter("Rdoc1", typeof(string));
    
            var rdoc2Parameter = rdoc2 != null ?
                new ObjectParameter("Rdoc2", rdoc2) :
                new ObjectParameter("Rdoc2", typeof(string));
    
            var rdoc3Parameter = rdoc3 != null ?
                new ObjectParameter("Rdoc3", rdoc3) :
                new ObjectParameter("Rdoc3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertmydisc_dp1", vcPatientIdParameter, vcQueryIdParameter, vcReplyIdParameter, vcUserNameParameter, vcReplyMessageParameter, vcSenderIdParameter, vcRepContactParameter, vcRepDesigParameter, vcRepliedByParameter, dtUpdationDateParameter, vcSenderNameParameter, vcSenderTypeParameter, vcShowRplParameter, vcChildSenderIdParameter, vcChildSenderNameParameter, vcRefhosp1Parameter, vcRefhosp2Parameter, vcRefhosp3Parameter, vcreplymsgupdateParameter, refer1Parameter, refer2Parameter, refer3Parameter, referhos1Parameter, referhos2Parameter, referhos3Parameter, rdoc1Parameter, rdoc2Parameter, rdoc3Parameter);
        }
    
        public virtual int insertmydisc_dp2(string vcSenderId, string vcQueryId, string vcPointId)
        {
            var vcSenderIdParameter = vcSenderId != null ?
                new ObjectParameter("vcSenderId", vcSenderId) :
                new ObjectParameter("vcSenderId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertmydisc_dp2", vcSenderIdParameter, vcQueryIdParameter, vcPointIdParameter);
        }
    
        public virtual int insertmydiss_dp(string vcPatientId, string vcToPatientId, string vcRepType, string vcToUser, Nullable<int> intPostId, string vcRepMsg, string vcSenderName, string vcUserName)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcToUserParameter = vcToUser != null ?
                new ObjectParameter("vcToUser", vcToUser) :
                new ObjectParameter("vcToUser", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertmydiss_dp", vcPatientIdParameter, vcToPatientIdParameter, vcRepTypeParameter, vcToUserParameter, intPostIdParameter, vcRepMsgParameter, vcSenderNameParameter, vcUserNameParameter);
        }
    
        public virtual int insertquerypoints__dp(string vcServiceName, Nullable<decimal> intPoints, string vcPointId)
        {
            var vcServiceNameParameter = vcServiceName != null ?
                new ObjectParameter("vcServiceName", vcServiceName) :
                new ObjectParameter("vcServiceName", typeof(string));
    
            var intPointsParameter = intPoints.HasValue ?
                new ObjectParameter("intPoints", intPoints) :
                new ObjectParameter("intPoints", typeof(decimal));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertquerypoints__dp", vcServiceNameParameter, intPointsParameter, vcPointIdParameter);
        }
    
        public virtual int insertupdateassignpoints_dp(string vcPointId, string vcChildPointId, string vcChildServiceName, string vcQueryId, Nullable<decimal> inPoints, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcPatientId)
        {
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            var vcChildPointIdParameter = vcChildPointId != null ?
                new ObjectParameter("vcChildPointId", vcChildPointId) :
                new ObjectParameter("vcChildPointId", typeof(string));
    
            var vcChildServiceNameParameter = vcChildServiceName != null ?
                new ObjectParameter("vcChildServiceName", vcChildServiceName) :
                new ObjectParameter("vcChildServiceName", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var inPointsParameter = inPoints.HasValue ?
                new ObjectParameter("inPoints", inPoints) :
                new ObjectParameter("inPoints", typeof(decimal));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertupdateassignpoints_dp", vcPointIdParameter, vcChildPointIdParameter, vcChildServiceNameParameter, vcQueryIdParameter, inPointsParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcPatientIdParameter);
        }
    
        public virtual int insmydiscuDocHos_dp(string vcPatientId, string vcQueryId, string vcReplyId, string vcMemberName, string vcUserName, string vcReplyMessage, Nullable<bool> btIsApprove, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcSenderId, string vcSenderName, string vcRepContact, string vcRepDesig, string vcRepliedBy, string vcSenderType, string recordId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcReplyIdParameter = vcReplyId != null ?
                new ObjectParameter("vcReplyId", vcReplyId) :
                new ObjectParameter("vcReplyId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcReplyMessageParameter = vcReplyMessage != null ?
                new ObjectParameter("vcReplyMessage", vcReplyMessage) :
                new ObjectParameter("vcReplyMessage", typeof(string));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcSenderIdParameter = vcSenderId != null ?
                new ObjectParameter("vcSenderId", vcSenderId) :
                new ObjectParameter("vcSenderId", typeof(string));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcRepContactParameter = vcRepContact != null ?
                new ObjectParameter("vcRepContact", vcRepContact) :
                new ObjectParameter("vcRepContact", typeof(string));
    
            var vcRepDesigParameter = vcRepDesig != null ?
                new ObjectParameter("vcRepDesig", vcRepDesig) :
                new ObjectParameter("vcRepDesig", typeof(string));
    
            var vcRepliedByParameter = vcRepliedBy != null ?
                new ObjectParameter("vcRepliedBy", vcRepliedBy) :
                new ObjectParameter("vcRepliedBy", typeof(string));
    
            var vcSenderTypeParameter = vcSenderType != null ?
                new ObjectParameter("vcSenderType", vcSenderType) :
                new ObjectParameter("vcSenderType", typeof(string));
    
            var recordIdParameter = recordId != null ?
                new ObjectParameter("RecordId", recordId) :
                new ObjectParameter("RecordId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insmydiscuDocHos_dp", vcPatientIdParameter, vcQueryIdParameter, vcReplyIdParameter, vcMemberNameParameter, vcUserNameParameter, vcReplyMessageParameter, btIsApproveParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcSenderIdParameter, vcSenderNameParameter, vcRepContactParameter, vcRepDesigParameter, vcRepliedByParameter, vcSenderTypeParameter, recordIdParameter);
        }
    
        public virtual int int_patientinsertion(string vcMemberName, string vcPatientName, string vcPatientEmail, string vcPatientPhone, string vcPatientGender, string vcPatientAge, string vcQuery, Nullable<bool> btIsApprove, Nullable<bool> btIsAssignDeptt, string vcTreatmentCity, string vcPatientCity, string vcCountry)
        {
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var vcPatientEmailParameter = vcPatientEmail != null ?
                new ObjectParameter("vcPatientEmail", vcPatientEmail) :
                new ObjectParameter("vcPatientEmail", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            var vcPatientGenderParameter = vcPatientGender != null ?
                new ObjectParameter("vcPatientGender", vcPatientGender) :
                new ObjectParameter("vcPatientGender", typeof(string));
    
            var vcPatientAgeParameter = vcPatientAge != null ?
                new ObjectParameter("vcPatientAge", vcPatientAge) :
                new ObjectParameter("vcPatientAge", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            var vcTreatmentCityParameter = vcTreatmentCity != null ?
                new ObjectParameter("vcTreatmentCity", vcTreatmentCity) :
                new ObjectParameter("vcTreatmentCity", typeof(string));
    
            var vcPatientCityParameter = vcPatientCity != null ?
                new ObjectParameter("vcPatientCity", vcPatientCity) :
                new ObjectParameter("vcPatientCity", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("int_patientinsertion", vcMemberNameParameter, vcPatientNameParameter, vcPatientEmailParameter, vcPatientPhoneParameter, vcPatientGenderParameter, vcPatientAgeParameter, vcQueryParameter, btIsApproveParameter, btIsAssignDepttParameter, vcTreatmentCityParameter, vcPatientCityParameter, vcCountryParameter);
        }
    
        public virtual int int_patientinsertion_New(string vcPatientId, string vcQueryId, string vcSubject, string vcPatientName, string vcPatientEmail, string vcPatientPhone, string vcPatientGender, string vcPatientAge, string vcQuery, Nullable<bool> btIsApprove, Nullable<bool> btIsAssignDeptt, string vcTreatmentCity, string vcPatientCity, string vcCountry)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcSubjectParameter = vcSubject != null ?
                new ObjectParameter("vcSubject", vcSubject) :
                new ObjectParameter("vcSubject", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var vcPatientEmailParameter = vcPatientEmail != null ?
                new ObjectParameter("vcPatientEmail", vcPatientEmail) :
                new ObjectParameter("vcPatientEmail", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            var vcPatientGenderParameter = vcPatientGender != null ?
                new ObjectParameter("vcPatientGender", vcPatientGender) :
                new ObjectParameter("vcPatientGender", typeof(string));
    
            var vcPatientAgeParameter = vcPatientAge != null ?
                new ObjectParameter("vcPatientAge", vcPatientAge) :
                new ObjectParameter("vcPatientAge", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            var vcTreatmentCityParameter = vcTreatmentCity != null ?
                new ObjectParameter("vcTreatmentCity", vcTreatmentCity) :
                new ObjectParameter("vcTreatmentCity", typeof(string));
    
            var vcPatientCityParameter = vcPatientCity != null ?
                new ObjectParameter("vcPatientCity", vcPatientCity) :
                new ObjectParameter("vcPatientCity", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("int_patientinsertion_New", vcPatientIdParameter, vcQueryIdParameter, vcSubjectParameter, vcPatientNameParameter, vcPatientEmailParameter, vcPatientPhoneParameter, vcPatientGenderParameter, vcPatientAgeParameter, vcQueryParameter, btIsApproveParameter, btIsAssignDepttParameter, vcTreatmentCityParameter, vcPatientCityParameter, vcCountryParameter);
        }
    
        public virtual int int_patientinsertion_NewInt(string vcPatientId, string vcQueryId, string vcMemberName, string vcQuery, string vcTreatmentCity, string vcPatientName, string vcPatientAge, string vcPatientGender, string vcPatientEmail, string vcPatientPhone, string vcPatientCity, string vcCountry, Nullable<bool> btIsApprove, Nullable<bool> btIsAssignDeptt)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcTreatmentCityParameter = vcTreatmentCity != null ?
                new ObjectParameter("vcTreatmentCity", vcTreatmentCity) :
                new ObjectParameter("vcTreatmentCity", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var vcPatientAgeParameter = vcPatientAge != null ?
                new ObjectParameter("vcPatientAge", vcPatientAge) :
                new ObjectParameter("vcPatientAge", typeof(string));
    
            var vcPatientGenderParameter = vcPatientGender != null ?
                new ObjectParameter("vcPatientGender", vcPatientGender) :
                new ObjectParameter("vcPatientGender", typeof(string));
    
            var vcPatientEmailParameter = vcPatientEmail != null ?
                new ObjectParameter("vcPatientEmail", vcPatientEmail) :
                new ObjectParameter("vcPatientEmail", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            var vcPatientCityParameter = vcPatientCity != null ?
                new ObjectParameter("vcPatientCity", vcPatientCity) :
                new ObjectParameter("vcPatientCity", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("int_patientinsertion_NewInt", vcPatientIdParameter, vcQueryIdParameter, vcMemberNameParameter, vcQueryParameter, vcTreatmentCityParameter, vcPatientNameParameter, vcPatientAgeParameter, vcPatientGenderParameter, vcPatientEmailParameter, vcPatientPhoneParameter, vcPatientCityParameter, vcCountryParameter, btIsApproveParameter, btIsAssignDepttParameter);
        }
    
        public virtual ObjectResult<ipadd_dp_Result> ipadd_dp(string istr, string ip, string hos_id, string vcUserName, string vcOrderID, string doc_id, string vcAccessDetailFor)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcOrderIDParameter = vcOrderID != null ?
                new ObjectParameter("vcOrderID", vcOrderID) :
                new ObjectParameter("vcOrderID", typeof(string));
    
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var vcAccessDetailForParameter = vcAccessDetailFor != null ?
                new ObjectParameter("vcAccessDetailFor", vcAccessDetailFor) :
                new ObjectParameter("vcAccessDetailFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ipadd_dp_Result>("ipadd_dp", istrParameter, ipParameter, hos_idParameter, vcUserNameParameter, vcOrderIDParameter, doc_idParameter, vcAccessDetailForParameter);
        }
    
        public virtual int IsAccess(string type, string option, Nullable<int> entity)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(string));
    
            var entityParameter = entity.HasValue ?
                new ObjectParameter("entity", entity) :
                new ObjectParameter("entity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IsAccess", typeParameter, optionParameter, entityParameter);
        }
    
        public virtual ObjectResult<MemberList_Result> MemberList(string groupId)
        {
            var groupIdParameter = groupId != null ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MemberList_Result>("MemberList", groupIdParameter);
        }
    
        public virtual ObjectResult<MessageSummary_Result> MessageSummary(string providerReferralsID)
        {
            var providerReferralsIDParameter = providerReferralsID != null ?
                new ObjectParameter("ProviderReferralsID", providerReferralsID) :
                new ObjectParameter("ProviderReferralsID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessageSummary_Result>("MessageSummary", providerReferralsIDParameter);
        }
    
        public virtual ObjectResult<string> mob_EXPdisease()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("mob_EXPdisease");
        }
    
        public virtual ObjectResult<Nullable<int>> mob_fellowpostid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("mob_fellowpostid");
        }
    
        public virtual ObjectResult<string> mob_fellowqry(string vcPatientId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("mob_fellowqry", vcPatientIdParameter);
        }
    
        public virtual ObjectResult<mob_GetHomeQueryForCommunty_Result> mob_GetHomeQueryForCommunty(string disease, string vcUserName)
        {
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_GetHomeQueryForCommunty_Result>("mob_GetHomeQueryForCommunty", diseaseParameter, vcUserNameParameter);
        }
    
        public virtual ObjectResult<mob_GetQueryFromCommuntyRply1_Result> mob_GetQueryFromCommuntyRply1(string disease, string vcUserName, string vcPostType, Nullable<int> intIdToPost)
        {
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_GetQueryFromCommuntyRply1_Result>("mob_GetQueryFromCommuntyRply1", diseaseParameter, vcUserNameParameter, vcPostTypeParameter, intIdToPostParameter);
        }
    
        public virtual int mob_infellow(string vcPatientId, string vcParentId, string vcUserName, string vcTouser, Nullable<int> intPostId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcParentIdParameter = vcParentId != null ?
                new ObjectParameter("vcParentId", vcParentId) :
                new ObjectParameter("vcParentId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcTouserParameter = vcTouser != null ?
                new ObjectParameter("vcTouser", vcTouser) :
                new ObjectParameter("vcTouser", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_infellow", vcPatientIdParameter, vcParentIdParameter, vcUserNameParameter, vcTouserParameter, intPostIdParameter);
        }
    
        public virtual int mob_inpat(Nullable<int> intPostId, string vcPatientId, string vcToPatientId, string vcRepMsg, string vcRepType, string vcUserName, string vcToUser)
        {
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcToUserParameter = vcToUser != null ?
                new ObjectParameter("vcToUser", vcToUser) :
                new ObjectParameter("vcToUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_inpat", intPostIdParameter, vcPatientIdParameter, vcToPatientIdParameter, vcRepMsgParameter, vcRepTypeParameter, vcUserNameParameter, vcToUserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> mob_mydiscussion(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("mob_mydiscussion", vcUserNameParameter);
        }
    
        public virtual ObjectResult<string> mob_mydiscussion_gins_postquery(string vcPatientId, string vcParentId, string vcUserName, string vcToUser, Nullable<int> intPostId, string vcQuery, string vcToPatientId, string vcRepType, string vcRepMsg, string vcSenderName, string vcComName, string vcPostMsg, string vcQueryId, string vcPostType, Nullable<int> intIdToPost)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcParentIdParameter = vcParentId != null ?
                new ObjectParameter("vcParentId", vcParentId) :
                new ObjectParameter("vcParentId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcToUserParameter = vcToUser != null ?
                new ObjectParameter("vcToUser", vcToUser) :
                new ObjectParameter("vcToUser", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcComNameParameter = vcComName != null ?
                new ObjectParameter("vcComName", vcComName) :
                new ObjectParameter("vcComName", typeof(string));
    
            var vcPostMsgParameter = vcPostMsg != null ?
                new ObjectParameter("vcPostMsg", vcPostMsg) :
                new ObjectParameter("vcPostMsg", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("mob_mydiscussion_gins_postquery", vcPatientIdParameter, vcParentIdParameter, vcUserNameParameter, vcToUserParameter, intPostIdParameter, vcQueryParameter, vcToPatientIdParameter, vcRepTypeParameter, vcRepMsgParameter, vcSenderNameParameter, vcComNameParameter, vcPostMsgParameter, vcQueryIdParameter, vcPostTypeParameter, intIdToPostParameter);
        }
    
        public virtual int mob_mydiscussion_in(string vcPatientId, string vcRepMsg, string vcRepType, Nullable<int> intPostId, string vcSenderName, string vcToPatientId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_mydiscussion_in", vcPatientIdParameter, vcRepMsgParameter, vcRepTypeParameter, intPostIdParameter, vcSenderNameParameter, vcToPatientIdParameter);
        }
    
        public virtual int mob_mydiscussion_insqpp(string vcPatientId, string vcRepMsg, string vcRepType, Nullable<int> intPostId, string vcSenderName, string vcToPatientId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_mydiscussion_insqpp", vcPatientIdParameter, vcRepMsgParameter, vcRepTypeParameter, intPostIdParameter, vcSenderNameParameter, vcToPatientIdParameter);
        }
    
        public virtual ObjectResult<mob_mydiscussion1_Result> mob_mydiscussion1(Nullable<int> intpostId)
        {
            var intpostIdParameter = intpostId.HasValue ?
                new ObjectParameter("intpostId", intpostId) :
                new ObjectParameter("intpostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion1_Result>("mob_mydiscussion1", intpostIdParameter);
        }
    
        public virtual int mob_mydiscussion10(string vcComName, string vcPostMsg, string vcQueryId, string vcPatientId, string vcPostType, string intIdToPost, string vcUserName)
        {
            var vcComNameParameter = vcComName != null ?
                new ObjectParameter("vcComName", vcComName) :
                new ObjectParameter("vcComName", typeof(string));
    
            var vcPostMsgParameter = vcPostMsg != null ?
                new ObjectParameter("vcPostMsg", vcPostMsg) :
                new ObjectParameter("vcPostMsg", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost != null ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_mydiscussion10", vcComNameParameter, vcPostMsgParameter, vcQueryIdParameter, vcPatientIdParameter, vcPostTypeParameter, intIdToPostParameter, vcUserNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> mob_mydiscussion11()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("mob_mydiscussion11");
        }
    
        public virtual ObjectResult<mob_mydiscussion12_Result> mob_mydiscussion12(string disease, string vcUserName, string vcPostType, Nullable<int> intIdToPost)
        {
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion12_Result>("mob_mydiscussion12", diseaseParameter, vcUserNameParameter, vcPostTypeParameter, intIdToPostParameter);
        }
    
        public virtual ObjectResult<mob_mydiscussion13_Result> mob_mydiscussion13(Nullable<int> intpostId)
        {
            var intpostIdParameter = intpostId.HasValue ?
                new ObjectParameter("intpostId", intpostId) :
                new ObjectParameter("intpostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion13_Result>("mob_mydiscussion13", intpostIdParameter);
        }
    
        public virtual ObjectResult<string> mob_mydiscussion14(string vcUserName, string vcDiseasename)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcDiseasenameParameter = vcDiseasename != null ?
                new ObjectParameter("vcDiseasename", vcDiseasename) :
                new ObjectParameter("vcDiseasename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("mob_mydiscussion14", vcUserNameParameter, vcDiseasenameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> mob_mydiscussion15()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("mob_mydiscussion15");
        }
    
        public virtual ObjectResult<Nullable<int>> mob_mydiscussion16()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("mob_mydiscussion16");
        }
    
        public virtual ObjectResult<mob_mydiscussion2_Result> mob_mydiscussion2(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion2_Result>("mob_mydiscussion2", vcUserNameParameter);
        }
    
        public virtual ObjectResult<mob_mydiscussion3_Result> mob_mydiscussion3(Nullable<int> intpostId)
        {
            var intpostIdParameter = intpostId.HasValue ?
                new ObjectParameter("intpostId", intpostId) :
                new ObjectParameter("intpostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion3_Result>("mob_mydiscussion3", intpostIdParameter);
        }
    
        public virtual ObjectResult<mob_mydiscussion4_Result> mob_mydiscussion4(Nullable<int> intpostId)
        {
            var intpostIdParameter = intpostId.HasValue ?
                new ObjectParameter("intpostId", intpostId) :
                new ObjectParameter("intpostId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion4_Result>("mob_mydiscussion4", intpostIdParameter);
        }
    
        public virtual ObjectResult<mob_mydiscussion5_Result> mob_mydiscussion5(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion5_Result>("mob_mydiscussion5", vcUserNameParameter);
        }
    
        public virtual ObjectResult<mob_mydiscussion6_Result> mob_mydiscussion6(string vcUserName, string intpostId)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var intpostIdParameter = intpostId != null ?
                new ObjectParameter("intpostId", intpostId) :
                new ObjectParameter("intpostId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion6_Result>("mob_mydiscussion6", vcUserNameParameter, intpostIdParameter);
        }
    
        public virtual ObjectResult<mob_mydiscussion7_Result> mob_mydiscussion7(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion7_Result>("mob_mydiscussion7", vcUserNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> mob_mydiscussion8()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("mob_mydiscussion8");
        }
    
        public virtual ObjectResult<mob_mydiscussion9_Result> mob_mydiscussion9(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_mydiscussion9_Result>("mob_mydiscussion9", vcUserNameParameter);
        }
    
        public virtual ObjectResult<mob_querydetail_Result> mob_querydetail(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_querydetail_Result>("mob_querydetail", vcQueryIdParameter);
        }
    
        public virtual ObjectResult<mob_QueryMyDisscussion1_Result> mob_QueryMyDisscussion1(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_QueryMyDisscussion1_Result>("mob_QueryMyDisscussion1", vcUserNameParameter);
        }
    
        public virtual ObjectResult<mob_QueryMyDisscussion11_Result> mob_QueryMyDisscussion11(string vcUserName, string intPostId)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var intPostIdParameter = intPostId != null ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_QueryMyDisscussion11_Result>("mob_QueryMyDisscussion11", vcUserNameParameter, intPostIdParameter);
        }
    
        public virtual ObjectResult<mob_querypat_Result> mob_querypat(string vctouser, string vcuser)
        {
            var vctouserParameter = vctouser != null ?
                new ObjectParameter("vctouser", vctouser) :
                new ObjectParameter("vctouser", typeof(string));
    
            var vcuserParameter = vcuser != null ?
                new ObjectParameter("vcuser", vcuser) :
                new ObjectParameter("vcuser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_querypat_Result>("mob_querypat", vctouserParameter, vcuserParameter);
        }
    
        public virtual ObjectResult<mob_querypat1_Result> mob_querypat1(string vcuser, string vctouser)
        {
            var vcuserParameter = vcuser != null ?
                new ObjectParameter("vcuser", vcuser) :
                new ObjectParameter("vcuser", typeof(string));
    
            var vctouserParameter = vctouser != null ?
                new ObjectParameter("vctouser", vctouser) :
                new ObjectParameter("vctouser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_querypat1_Result>("mob_querypat1", vcuserParameter, vctouserParameter);
        }
    
        public virtual ObjectResult<mob_querypatientid_Result> mob_querypatientid(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_querypatientid_Result>("mob_querypatientid", vcQueryIdParameter);
        }
    
        public virtual ObjectResult<mob_selectdoctordetail_Result> mob_selectdoctordetail(string doctorname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("doctorname", doctorname) :
                new ObjectParameter("doctorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_selectdoctordetail_Result>("mob_selectdoctordetail", doctornameParameter);
        }
    
        public virtual ObjectResult<mob_topquery_Result> mob_topquery(string vcQueryId, string vcAssignDeptt)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_topquery_Result>("mob_topquery", vcQueryIdParameter, vcAssignDepttParameter);
        }
    
        public virtual ObjectResult<mob_topquery1_Result> mob_topquery1(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_topquery1_Result>("mob_topquery1", vcQueryIdParameter);
        }
    
        public virtual ObjectResult<mob_topquery11_Result> mob_topquery11(string vcusername)
        {
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_topquery11_Result>("mob_topquery11", vcusernameParameter);
        }
    
        public virtual ObjectResult<mob_topquery2_Result> mob_topquery2(string ddl_disease)
        {
            var ddl_diseaseParameter = ddl_disease != null ?
                new ObjectParameter("ddl_disease", ddl_disease) :
                new ObjectParameter("ddl_disease", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mob_topquery2_Result>("mob_topquery2", ddl_diseaseParameter);
        }
    
        public virtual ObjectResult<string> mob_Unsubscribe(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("mob_Unsubscribe", emailParameter);
        }
    
        public virtual int mob_updateComQus(Nullable<int> intIdToPost)
        {
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_updateComQus", intIdToPostParameter);
        }
    
        public virtual int mob_updatemydiss(string istr, Nullable<int> intPostId, Nullable<System.DateTime> dtlastactivity, string vcRepType, string vcDiseaseName, string vcUserName, string vcQueryId)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var dtlastactivityParameter = dtlastactivity.HasValue ?
                new ObjectParameter("dtlastactivity", dtlastactivity) :
                new ObjectParameter("dtlastactivity", typeof(System.DateTime));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcDiseaseNameParameter = vcDiseaseName != null ?
                new ObjectParameter("vcDiseaseName", vcDiseaseName) :
                new ObjectParameter("vcDiseaseName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_updatemydiss", istrParameter, intPostIdParameter, dtlastactivityParameter, vcRepTypeParameter, vcDiseaseNameParameter, vcUserNameParameter, vcQueryIdParameter);
        }
    
        public virtual int mob_updatemydiss_dp(string istr, Nullable<int> intPostId, Nullable<System.DateTime> dtlastactivity, string vcRepType, string vcDiseaseName, string vcUserName, string vcQueryId)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var dtlastactivityParameter = dtlastactivity.HasValue ?
                new ObjectParameter("dtlastactivity", dtlastactivity) :
                new ObjectParameter("dtlastactivity", typeof(System.DateTime));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcDiseaseNameParameter = vcDiseaseName != null ?
                new ObjectParameter("vcDiseaseName", vcDiseaseName) :
                new ObjectParameter("vcDiseaseName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mob_updatemydiss_dp", istrParameter, intPostIdParameter, dtlastactivityParameter, vcRepTypeParameter, vcDiseaseNameParameter, vcUserNameParameter, vcQueryIdParameter);
        }
    
        public virtual ObjectResult<Moreqrydisp_dp_Result> Moreqrydisp_dp(string diseaseName)
        {
            var diseaseNameParameter = diseaseName != null ?
                new ObjectParameter("DiseaseName", diseaseName) :
                new ObjectParameter("DiseaseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Moreqrydisp_dp_Result>("Moreqrydisp_dp", diseaseNameParameter);
        }
    
        public virtual ObjectResult<mydiscambdetail_dp_Result> mydiscambdetail_dp(string vcProviderId, string vcCountry, string vcCountry1, string istr, string vcAssignDeptt, string vcPatientName, Nullable<bool> btIsPackage, Nullable<bool> btIsAppiontment, Nullable<bool> btIsDiagnostic, Nullable<bool> btIsOther, string vcSenderId, string city, string vcQueryId, string istr1, string vcstatus)
        {
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            var vcCountry1Parameter = vcCountry1 != null ?
                new ObjectParameter("vcCountry1", vcCountry1) :
                new ObjectParameter("vcCountry1", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var btIsPackageParameter = btIsPackage.HasValue ?
                new ObjectParameter("btIsPackage", btIsPackage) :
                new ObjectParameter("btIsPackage", typeof(bool));
    
            var btIsAppiontmentParameter = btIsAppiontment.HasValue ?
                new ObjectParameter("btIsAppiontment", btIsAppiontment) :
                new ObjectParameter("btIsAppiontment", typeof(bool));
    
            var btIsDiagnosticParameter = btIsDiagnostic.HasValue ?
                new ObjectParameter("btIsDiagnostic", btIsDiagnostic) :
                new ObjectParameter("btIsDiagnostic", typeof(bool));
    
            var btIsOtherParameter = btIsOther.HasValue ?
                new ObjectParameter("btIsOther", btIsOther) :
                new ObjectParameter("btIsOther", typeof(bool));
    
            var vcSenderIdParameter = vcSenderId != null ?
                new ObjectParameter("vcSenderId", vcSenderId) :
                new ObjectParameter("vcSenderId", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var istr1Parameter = istr1 != null ?
                new ObjectParameter("Istr1", istr1) :
                new ObjectParameter("Istr1", typeof(string));
    
            var vcstatusParameter = vcstatus != null ?
                new ObjectParameter("vcstatus", vcstatus) :
                new ObjectParameter("vcstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mydiscambdetail_dp_Result>("mydiscambdetail_dp", vcProviderIdParameter, vcCountryParameter, vcCountry1Parameter, istrParameter, vcAssignDepttParameter, vcPatientNameParameter, btIsPackageParameter, btIsAppiontmentParameter, btIsDiagnosticParameter, btIsOtherParameter, vcSenderIdParameter, cityParameter, vcQueryIdParameter, istr1Parameter, vcstatusParameter);
        }
    
        public virtual int mydiscambulancedetail_dp(string vcUserName, string vcPaidProviderId, string istr)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcPaidProviderIdParameter = vcPaidProviderId != null ?
                new ObjectParameter("vcPaidProviderId", vcPaidProviderId) :
                new ObjectParameter("vcPaidProviderId", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mydiscambulancedetail_dp", vcUserNameParameter, vcPaidProviderIdParameter, istrParameter);
        }
    
        public virtual int mydiscqryrep_dp(string email, string istr, string istr1, string doc_id, string hos_id, string dia_id, string org_id, string id, string provid, string provtype, string username, string vcQueryId, string strHosp, string vcPatientId, string vcReplyId, string cat)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var istr1Parameter = istr1 != null ?
                new ObjectParameter("Istr1", istr1) :
                new ObjectParameter("Istr1", typeof(string));
    
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var provtypeParameter = provtype != null ?
                new ObjectParameter("provtype", provtype) :
                new ObjectParameter("provtype", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var strHospParameter = strHosp != null ?
                new ObjectParameter("strHosp", strHosp) :
                new ObjectParameter("strHosp", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcReplyIdParameter = vcReplyId != null ?
                new ObjectParameter("vcReplyId", vcReplyId) :
                new ObjectParameter("vcReplyId", typeof(string));
    
            var catParameter = cat != null ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mydiscqryrep_dp", emailParameter, istrParameter, istr1Parameter, doc_idParameter, hos_idParameter, dia_idParameter, org_idParameter, idParameter, providParameter, provtypeParameter, usernameParameter, vcQueryIdParameter, strHospParameter, vcPatientIdParameter, vcReplyIdParameter, catParameter);
        }
    
        public virtual int mydiscqryrep_dp1(string vcQueryId, string istr, string prov_id, string vcPatientId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var prov_idParameter = prov_id != null ?
                new ObjectParameter("Prov_id", prov_id) :
                new ObjectParameter("Prov_id", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mydiscqryrep_dp1", vcQueryIdParameter, istrParameter, prov_idParameter, vcPatientIdParameter);
        }
    
        public virtual int mydiscuDocHos_dp(string vcpatientid, string vcSenderId, string istr, string vcUserName, string vcProviderId)
        {
            var vcpatientidParameter = vcpatientid != null ?
                new ObjectParameter("vcpatientid", vcpatientid) :
                new ObjectParameter("vcpatientid", typeof(string));
    
            var vcSenderIdParameter = vcSenderId != null ?
                new ObjectParameter("vcSenderId", vcSenderId) :
                new ObjectParameter("vcSenderId", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mydiscuDocHos_dp", vcpatientidParameter, vcSenderIdParameter, istrParameter, vcUserNameParameter, vcProviderIdParameter);
        }
    
        public virtual ObjectResult<mydiscussion_dp_Result> mydiscussion_dp(string istr, string vcUserName, Nullable<int> intpostId, string vcDiseasename)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var intpostIdParameter = intpostId.HasValue ?
                new ObjectParameter("intpostId", intpostId) :
                new ObjectParameter("intpostId", typeof(int));
    
            var vcDiseasenameParameter = vcDiseasename != null ?
                new ObjectParameter("vcDiseasename", vcDiseasename) :
                new ObjectParameter("vcDiseasename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mydiscussion_dp_Result>("mydiscussion_dp", istrParameter, vcUserNameParameter, intpostIdParameter, vcDiseasenameParameter);
        }
    
        public virtual ObjectResult<string> mydiscussion_gins_postquery(string vcPatientId, string vcParentId, string vcUserName, string vcToUser, Nullable<int> intPostId, string vcQuery, string vcToPatientId, string vcRepType, string vcRepMsg, string vcSenderName, string vcComName, string vcPostMsg, string vcQueryId, string vcPostType, Nullable<int> intIdToPost)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcParentIdParameter = vcParentId != null ?
                new ObjectParameter("vcParentId", vcParentId) :
                new ObjectParameter("vcParentId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcToUserParameter = vcToUser != null ?
                new ObjectParameter("vcToUser", vcToUser) :
                new ObjectParameter("vcToUser", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcComNameParameter = vcComName != null ?
                new ObjectParameter("vcComName", vcComName) :
                new ObjectParameter("vcComName", typeof(string));
    
            var vcPostMsgParameter = vcPostMsg != null ?
                new ObjectParameter("vcPostMsg", vcPostMsg) :
                new ObjectParameter("vcPostMsg", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("mydiscussion_gins_postquery", vcPatientIdParameter, vcParentIdParameter, vcUserNameParameter, vcToUserParameter, intPostIdParameter, vcQueryParameter, vcToPatientIdParameter, vcRepTypeParameter, vcRepMsgParameter, vcSenderNameParameter, vcComNameParameter, vcPostMsgParameter, vcQueryIdParameter, vcPostTypeParameter, intIdToPostParameter);
        }
    
        public virtual int mydiscussion_insfpq(string vcPatientId, string vcParentId, string vcUserName, string vcToUser, Nullable<int> intPostId, string vcQuery)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcParentIdParameter = vcParentId != null ?
                new ObjectParameter("vcParentId", vcParentId) :
                new ObjectParameter("vcParentId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcToUserParameter = vcToUser != null ?
                new ObjectParameter("vcToUser", vcToUser) :
                new ObjectParameter("vcToUser", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mydiscussion_insfpq", vcPatientIdParameter, vcParentIdParameter, vcUserNameParameter, vcToUserParameter, intPostIdParameter, vcQueryParameter);
        }
    
        public virtual int mydiscussion_inspcr(string vcComName, string vcPostMsg, string vcQueryId, string vcPostType, Nullable<int> intIdToPost, string vcUserName)
        {
            var vcComNameParameter = vcComName != null ?
                new ObjectParameter("vcComName", vcComName) :
                new ObjectParameter("vcComName", typeof(string));
    
            var vcPostMsgParameter = vcPostMsg != null ?
                new ObjectParameter("vcPostMsg", vcPostMsg) :
                new ObjectParameter("vcPostMsg", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mydiscussion_inspcr", vcComNameParameter, vcPostMsgParameter, vcQueryIdParameter, vcPostTypeParameter, intIdToPostParameter, vcUserNameParameter);
        }
    
        public virtual int mydiscussion_insqpp(string vcPatientId, string vcRepMsg, string vcRepType, Nullable<int> intPostId, string vcSenderName, string vcToPatientId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mydiscussion_insqpp", vcPatientIdParameter, vcRepMsgParameter, vcRepTypeParameter, intPostIdParameter, vcSenderNameParameter, vcToPatientIdParameter);
        }
    
        public virtual ObjectResult<NewMessageSummary_Result> NewMessageSummary(string provider)
        {
            var providerParameter = provider != null ?
                new ObjectParameter("Provider", provider) :
                new ObjectParameter("Provider", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewMessageSummary_Result>("NewMessageSummary", providerParameter);
        }
    
        public virtual ObjectResult<NewReferralSummary_Result> NewReferralSummary(string providerID)
        {
            var providerIDParameter = providerID != null ?
                new ObjectParameter("ProviderID", providerID) :
                new ObjectParameter("ProviderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NewReferralSummary_Result>("NewReferralSummary", providerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Offers_dp(string istr, string city, string orderid, string vcusername, string name, string country, string hos_id)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var orderidParameter = orderid != null ?
                new ObjectParameter("Orderid", orderid) :
                new ObjectParameter("Orderid", typeof(string));
    
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Offers_dp", istrParameter, cityParameter, orderidParameter, vcusernameParameter, nameParameter, countryParameter, hos_idParameter);
        }
    
        public virtual ObjectResult<ongoingcrese_dp_Result> ongoingcrese_dp(string disease_Condition, string istr, string discipline)
        {
            var disease_ConditionParameter = disease_Condition != null ?
                new ObjectParameter("Disease_Condition", disease_Condition) :
                new ObjectParameter("Disease_Condition", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var disciplineParameter = discipline != null ?
                new ObjectParameter("discipline", discipline) :
                new ObjectParameter("discipline", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ongoingcrese_dp_Result>("ongoingcrese_dp", disease_ConditionParameter, istrParameter, disciplineParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> onlinedoc_dp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("onlinedoc_dp");
        }
    
        public virtual int organtrans_sele(string name, string email, string mobile, Nullable<int> id, string patBlodgrp, string donoBlodgrp, Nullable<System.DateTime> folloupdate, string patientTransplantType)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var patBlodgrpParameter = patBlodgrp != null ?
                new ObjectParameter("PatBlodgrp", patBlodgrp) :
                new ObjectParameter("PatBlodgrp", typeof(string));
    
            var donoBlodgrpParameter = donoBlodgrp != null ?
                new ObjectParameter("DonoBlodgrp", donoBlodgrp) :
                new ObjectParameter("DonoBlodgrp", typeof(string));
    
            var folloupdateParameter = folloupdate.HasValue ?
                new ObjectParameter("folloupdate", folloupdate) :
                new ObjectParameter("folloupdate", typeof(System.DateTime));
    
            var patientTransplantTypeParameter = patientTransplantType != null ?
                new ObjectParameter("PatientTransplantType", patientTransplantType) :
                new ObjectParameter("PatientTransplantType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("organtrans_sele", nameParameter, emailParameter, mobileParameter, idParameter, patBlodgrpParameter, donoBlodgrpParameter, folloupdateParameter, patientTransplantTypeParameter);
        }
    
        public virtual int organtransplant_ex(string name, string email, string mobile, Nullable<int> id, string patBlodgrp, string donoBlodgrp, Nullable<System.DateTime> folloupdate, string patientTransplantType)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var patBlodgrpParameter = patBlodgrp != null ?
                new ObjectParameter("PatBlodgrp", patBlodgrp) :
                new ObjectParameter("PatBlodgrp", typeof(string));
    
            var donoBlodgrpParameter = donoBlodgrp != null ?
                new ObjectParameter("DonoBlodgrp", donoBlodgrp) :
                new ObjectParameter("DonoBlodgrp", typeof(string));
    
            var folloupdateParameter = folloupdate.HasValue ?
                new ObjectParameter("folloupdate", folloupdate) :
                new ObjectParameter("folloupdate", typeof(System.DateTime));
    
            var patientTransplantTypeParameter = patientTransplantType != null ?
                new ObjectParameter("PatientTransplantType", patientTransplantType) :
                new ObjectParameter("PatientTransplantType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("organtransplant_ex", nameParameter, emailParameter, mobileParameter, idParameter, patBlodgrpParameter, donoBlodgrpParameter, folloupdateParameter, patientTransplantTypeParameter);
        }
    
        public virtual int organtransplant_ex_2way(string name, string email, string mobile, Nullable<int> id, string blodgrp, Nullable<System.DateTime> folloupdate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var blodgrpParameter = blodgrp != null ?
                new ObjectParameter("Blodgrp", blodgrp) :
                new ObjectParameter("Blodgrp", typeof(string));
    
            var folloupdateParameter = folloupdate.HasValue ?
                new ObjectParameter("folloupdate", folloupdate) :
                new ObjectParameter("folloupdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("organtransplant_ex_2way", nameParameter, emailParameter, mobileParameter, idParameter, blodgrpParameter, folloupdateParameter);
        }
    
        public virtual int organtransplant_ex_3way()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("organtransplant_ex_3way");
        }
    
        public virtual int organtransplant_update(string istr, Nullable<int> sid, string status, Nullable<System.DateTime> folloupdate, Nullable<bool> approval, string patientFirstName, string patientLastName, string patientGender, string patientMobile, string patientEmail, string patientAge, string patientCountry, string patientCity, string patientBloodGroup, string patientTransplantType, string donorFirstName, string donorLastName, string donorGender, string donorAge, string donorBloodGroup, string postQuery, string relationwithPatient, string querypostedby, string otherFname, string otherLname, string otherRelawithPat, string updatedby)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var folloupdateParameter = folloupdate.HasValue ?
                new ObjectParameter("folloupdate", folloupdate) :
                new ObjectParameter("folloupdate", typeof(System.DateTime));
    
            var approvalParameter = approval.HasValue ?
                new ObjectParameter("approval", approval) :
                new ObjectParameter("approval", typeof(bool));
    
            var patientFirstNameParameter = patientFirstName != null ?
                new ObjectParameter("PatientFirstName", patientFirstName) :
                new ObjectParameter("PatientFirstName", typeof(string));
    
            var patientLastNameParameter = patientLastName != null ?
                new ObjectParameter("PatientLastName", patientLastName) :
                new ObjectParameter("PatientLastName", typeof(string));
    
            var patientGenderParameter = patientGender != null ?
                new ObjectParameter("PatientGender", patientGender) :
                new ObjectParameter("PatientGender", typeof(string));
    
            var patientMobileParameter = patientMobile != null ?
                new ObjectParameter("PatientMobile", patientMobile) :
                new ObjectParameter("PatientMobile", typeof(string));
    
            var patientEmailParameter = patientEmail != null ?
                new ObjectParameter("PatientEmail", patientEmail) :
                new ObjectParameter("PatientEmail", typeof(string));
    
            var patientAgeParameter = patientAge != null ?
                new ObjectParameter("PatientAge", patientAge) :
                new ObjectParameter("PatientAge", typeof(string));
    
            var patientCountryParameter = patientCountry != null ?
                new ObjectParameter("PatientCountry", patientCountry) :
                new ObjectParameter("PatientCountry", typeof(string));
    
            var patientCityParameter = patientCity != null ?
                new ObjectParameter("PatientCity", patientCity) :
                new ObjectParameter("PatientCity", typeof(string));
    
            var patientBloodGroupParameter = patientBloodGroup != null ?
                new ObjectParameter("PatientBloodGroup", patientBloodGroup) :
                new ObjectParameter("PatientBloodGroup", typeof(string));
    
            var patientTransplantTypeParameter = patientTransplantType != null ?
                new ObjectParameter("PatientTransplantType", patientTransplantType) :
                new ObjectParameter("PatientTransplantType", typeof(string));
    
            var donorFirstNameParameter = donorFirstName != null ?
                new ObjectParameter("DonorFirstName", donorFirstName) :
                new ObjectParameter("DonorFirstName", typeof(string));
    
            var donorLastNameParameter = donorLastName != null ?
                new ObjectParameter("DonorLastName", donorLastName) :
                new ObjectParameter("DonorLastName", typeof(string));
    
            var donorGenderParameter = donorGender != null ?
                new ObjectParameter("DonorGender", donorGender) :
                new ObjectParameter("DonorGender", typeof(string));
    
            var donorAgeParameter = donorAge != null ?
                new ObjectParameter("DonorAge", donorAge) :
                new ObjectParameter("DonorAge", typeof(string));
    
            var donorBloodGroupParameter = donorBloodGroup != null ?
                new ObjectParameter("DonorBloodGroup", donorBloodGroup) :
                new ObjectParameter("DonorBloodGroup", typeof(string));
    
            var postQueryParameter = postQuery != null ?
                new ObjectParameter("PostQuery", postQuery) :
                new ObjectParameter("PostQuery", typeof(string));
    
            var relationwithPatientParameter = relationwithPatient != null ?
                new ObjectParameter("RelationwithPatient", relationwithPatient) :
                new ObjectParameter("RelationwithPatient", typeof(string));
    
            var querypostedbyParameter = querypostedby != null ?
                new ObjectParameter("querypostedby", querypostedby) :
                new ObjectParameter("querypostedby", typeof(string));
    
            var otherFnameParameter = otherFname != null ?
                new ObjectParameter("OtherFname", otherFname) :
                new ObjectParameter("OtherFname", typeof(string));
    
            var otherLnameParameter = otherLname != null ?
                new ObjectParameter("OtherLname", otherLname) :
                new ObjectParameter("OtherLname", typeof(string));
    
            var otherRelawithPatParameter = otherRelawithPat != null ?
                new ObjectParameter("OtherRelawithPat", otherRelawithPat) :
                new ObjectParameter("OtherRelawithPat", typeof(string));
    
            var updatedbyParameter = updatedby != null ?
                new ObjectParameter("Updatedby", updatedby) :
                new ObjectParameter("Updatedby", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("organtransplant_update", istrParameter, sidParameter, statusParameter, folloupdateParameter, approvalParameter, patientFirstNameParameter, patientLastNameParameter, patientGenderParameter, patientMobileParameter, patientEmailParameter, patientAgeParameter, patientCountryParameter, patientCityParameter, patientBloodGroupParameter, patientTransplantTypeParameter, donorFirstNameParameter, donorLastNameParameter, donorGenderParameter, donorAgeParameter, donorBloodGroupParameter, postQueryParameter, relationwithPatientParameter, querypostedbyParameter, otherFnameParameter, otherLnameParameter, otherRelawithPatParameter, updatedbyParameter);
        }
    
        public virtual ObjectResult<otherservices_dp_Result> otherservices_dp(string istr, string service_Type, string city)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var service_TypeParameter = service_Type != null ?
                new ObjectParameter("Service_Type", service_Type) :
                new ObjectParameter("Service_Type", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<otherservices_dp_Result>("otherservices_dp", istrParameter, service_TypeParameter, cityParameter);
        }
    
        public virtual int patfeed_dp(string userName, string name, string dateadamission, string datedis, string datecon, string doctorname, string demail, string dmobile, string dlandline, string daddress, string hname, string hcity, string surgery, string disease, string package, string cost, string insurance, string cure, string satisfaction, string recommend, string other, string dsatisfaction, string dcure, string drecommend)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var dateadamissionParameter = dateadamission != null ?
                new ObjectParameter("Dateadamission", dateadamission) :
                new ObjectParameter("Dateadamission", typeof(string));
    
            var datedisParameter = datedis != null ?
                new ObjectParameter("Datedis", datedis) :
                new ObjectParameter("Datedis", typeof(string));
    
            var dateconParameter = datecon != null ?
                new ObjectParameter("Datecon", datecon) :
                new ObjectParameter("Datecon", typeof(string));
    
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("doctorname", doctorname) :
                new ObjectParameter("doctorname", typeof(string));
    
            var demailParameter = demail != null ?
                new ObjectParameter("demail", demail) :
                new ObjectParameter("demail", typeof(string));
    
            var dmobileParameter = dmobile != null ?
                new ObjectParameter("dmobile", dmobile) :
                new ObjectParameter("dmobile", typeof(string));
    
            var dlandlineParameter = dlandline != null ?
                new ObjectParameter("dlandline", dlandline) :
                new ObjectParameter("dlandline", typeof(string));
    
            var daddressParameter = daddress != null ?
                new ObjectParameter("daddress", daddress) :
                new ObjectParameter("daddress", typeof(string));
    
            var hnameParameter = hname != null ?
                new ObjectParameter("hname", hname) :
                new ObjectParameter("hname", typeof(string));
    
            var hcityParameter = hcity != null ?
                new ObjectParameter("hcity", hcity) :
                new ObjectParameter("hcity", typeof(string));
    
            var surgeryParameter = surgery != null ?
                new ObjectParameter("Surgery", surgery) :
                new ObjectParameter("Surgery", typeof(string));
    
            var diseaseParameter = disease != null ?
                new ObjectParameter("disease", disease) :
                new ObjectParameter("disease", typeof(string));
    
            var packageParameter = package != null ?
                new ObjectParameter("package", package) :
                new ObjectParameter("package", typeof(string));
    
            var costParameter = cost != null ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(string));
    
            var insuranceParameter = insurance != null ?
                new ObjectParameter("insurance", insurance) :
                new ObjectParameter("insurance", typeof(string));
    
            var cureParameter = cure != null ?
                new ObjectParameter("cure", cure) :
                new ObjectParameter("cure", typeof(string));
    
            var satisfactionParameter = satisfaction != null ?
                new ObjectParameter("satisfaction", satisfaction) :
                new ObjectParameter("satisfaction", typeof(string));
    
            var recommendParameter = recommend != null ?
                new ObjectParameter("recommend", recommend) :
                new ObjectParameter("recommend", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var dsatisfactionParameter = dsatisfaction != null ?
                new ObjectParameter("dsatisfaction", dsatisfaction) :
                new ObjectParameter("dsatisfaction", typeof(string));
    
            var dcureParameter = dcure != null ?
                new ObjectParameter("dcure", dcure) :
                new ObjectParameter("dcure", typeof(string));
    
            var drecommendParameter = drecommend != null ?
                new ObjectParameter("drecommend", drecommend) :
                new ObjectParameter("drecommend", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("patfeed_dp", userNameParameter, nameParameter, dateadamissionParameter, datedisParameter, dateconParameter, doctornameParameter, demailParameter, dmobileParameter, dlandlineParameter, daddressParameter, hnameParameter, hcityParameter, surgeryParameter, diseaseParameter, packageParameter, costParameter, insuranceParameter, cureParameter, satisfactionParameter, recommendParameter, otherParameter, dsatisfactionParameter, dcureParameter, drecommendParameter);
        }
    
        public virtual ObjectResult<patfeedback_Result> patfeedback()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<patfeedback_Result>("patfeedback");
        }
    
        public virtual ObjectResult<string> proce_searchCtyDp(string skill_name, string city, string specialization_name)
        {
            var skill_nameParameter = skill_name != null ?
                new ObjectParameter("skill_name", skill_name) :
                new ObjectParameter("skill_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proce_searchCtyDp", skill_nameParameter, cityParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<procedureDesconly_Result> procedureDesconly(string skillName)
        {
            var skillNameParameter = skillName != null ?
                new ObjectParameter("SkillName", skillName) :
                new ObjectParameter("SkillName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<procedureDesconly_Result>("procedureDesconly", skillNameParameter);
        }
    
        public virtual ObjectResult<string> proceduredetail_dp(string pname, string hos_id)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("proceduredetail_dp", pnameParameter, hos_idParameter);
        }
    
        public virtual int productsearch(string productname)
        {
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("productsearch", productnameParameter);
        }
    
        public virtual ObjectResult<ProviderDetail_api_Result> ProviderDetail_api(string provid, string provconnid)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var provconnidParameter = provconnid != null ?
                new ObjectParameter("provconnid", provconnid) :
                new ObjectParameter("provconnid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProviderDetail_api_Result>("ProviderDetail_api", providParameter, provconnidParameter);
        }
    
        public virtual int ProviderSearch(string name, string email, string phone, string city, string specialization, string provid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var specializationParameter = specialization != null ?
                new ObjectParameter("specialization", specialization) :
                new ObjectParameter("specialization", typeof(string));
    
            var providParameter = provid != null ?
                new ObjectParameter("Provid", provid) :
                new ObjectParameter("Provid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProviderSearch", nameParameter, emailParameter, phoneParameter, cityParameter, specializationParameter, providParameter);
        }
    
        public virtual int ProviderSearch_dp(string name, string email, string phone, string city, string specialization, string provid)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var specializationParameter = specialization != null ?
                new ObjectParameter("specialization", specialization) :
                new ObjectParameter("specialization", typeof(string));
    
            var providParameter = provid != null ?
                new ObjectParameter("Provid", provid) :
                new ObjectParameter("Provid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProviderSearch_dp", nameParameter, emailParameter, phoneParameter, cityParameter, specializationParameter, providParameter);
        }
    
        public virtual int qptop_dp(string vcPatientId, string vcToPatientId, string vcRepType, string vcToUser, Nullable<int> intPostId, string vcRepMsg, string vcSenderName, string vcUserName)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcToPatientIdParameter = vcToPatientId != null ?
                new ObjectParameter("vcToPatientId", vcToPatientId) :
                new ObjectParameter("vcToPatientId", typeof(string));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcToUserParameter = vcToUser != null ?
                new ObjectParameter("vcToUser", vcToUser) :
                new ObjectParameter("vcToUser", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var vcRepMsgParameter = vcRepMsg != null ?
                new ObjectParameter("vcRepMsg", vcRepMsg) :
                new ObjectParameter("vcRepMsg", typeof(string));
    
            var vcSenderNameParameter = vcSenderName != null ?
                new ObjectParameter("vcSenderName", vcSenderName) :
                new ObjectParameter("vcSenderName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("qptop_dp", vcPatientIdParameter, vcToPatientIdParameter, vcRepTypeParameter, vcToUserParameter, intPostIdParameter, vcRepMsgParameter, vcSenderNameParameter, vcUserNameParameter);
        }
    
        public virtual int Qryapproval_dp(string vcQueryId, string vcPatientId, string vcUserName, Nullable<bool> btIsApprove, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Qryapproval_dp", vcQueryIdParameter, vcPatientIdParameter, vcUserNameParameter, btIsApproveParameter, vcUpdatedByParameter, dtUpdationDateParameter);
        }
    
        public virtual ObjectResult<QryDisp_dp_Result> QryDisp_dp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QryDisp_dp_Result>("QryDisp_dp");
        }
    
        public virtual ObjectResult<queryadminpatientlist_dp_Result> queryadminpatientlist_dp(string istr, string vcNukeEmail, string vcStatus, Nullable<System.DateTime> dtfollowdate, string vcQueryId, string vcProviderID, Nullable<bool> btIsQueryAssign, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcProvType, string vcEmailTextSent, string ddlr, Nullable<bool> chk, string converProviderId, string converhospname)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcNukeEmailParameter = vcNukeEmail != null ?
                new ObjectParameter("vcNukeEmail", vcNukeEmail) :
                new ObjectParameter("vcNukeEmail", typeof(string));
    
            var vcStatusParameter = vcStatus != null ?
                new ObjectParameter("vcStatus", vcStatus) :
                new ObjectParameter("vcStatus", typeof(string));
    
            var dtfollowdateParameter = dtfollowdate.HasValue ?
                new ObjectParameter("dtfollowdate", dtfollowdate) :
                new ObjectParameter("dtfollowdate", typeof(System.DateTime));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcProviderIDParameter = vcProviderID != null ?
                new ObjectParameter("vcProviderID", vcProviderID) :
                new ObjectParameter("vcProviderID", typeof(string));
    
            var btIsQueryAssignParameter = btIsQueryAssign.HasValue ?
                new ObjectParameter("btIsQueryAssign", btIsQueryAssign) :
                new ObjectParameter("btIsQueryAssign", typeof(bool));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcProvTypeParameter = vcProvType != null ?
                new ObjectParameter("vcProvType", vcProvType) :
                new ObjectParameter("vcProvType", typeof(string));
    
            var vcEmailTextSentParameter = vcEmailTextSent != null ?
                new ObjectParameter("vcEmailTextSent", vcEmailTextSent) :
                new ObjectParameter("vcEmailTextSent", typeof(string));
    
            var ddlrParameter = ddlr != null ?
                new ObjectParameter("ddlr", ddlr) :
                new ObjectParameter("ddlr", typeof(string));
    
            var chkParameter = chk.HasValue ?
                new ObjectParameter("chk", chk) :
                new ObjectParameter("chk", typeof(bool));
    
            var converProviderIdParameter = converProviderId != null ?
                new ObjectParameter("ConverProviderId", converProviderId) :
                new ObjectParameter("ConverProviderId", typeof(string));
    
            var converhospnameParameter = converhospname != null ?
                new ObjectParameter("Converhospname", converhospname) :
                new ObjectParameter("Converhospname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<queryadminpatientlist_dp_Result>("queryadminpatientlist_dp", istrParameter, vcNukeEmailParameter, vcStatusParameter, dtfollowdateParameter, vcQueryIdParameter, vcProviderIDParameter, btIsQueryAssignParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcProvTypeParameter, vcEmailTextSentParameter, ddlrParameter, chkParameter, converProviderIdParameter, converhospnameParameter);
        }
    
        public virtual int queryassignpoints_dp(string istr, string vcPatientId, string vcQueryId, string vcServiceName)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcServiceNameParameter = vcServiceName != null ?
                new ObjectParameter("vcServiceName", vcServiceName) :
                new ObjectParameter("vcServiceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("queryassignpoints_dp", istrParameter, vcPatientIdParameter, vcQueryIdParameter, vcServiceNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> querydetail_dp(string istr, string vcDiseaseName, string vcQueryId)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcDiseaseNameParameter = vcDiseaseName != null ?
                new ObjectParameter("vcDiseaseName", vcDiseaseName) :
                new ObjectParameter("vcDiseaseName", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("querydetail_dp", istrParameter, vcDiseaseNameParameter, vcQueryIdParameter);
        }
    
        public virtual int REBUILDALLINDEX()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REBUILDALLINDEX");
        }
    
        public virtual ObjectResult<ReferralByMe_Result> ReferralByMe(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralByMe_Result>("ReferralByMe", providParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<ReferralByMeMIS_Result> ReferralByMeMIS(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralByMeMIS_Result>("ReferralByMeMIS", providParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<ReferralByMeMISDetails_Result> ReferralByMeMISDetails(string provid, Nullable<int> statusid)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralByMeMISDetails_Result>("ReferralByMeMISDetails", providParameter, statusidParameter);
        }
    
        public virtual ObjectResult<ReferralByProvider_Result> ReferralByProvider(string provid, Nullable<int> statusid, string name)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralByProvider_Result>("ReferralByProvider", providParameter, statusidParameter, nameParameter);
        }
    
        public virtual ObjectResult<ReferralBystatuscount_Result> ReferralBystatuscount(string provid)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralBystatuscount_Result>("ReferralBystatuscount", providParameter);
        }
    
        public virtual ObjectResult<ReferralDetail_Result> ReferralDetail(string providerReferralsID)
        {
            var providerReferralsIDParameter = providerReferralsID != null ?
                new ObjectParameter("ProviderReferralsID", providerReferralsID) :
                new ObjectParameter("ProviderReferralsID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralDetail_Result>("ReferralDetail", providerReferralsIDParameter);
        }
    
        public virtual ObjectResult<ReferralDetailForward_Result> ReferralDetailForward(string providerReferralsID, string provToId)
        {
            var providerReferralsIDParameter = providerReferralsID != null ?
                new ObjectParameter("ProviderReferralsID", providerReferralsID) :
                new ObjectParameter("ProviderReferralsID", typeof(string));
    
            var provToIdParameter = provToId != null ?
                new ObjectParameter("ProvToId", provToId) :
                new ObjectParameter("ProvToId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralDetailForward_Result>("ReferralDetailForward", providerReferralsIDParameter, provToIdParameter);
        }
    
        public virtual ObjectResult<ReferralSummary_Result> ReferralSummary(string providerReferralsID)
        {
            var providerReferralsIDParameter = providerReferralsID != null ?
                new ObjectParameter("ProviderReferralsID", providerReferralsID) :
                new ObjectParameter("ProviderReferralsID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralSummary_Result>("ReferralSummary", providerReferralsIDParameter);
        }
    
        public virtual ObjectResult<ReferralToMe_Result> ReferralToMe(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralToMe_Result>("ReferralToMe", providParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<ReferralToMeMIS_Result> ReferralToMeMIS(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralToMeMIS_Result>("ReferralToMeMIS", providParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<ReferralToMeMISDetails_Result> ReferralToMeMISDetails(string provid, Nullable<int> statusid)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("Statusid", statusid) :
                new ObjectParameter("Statusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralToMeMISDetails_Result>("ReferralToMeMISDetails", providParameter, statusidParameter);
        }
    
        public virtual ObjectResult<ReferralToProvider_Result> ReferralToProvider(string provid, Nullable<int> statusid, string name)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var statusidParameter = statusid.HasValue ?
                new ObjectParameter("statusid", statusid) :
                new ObjectParameter("statusid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralToProvider_Result>("ReferralToProvider", providParameter, statusidParameter, nameParameter);
        }
    
        public virtual ObjectResult<ReferralToStatusCount_Result> ReferralToStatusCount(string provid)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReferralToStatusCount_Result>("ReferralToStatusCount", providParameter);
        }
    
        public virtual ObjectResult<string> region_dp(string vcqueryid)
        {
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("region_dp", vcqueryidParameter);
        }
    
        public virtual ObjectResult<replydisp_dp_Result> replydisp_dp(string diseaseName)
        {
            var diseaseNameParameter = diseaseName != null ?
                new ObjectParameter("DiseaseName", diseaseName) :
                new ObjectParameter("DiseaseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<replydisp_dp_Result>("replydisp_dp", diseaseNameParameter);
        }
    
        public virtual int replydisp_dp_demo(string diseaseName, string vcQueryId)
        {
            var diseaseNameParameter = diseaseName != null ?
                new ObjectParameter("DiseaseName", diseaseName) :
                new ObjectParameter("DiseaseName", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("replydisp_dp_demo", diseaseNameParameter, vcQueryIdParameter);
        }
    
        public virtual ObjectResult<replydisp_New_dp_Result> replydisp_New_dp(string diseaseName)
        {
            var diseaseNameParameter = diseaseName != null ?
                new ObjectParameter("DiseaseName", diseaseName) :
                new ObjectParameter("DiseaseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<replydisp_New_dp_Result>("replydisp_New_dp", diseaseNameParameter);
        }
    
        public virtual int replydisp_Qryareamat_dp(string area)
        {
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("replydisp_Qryareamat_dp", areaParameter);
        }
    
        public virtual ObjectResult<report_Result> report()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<report_Result>("report");
        }
    
        public virtual ObjectResult<Report_AllProviderConnReq_api_Result> Report_AllProviderConnReq_api(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_AllProviderConnReq_api_Result>("Report_AllProviderConnReq_api", providParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Report_AllReferrals_Result> Report_AllReferrals(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_AllReferrals_Result>("Report_AllReferrals", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Report_ConnEstablished_Result> Report_ConnEstablished(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_ConnEstablished_Result>("Report_ConnEstablished", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Report_ConnReqSent_Result> Report_ConnReqSent(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_ConnReqSent_Result>("Report_ConnReqSent", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Report_NSM_ReferralToMe_Result> Report_NSM_ReferralToMe(string parentId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var parentIdParameter = parentId != null ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_NSM_ReferralToMe_Result>("Report_NSM_ReferralToMe", parentIdParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Report_PatientDetails_Result> Report_PatientDetails(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_PatientDetails_Result>("Report_PatientDetails", providParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Report_RM_ReferralToMe_Result> Report_RM_ReferralToMe(string parentId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var parentIdParameter = parentId != null ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_RM_ReferralToMe_Result>("Report_RM_ReferralToMe", parentIdParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Report_UploadMembers_Result> Report_UploadMembers(string provid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var providParameter = provid != null ?
                new ObjectParameter("provid", provid) :
                new ObjectParameter("provid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Report_UploadMembers_Result>("Report_UploadMembers", providParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<ReportHierarchy_ReferralToMe_Result> ReportHierarchy_ReferralToMe(string parentId, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var parentIdParameter = parentId != null ?
                new ObjectParameter("parentId", parentId) :
                new ObjectParameter("parentId", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportHierarchy_ReferralToMe_Result>("ReportHierarchy_ReferralToMe", parentIdParameter, fromParameter, toParameter);
        }
    
        public virtual ObjectResult<ReportHierarchy_ReferralToMeMIS_Result> ReportHierarchy_ReferralToMeMIS(string parentid, Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var parentidParameter = parentid != null ?
                new ObjectParameter("parentid", parentid) :
                new ObjectParameter("parentid", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportHierarchy_ReferralToMeMIS_Result>("ReportHierarchy_ReferralToMeMIS", parentidParameter, fromParameter, toParameter);
        }
    
        public virtual int SearchAllTables(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTables", searchStrParameter);
        }
    
        public virtual ObjectResult<string> SearchAndReplace(string searchStr, string replaceStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            var replaceStrParameter = replaceStr != null ?
                new ObjectParameter("ReplaceStr", replaceStr) :
                new ObjectParameter("ReplaceStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SearchAndReplace", searchStrParameter, replaceStrParameter);
        }
    
        public virtual int searchdoctor_dp(string first_name, string middle_name, string last_name, string address, string city, string specialization_name)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("Middle_name", middle_name) :
                new ObjectParameter("Middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("searchdoctor_dp", first_nameParameter, middle_nameParameter, last_nameParameter, addressParameter, cityParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<selecthoscon_Result> selecthoscon(Nullable<int> hd_id)
        {
            var hd_idParameter = hd_id.HasValue ?
                new ObjectParameter("hd_id", hd_id) :
                new ObjectParameter("hd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selecthoscon_Result>("selecthoscon", hd_idParameter);
        }
    
        public virtual ObjectResult<Shufflehomequery_dp_Result> Shufflehomequery_dp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Shufflehomequery_dp_Result>("Shufflehomequery_dp");
        }
    
        public virtual int sp_AddDiagnosticsServices(string testGroup, string digId)
        {
            var testGroupParameter = testGroup != null ?
                new ObjectParameter("TestGroup", testGroup) :
                new ObjectParameter("TestGroup", typeof(string));
    
            var digIdParameter = digId != null ?
                new ObjectParameter("digId", digId) :
                new ObjectParameter("digId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddDiagnosticsServices", testGroupParameter, digIdParameter);
        }
    
        public virtual int sp_addDLabDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addDLabDetails");
        }
    
        public virtual int sp_AddHospitalConsultant()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddHospitalConsultant");
        }
    
        public virtual int sp_AddHospitalDiagnostics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddHospitalDiagnostics");
        }
    
        public virtual int sp_addHospitalProcedures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_addHospitalProcedures");
        }
    
        public virtual int sp_AddNewProduct(Nullable<int> categoryId, Nullable<int> brandId, string productName, string productDisplayName, Nullable<double> price, string actualLink, string productLink, string imageUrl)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDisplayNameParameter = productDisplayName != null ?
                new ObjectParameter("ProductDisplayName", productDisplayName) :
                new ObjectParameter("ProductDisplayName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var actualLinkParameter = actualLink != null ?
                new ObjectParameter("ActualLink", actualLink) :
                new ObjectParameter("ActualLink", typeof(string));
    
            var productLinkParameter = productLink != null ?
                new ObjectParameter("ProductLink", productLink) :
                new ObjectParameter("ProductLink", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddNewProduct", categoryIdParameter, brandIdParameter, productNameParameter, productDisplayNameParameter, priceParameter, actualLinkParameter, productLinkParameter, imageUrlParameter);
        }
    
        public virtual int sp_AddNewProductBrand(string brandName, Nullable<int> categoryId)
        {
            var brandNameParameter = brandName != null ?
                new ObjectParameter("BrandName", brandName) :
                new ObjectParameter("BrandName", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddNewProductBrand", brandNameParameter, categoryIdParameter);
        }
    
        public virtual int sp_AddNewProductCategory(string categoryName, Nullable<int> parentCategory)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var parentCategoryParameter = parentCategory.HasValue ?
                new ObjectParameter("ParentCategory", parentCategory) :
                new ObjectParameter("ParentCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddNewProductCategory", categoryNameParameter, parentCategoryParameter);
        }
    
        public virtual int sp_AddOPDTiming()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddOPDTiming");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_BloodOrganBank(string city, string bankName, string bankType, string component, string address)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var bankTypeParameter = bankType != null ?
                new ObjectParameter("BankType", bankType) :
                new ObjectParameter("BankType", typeof(string));
    
            var componentParameter = component != null ?
                new ObjectParameter("Component", component) :
                new ObjectParameter("Component", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BloodOrganBank", cityParameter, bankNameParameter, bankTypeParameter, componentParameter, addressParameter);
        }
    
        public virtual ObjectResult<string> sp_CheckEhrUser(string user_Id, string password, string istr)
        {
            var user_IdParameter = user_Id != null ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_CheckEhrUser", user_IdParameter, passwordParameter, istrParameter);
        }
    
        public virtual int sp_chkinsert(string doctorid, string hosid)
        {
            var doctoridParameter = doctorid != null ?
                new ObjectParameter("doctorid", doctorid) :
                new ObjectParameter("doctorid", typeof(string));
    
            var hosidParameter = hosid != null ?
                new ObjectParameter("hosid", hosid) :
                new ObjectParameter("hosid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_chkinsert", doctoridParameter, hosidParameter);
        }
    
        public virtual ObjectResult<sp_CommomeInternational_Result> sp_CommomeInternational(string istr, string specialization, string skill, string skillName)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var specializationParameter = specialization != null ?
                new ObjectParameter("Specialization", specialization) :
                new ObjectParameter("Specialization", typeof(string));
    
            var skillParameter = skill != null ?
                new ObjectParameter("Skill", skill) :
                new ObjectParameter("Skill", typeof(string));
    
            var skillNameParameter = skillName != null ?
                new ObjectParameter("SkillName", skillName) :
                new ObjectParameter("SkillName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CommomeInternational_Result>("sp_CommomeInternational", istrParameter, specializationParameter, skillParameter, skillNameParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_DependentUser_Result> sp_DependentUser(string user_Id, string vcparentid, string istr)
        {
            var user_IdParameter = user_Id != null ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(string));
    
            var vcparentidParameter = vcparentid != null ?
                new ObjectParameter("vcparentid", vcparentid) :
                new ObjectParameter("vcparentid", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DependentUser_Result>("sp_DependentUser", user_IdParameter, vcparentidParameter, istrParameter);
        }
    
        public virtual ObjectResult<sp_DiagnosticsRegistrationBasicDetails_Result> sp_DiagnosticsRegistrationBasicDetails(ObjectParameter countId, ObjectParameter diagnosticId)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DiagnosticsRegistrationBasicDetails_Result>("sp_DiagnosticsRegistrationBasicDetails", countId, diagnosticId);
        }
    
        public virtual int sp_Disability(string city, string org_name, string address, string category)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var org_nameParameter = org_name != null ?
                new ObjectParameter("org_name", org_name) :
                new ObjectParameter("org_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Disability", cityParameter, org_nameParameter, addressParameter, categoryParameter);
        }
    
        public virtual ObjectResult<string> sp_DoctorDepartment(string city)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_DoctorDepartment", cityParameter);
        }
    
        public virtual ObjectResult<sp_DoctorSearchByCityOrDepartment_Result> sp_DoctorSearchByCityOrDepartment(string istr, string doc_id, string city, string category_name, string specialization_othername, string specialization_name)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var specialization_othernameParameter = specialization_othername != null ?
                new ObjectParameter("specialization_othername", specialization_othername) :
                new ObjectParameter("specialization_othername", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DoctorSearchByCityOrDepartment_Result>("sp_DoctorSearchByCityOrDepartment", istrParameter, doc_idParameter, cityParameter, category_nameParameter, specialization_othernameParameter, specialization_nameParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_EhrAdvSearch(string isr, string vcParentID, string user_id, string hos_id, string vcDiseaseID, Nullable<System.DateTime> todate, Nullable<System.DateTime> fromdate, string doctor_name, Nullable<System.DateTime> visit_date, string performing_lab, string vcTestId, Nullable<System.DateTime> test_date, string vcHospitalCity, string vcDrugId)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcParentIDParameter = vcParentID != null ?
                new ObjectParameter("vcParentID", vcParentID) :
                new ObjectParameter("vcParentID", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var vcDiseaseIDParameter = vcDiseaseID != null ?
                new ObjectParameter("vcDiseaseID", vcDiseaseID) :
                new ObjectParameter("vcDiseaseID", typeof(string));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var doctor_nameParameter = doctor_name != null ?
                new ObjectParameter("doctor_name", doctor_name) :
                new ObjectParameter("doctor_name", typeof(string));
    
            var visit_dateParameter = visit_date.HasValue ?
                new ObjectParameter("visit_date", visit_date) :
                new ObjectParameter("visit_date", typeof(System.DateTime));
    
            var performing_labParameter = performing_lab != null ?
                new ObjectParameter("performing_lab", performing_lab) :
                new ObjectParameter("performing_lab", typeof(string));
    
            var vcTestIdParameter = vcTestId != null ?
                new ObjectParameter("vcTestId", vcTestId) :
                new ObjectParameter("vcTestId", typeof(string));
    
            var test_dateParameter = test_date.HasValue ?
                new ObjectParameter("test_date", test_date) :
                new ObjectParameter("test_date", typeof(System.DateTime));
    
            var vcHospitalCityParameter = vcHospitalCity != null ?
                new ObjectParameter("vcHospitalCity", vcHospitalCity) :
                new ObjectParameter("vcHospitalCity", typeof(string));
    
            var vcDrugIdParameter = vcDrugId != null ?
                new ObjectParameter("vcDrugId", vcDrugId) :
                new ObjectParameter("vcDrugId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrAdvSearch", isrParameter, vcParentIDParameter, user_idParameter, hos_idParameter, vcDiseaseIDParameter, todateParameter, fromdateParameter, doctor_nameParameter, visit_dateParameter, performing_labParameter, vcTestIdParameter, test_dateParameter, vcHospitalCityParameter, vcDrugIdParameter);
        }
    
        public virtual int sp_EhrAdvSearchFields(string isr, string vcParentID, string user_id, string tablename, string hospital_city, string vcOtherCity)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcParentIDParameter = vcParentID != null ?
                new ObjectParameter("vcParentID", vcParentID) :
                new ObjectParameter("vcParentID", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var tablenameParameter = tablename != null ?
                new ObjectParameter("Tablename", tablename) :
                new ObjectParameter("Tablename", typeof(string));
    
            var hospital_cityParameter = hospital_city != null ?
                new ObjectParameter("hospital_city", hospital_city) :
                new ObjectParameter("hospital_city", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrAdvSearchFields", isrParameter, vcParentIDParameter, user_idParameter, tablenameParameter, hospital_cityParameter, vcOtherCityParameter);
        }
    
        public virtual ObjectResult<sp_EhrAllergies_Result> sp_EhrAllergies(string isr, string vcParentID, string user_id, string tablename, string hospital_city, string vcOtherCity)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcParentIDParameter = vcParentID != null ?
                new ObjectParameter("vcParentID", vcParentID) :
                new ObjectParameter("vcParentID", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var tablenameParameter = tablename != null ?
                new ObjectParameter("Tablename", tablename) :
                new ObjectParameter("Tablename", typeof(string));
    
            var hospital_cityParameter = hospital_city != null ?
                new ObjectParameter("hospital_city", hospital_city) :
                new ObjectParameter("hospital_city", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrAllergies_Result>("sp_EhrAllergies", isrParameter, vcParentIDParameter, user_idParameter, tablenameParameter, hospital_cityParameter, vcOtherCityParameter);
        }
    
        public virtual int sp_EhrAllergiesUpdate(string isr, string vcOtherDiseaseName, string user_id, string allergy_id, Nullable<System.DateTime> dtStartDate, string vcStatus, string vcSaverity, string vcRemarks, string txHistory, string oldallergy_id, Nullable<System.DateTime> oldstartdate, string allergy_name)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcOtherDiseaseNameParameter = vcOtherDiseaseName != null ?
                new ObjectParameter("vcOtherDiseaseName", vcOtherDiseaseName) :
                new ObjectParameter("vcOtherDiseaseName", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var allergy_idParameter = allergy_id != null ?
                new ObjectParameter("allergy_id", allergy_id) :
                new ObjectParameter("allergy_id", typeof(string));
    
            var dtStartDateParameter = dtStartDate.HasValue ?
                new ObjectParameter("dtStartDate", dtStartDate) :
                new ObjectParameter("dtStartDate", typeof(System.DateTime));
    
            var vcStatusParameter = vcStatus != null ?
                new ObjectParameter("vcStatus", vcStatus) :
                new ObjectParameter("vcStatus", typeof(string));
    
            var vcSaverityParameter = vcSaverity != null ?
                new ObjectParameter("vcSaverity", vcSaverity) :
                new ObjectParameter("vcSaverity", typeof(string));
    
            var vcRemarksParameter = vcRemarks != null ?
                new ObjectParameter("vcRemarks", vcRemarks) :
                new ObjectParameter("vcRemarks", typeof(string));
    
            var txHistoryParameter = txHistory != null ?
                new ObjectParameter("txHistory", txHistory) :
                new ObjectParameter("txHistory", typeof(string));
    
            var oldallergy_idParameter = oldallergy_id != null ?
                new ObjectParameter("oldallergy_id", oldallergy_id) :
                new ObjectParameter("oldallergy_id", typeof(string));
    
            var oldstartdateParameter = oldstartdate.HasValue ?
                new ObjectParameter("oldstartdate", oldstartdate) :
                new ObjectParameter("oldstartdate", typeof(System.DateTime));
    
            var allergy_nameParameter = allergy_name != null ?
                new ObjectParameter("allergy_name", allergy_name) :
                new ObjectParameter("allergy_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrAllergiesUpdate", isrParameter, vcOtherDiseaseNameParameter, user_idParameter, allergy_idParameter, dtStartDateParameter, vcStatusParameter, vcSaverityParameter, vcRemarksParameter, txHistoryParameter, oldallergy_idParameter, oldstartdateParameter, allergy_nameParameter);
        }
    
        public virtual int sp_EhrBasicDetails(string isr, string vcParentID, string user_id, string tablename, string hospital_city, string vcOtherCity)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcParentIDParameter = vcParentID != null ?
                new ObjectParameter("vcParentID", vcParentID) :
                new ObjectParameter("vcParentID", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var tablenameParameter = tablename != null ?
                new ObjectParameter("Tablename", tablename) :
                new ObjectParameter("Tablename", typeof(string));
    
            var hospital_cityParameter = hospital_city != null ?
                new ObjectParameter("hospital_city", hospital_city) :
                new ObjectParameter("hospital_city", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrBasicDetails", isrParameter, vcParentIDParameter, user_idParameter, tablenameParameter, hospital_cityParameter, vcOtherCityParameter);
        }
    
        public virtual ObjectResult<sp_EhrBasicHealthDeatils_Result> sp_EhrBasicHealthDeatils(string user_id, string isr)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrBasicHealthDeatils_Result>("sp_EhrBasicHealthDeatils", user_idParameter, isrParameter);
        }
    
        public virtual int sp_EhrBasicHealthDeatilsUpdate(string user_id, string vcAge, string gender, string height_feet, string height_inch, string measure1, string measure2, string weight, string relationship_status, string blood_type, string bP_Systolic, string bP_Diastolic, string cholesterol, string isr)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var vcAgeParameter = vcAge != null ?
                new ObjectParameter("vcAge", vcAge) :
                new ObjectParameter("vcAge", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var height_feetParameter = height_feet != null ?
                new ObjectParameter("height_feet", height_feet) :
                new ObjectParameter("height_feet", typeof(string));
    
            var height_inchParameter = height_inch != null ?
                new ObjectParameter("height_inch", height_inch) :
                new ObjectParameter("height_inch", typeof(string));
    
            var measure1Parameter = measure1 != null ?
                new ObjectParameter("measure1", measure1) :
                new ObjectParameter("measure1", typeof(string));
    
            var measure2Parameter = measure2 != null ?
                new ObjectParameter("measure2", measure2) :
                new ObjectParameter("measure2", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(string));
    
            var relationship_statusParameter = relationship_status != null ?
                new ObjectParameter("relationship_status", relationship_status) :
                new ObjectParameter("relationship_status", typeof(string));
    
            var blood_typeParameter = blood_type != null ?
                new ObjectParameter("blood_type", blood_type) :
                new ObjectParameter("blood_type", typeof(string));
    
            var bP_SystolicParameter = bP_Systolic != null ?
                new ObjectParameter("BP_Systolic", bP_Systolic) :
                new ObjectParameter("BP_Systolic", typeof(string));
    
            var bP_DiastolicParameter = bP_Diastolic != null ?
                new ObjectParameter("BP_Diastolic", bP_Diastolic) :
                new ObjectParameter("BP_Diastolic", typeof(string));
    
            var cholesterolParameter = cholesterol != null ?
                new ObjectParameter("Cholesterol", cholesterol) :
                new ObjectParameter("Cholesterol", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrBasicHealthDeatilsUpdate", user_idParameter, vcAgeParameter, genderParameter, height_feetParameter, height_inchParameter, measure1Parameter, measure2Parameter, weightParameter, relationship_statusParameter, blood_typeParameter, bP_SystolicParameter, bP_DiastolicParameter, cholesterolParameter, isrParameter);
        }
    
        public virtual int sp_EhrCCUpdate(string user_id, Nullable<int> ccid, Nullable<System.DateTime> dtStartDate, Nullable<System.DateTime> dtEndDate, string note, string isr)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var ccidParameter = ccid.HasValue ?
                new ObjectParameter("ccid", ccid) :
                new ObjectParameter("ccid", typeof(int));
    
            var dtStartDateParameter = dtStartDate.HasValue ?
                new ObjectParameter("dtStartDate", dtStartDate) :
                new ObjectParameter("dtStartDate", typeof(System.DateTime));
    
            var dtEndDateParameter = dtEndDate.HasValue ?
                new ObjectParameter("dtEndDate", dtEndDate) :
                new ObjectParameter("dtEndDate", typeof(System.DateTime));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrCCUpdate", user_idParameter, ccidParameter, dtStartDateParameter, dtEndDateParameter, noteParameter, isrParameter);
        }
    
        public virtual ObjectResult<sp_EhrDiseaseView_Result> sp_EhrDiseaseView(string vcDiseaseID, string hos_id, string vcHospitalCity, string user_id)
        {
            var vcDiseaseIDParameter = vcDiseaseID != null ?
                new ObjectParameter("vcDiseaseID", vcDiseaseID) :
                new ObjectParameter("vcDiseaseID", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var vcHospitalCityParameter = vcHospitalCity != null ?
                new ObjectParameter("vcHospitalCity", vcHospitalCity) :
                new ObjectParameter("vcHospitalCity", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrDiseaseView_Result>("sp_EhrDiseaseView", vcDiseaseIDParameter, hos_idParameter, vcHospitalCityParameter, user_idParameter);
        }
    
        public virtual int sp_EhrDoctorVisit(string isr, Nullable<System.DateTime> visit_date, string doctor_name, string vcDiseaseId, string vcOtherDiseaseName, string vcCityName, string vcParentID, string user_id, string tablename, string hospital_city, string vcOtherCity)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var visit_dateParameter = visit_date.HasValue ?
                new ObjectParameter("visit_date", visit_date) :
                new ObjectParameter("visit_date", typeof(System.DateTime));
    
            var doctor_nameParameter = doctor_name != null ?
                new ObjectParameter("doctor_name", doctor_name) :
                new ObjectParameter("doctor_name", typeof(string));
    
            var vcDiseaseIdParameter = vcDiseaseId != null ?
                new ObjectParameter("vcDiseaseId", vcDiseaseId) :
                new ObjectParameter("vcDiseaseId", typeof(string));
    
            var vcOtherDiseaseNameParameter = vcOtherDiseaseName != null ?
                new ObjectParameter("vcOtherDiseaseName", vcOtherDiseaseName) :
                new ObjectParameter("vcOtherDiseaseName", typeof(string));
    
            var vcCityNameParameter = vcCityName != null ?
                new ObjectParameter("vcCityName", vcCityName) :
                new ObjectParameter("vcCityName", typeof(string));
    
            var vcParentIDParameter = vcParentID != null ?
                new ObjectParameter("vcParentID", vcParentID) :
                new ObjectParameter("vcParentID", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var tablenameParameter = tablename != null ?
                new ObjectParameter("Tablename", tablename) :
                new ObjectParameter("Tablename", typeof(string));
    
            var hospital_cityParameter = hospital_city != null ?
                new ObjectParameter("hospital_city", hospital_city) :
                new ObjectParameter("hospital_city", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrDoctorVisit", isrParameter, visit_dateParameter, doctor_nameParameter, vcDiseaseIdParameter, vcOtherDiseaseNameParameter, vcCityNameParameter, vcParentIDParameter, user_idParameter, tablenameParameter, hospital_cityParameter, vcOtherCityParameter);
        }
    
        public virtual int sp_EhrDoctorVisitUpdate(string user_id, Nullable<System.DateTime> visit_date, string doctor_name, string address, string city, Nullable<int> pincode, string contact_no, string problem_condition_suspected, string disease_condition_diagnosed, Nullable<double> visit_charges, string treatment_details, Nullable<int> doctor_rating, string vcOtherDiseaseName, string vcOtherDocName, string vcOtherCity, string vcOtherDiseaseId, string isr, string p_polddoctor_name, string oldvcDiseaseId, string oldvcOtherDiseaseName, Nullable<System.DateTime> p_poldvisit_date)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var visit_dateParameter = visit_date.HasValue ?
                new ObjectParameter("visit_date", visit_date) :
                new ObjectParameter("visit_date", typeof(System.DateTime));
    
            var doctor_nameParameter = doctor_name != null ?
                new ObjectParameter("doctor_name", doctor_name) :
                new ObjectParameter("doctor_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(int));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var problem_condition_suspectedParameter = problem_condition_suspected != null ?
                new ObjectParameter("problem_condition_suspected", problem_condition_suspected) :
                new ObjectParameter("problem_condition_suspected", typeof(string));
    
            var disease_condition_diagnosedParameter = disease_condition_diagnosed != null ?
                new ObjectParameter("disease_condition_diagnosed", disease_condition_diagnosed) :
                new ObjectParameter("disease_condition_diagnosed", typeof(string));
    
            var visit_chargesParameter = visit_charges.HasValue ?
                new ObjectParameter("visit_charges", visit_charges) :
                new ObjectParameter("visit_charges", typeof(double));
    
            var treatment_detailsParameter = treatment_details != null ?
                new ObjectParameter("treatment_details", treatment_details) :
                new ObjectParameter("treatment_details", typeof(string));
    
            var doctor_ratingParameter = doctor_rating.HasValue ?
                new ObjectParameter("doctor_rating", doctor_rating) :
                new ObjectParameter("doctor_rating", typeof(int));
    
            var vcOtherDiseaseNameParameter = vcOtherDiseaseName != null ?
                new ObjectParameter("vcOtherDiseaseName", vcOtherDiseaseName) :
                new ObjectParameter("vcOtherDiseaseName", typeof(string));
    
            var vcOtherDocNameParameter = vcOtherDocName != null ?
                new ObjectParameter("vcOtherDocName", vcOtherDocName) :
                new ObjectParameter("vcOtherDocName", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            var vcOtherDiseaseIdParameter = vcOtherDiseaseId != null ?
                new ObjectParameter("vcOtherDiseaseId", vcOtherDiseaseId) :
                new ObjectParameter("vcOtherDiseaseId", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var p_polddoctor_nameParameter = p_polddoctor_name != null ?
                new ObjectParameter("p_polddoctor_name", p_polddoctor_name) :
                new ObjectParameter("p_polddoctor_name", typeof(string));
    
            var oldvcDiseaseIdParameter = oldvcDiseaseId != null ?
                new ObjectParameter("oldvcDiseaseId", oldvcDiseaseId) :
                new ObjectParameter("oldvcDiseaseId", typeof(string));
    
            var oldvcOtherDiseaseNameParameter = oldvcOtherDiseaseName != null ?
                new ObjectParameter("oldvcOtherDiseaseName", oldvcOtherDiseaseName) :
                new ObjectParameter("oldvcOtherDiseaseName", typeof(string));
    
            var p_poldvisit_dateParameter = p_poldvisit_date.HasValue ?
                new ObjectParameter("p_poldvisit_date", p_poldvisit_date) :
                new ObjectParameter("p_poldvisit_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrDoctorVisitUpdate", user_idParameter, visit_dateParameter, doctor_nameParameter, addressParameter, cityParameter, pincodeParameter, contact_noParameter, problem_condition_suspectedParameter, disease_condition_diagnosedParameter, visit_chargesParameter, treatment_detailsParameter, doctor_ratingParameter, vcOtherDiseaseNameParameter, vcOtherDocNameParameter, vcOtherCityParameter, vcOtherDiseaseIdParameter, isrParameter, p_polddoctor_nameParameter, oldvcDiseaseIdParameter, oldvcOtherDiseaseNameParameter, p_poldvisit_dateParameter);
        }
    
        public virtual ObjectResult<sp_EhrDoctorVisitView_Result> sp_EhrDoctorVisitView(string doctor_name, string vcDiseaseID, Nullable<System.DateTime> todate, Nullable<System.DateTime> fromdate, string user_id)
        {
            var doctor_nameParameter = doctor_name != null ?
                new ObjectParameter("doctor_name", doctor_name) :
                new ObjectParameter("doctor_name", typeof(string));
    
            var vcDiseaseIDParameter = vcDiseaseID != null ?
                new ObjectParameter("vcDiseaseID", vcDiseaseID) :
                new ObjectParameter("vcDiseaseID", typeof(string));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrDoctorVisitView_Result>("sp_EhrDoctorVisitView", doctor_nameParameter, vcDiseaseIDParameter, todateParameter, fromdateParameter, user_idParameter);
        }
    
        public virtual int sp_EhrHospitalization(string isr, string city, string hospital_name, Nullable<System.DateTime> admission_date, string vcOldCity, string vcOldDisease, string vcOldOtherDiseaseName, string vcOldOtherHospital, string user_id)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var admission_dateParameter = admission_date.HasValue ?
                new ObjectParameter("admission_date", admission_date) :
                new ObjectParameter("admission_date", typeof(System.DateTime));
    
            var vcOldCityParameter = vcOldCity != null ?
                new ObjectParameter("vcOldCity", vcOldCity) :
                new ObjectParameter("vcOldCity", typeof(string));
    
            var vcOldDiseaseParameter = vcOldDisease != null ?
                new ObjectParameter("vcOldDisease", vcOldDisease) :
                new ObjectParameter("vcOldDisease", typeof(string));
    
            var vcOldOtherDiseaseNameParameter = vcOldOtherDiseaseName != null ?
                new ObjectParameter("vcOldOtherDiseaseName", vcOldOtherDiseaseName) :
                new ObjectParameter("vcOldOtherDiseaseName", typeof(string));
    
            var vcOldOtherHospitalParameter = vcOldOtherHospital != null ?
                new ObjectParameter("vcOldOtherHospital", vcOldOtherHospital) :
                new ObjectParameter("vcOldOtherHospital", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrHospitalization", isrParameter, cityParameter, hospital_nameParameter, admission_dateParameter, vcOldCityParameter, vcOldDiseaseParameter, vcOldOtherDiseaseNameParameter, vcOldOtherHospitalParameter, user_idParameter);
        }
    
        public virtual int sp_EhrHospitalizationUpdate(Nullable<System.DateTime> admission_date, string hospital_name, Nullable<System.DateTime> discharge_date, string hospital_address, string hospital_city, string hospital_pincode, string doctor_name, string doctor_address, string doctor_contactno, string problem_condition_suspected, string disease_condion_diagnosed, string treatment_details, Nullable<double> cost_of_treatment, string discharge_summary, Nullable<int> hospital_rating, string surgery, string surgeonName, string vcOtherDiseaseName, string vcOtherDoctor, string vcOtherHospital, string vcOtherCity, string user_id, Nullable<System.DateTime> oldadmission_date, string oldhospital_name, string vcOldCity, string vcOldDisease, string vcOldOtherDiseaseName, string isr, string vcDiseaseID, string vcOldOtherHospital)
        {
            var admission_dateParameter = admission_date.HasValue ?
                new ObjectParameter("admission_date", admission_date) :
                new ObjectParameter("admission_date", typeof(System.DateTime));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var discharge_dateParameter = discharge_date.HasValue ?
                new ObjectParameter("discharge_date", discharge_date) :
                new ObjectParameter("discharge_date", typeof(System.DateTime));
    
            var hospital_addressParameter = hospital_address != null ?
                new ObjectParameter("hospital_address", hospital_address) :
                new ObjectParameter("hospital_address", typeof(string));
    
            var hospital_cityParameter = hospital_city != null ?
                new ObjectParameter("hospital_city", hospital_city) :
                new ObjectParameter("hospital_city", typeof(string));
    
            var hospital_pincodeParameter = hospital_pincode != null ?
                new ObjectParameter("hospital_pincode", hospital_pincode) :
                new ObjectParameter("hospital_pincode", typeof(string));
    
            var doctor_nameParameter = doctor_name != null ?
                new ObjectParameter("doctor_name", doctor_name) :
                new ObjectParameter("doctor_name", typeof(string));
    
            var doctor_addressParameter = doctor_address != null ?
                new ObjectParameter("doctor_address", doctor_address) :
                new ObjectParameter("doctor_address", typeof(string));
    
            var doctor_contactnoParameter = doctor_contactno != null ?
                new ObjectParameter("doctor_contactno", doctor_contactno) :
                new ObjectParameter("doctor_contactno", typeof(string));
    
            var problem_condition_suspectedParameter = problem_condition_suspected != null ?
                new ObjectParameter("problem_condition_suspected", problem_condition_suspected) :
                new ObjectParameter("problem_condition_suspected", typeof(string));
    
            var disease_condion_diagnosedParameter = disease_condion_diagnosed != null ?
                new ObjectParameter("disease_condion_diagnosed", disease_condion_diagnosed) :
                new ObjectParameter("disease_condion_diagnosed", typeof(string));
    
            var treatment_detailsParameter = treatment_details != null ?
                new ObjectParameter("treatment_details", treatment_details) :
                new ObjectParameter("treatment_details", typeof(string));
    
            var cost_of_treatmentParameter = cost_of_treatment.HasValue ?
                new ObjectParameter("cost_of_treatment", cost_of_treatment) :
                new ObjectParameter("cost_of_treatment", typeof(double));
    
            var discharge_summaryParameter = discharge_summary != null ?
                new ObjectParameter("discharge_summary", discharge_summary) :
                new ObjectParameter("discharge_summary", typeof(string));
    
            var hospital_ratingParameter = hospital_rating.HasValue ?
                new ObjectParameter("hospital_rating", hospital_rating) :
                new ObjectParameter("hospital_rating", typeof(int));
    
            var surgeryParameter = surgery != null ?
                new ObjectParameter("surgery", surgery) :
                new ObjectParameter("surgery", typeof(string));
    
            var surgeonNameParameter = surgeonName != null ?
                new ObjectParameter("surgeonName", surgeonName) :
                new ObjectParameter("surgeonName", typeof(string));
    
            var vcOtherDiseaseNameParameter = vcOtherDiseaseName != null ?
                new ObjectParameter("vcOtherDiseaseName", vcOtherDiseaseName) :
                new ObjectParameter("vcOtherDiseaseName", typeof(string));
    
            var vcOtherDoctorParameter = vcOtherDoctor != null ?
                new ObjectParameter("vcOtherDoctor", vcOtherDoctor) :
                new ObjectParameter("vcOtherDoctor", typeof(string));
    
            var vcOtherHospitalParameter = vcOtherHospital != null ?
                new ObjectParameter("vcOtherHospital", vcOtherHospital) :
                new ObjectParameter("vcOtherHospital", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var oldadmission_dateParameter = oldadmission_date.HasValue ?
                new ObjectParameter("oldadmission_date", oldadmission_date) :
                new ObjectParameter("oldadmission_date", typeof(System.DateTime));
    
            var oldhospital_nameParameter = oldhospital_name != null ?
                new ObjectParameter("oldhospital_name", oldhospital_name) :
                new ObjectParameter("oldhospital_name", typeof(string));
    
            var vcOldCityParameter = vcOldCity != null ?
                new ObjectParameter("vcOldCity", vcOldCity) :
                new ObjectParameter("vcOldCity", typeof(string));
    
            var vcOldDiseaseParameter = vcOldDisease != null ?
                new ObjectParameter("vcOldDisease", vcOldDisease) :
                new ObjectParameter("vcOldDisease", typeof(string));
    
            var vcOldOtherDiseaseNameParameter = vcOldOtherDiseaseName != null ?
                new ObjectParameter("vcOldOtherDiseaseName", vcOldOtherDiseaseName) :
                new ObjectParameter("vcOldOtherDiseaseName", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcDiseaseIDParameter = vcDiseaseID != null ?
                new ObjectParameter("vcDiseaseID", vcDiseaseID) :
                new ObjectParameter("vcDiseaseID", typeof(string));
    
            var vcOldOtherHospitalParameter = vcOldOtherHospital != null ?
                new ObjectParameter("vcOldOtherHospital", vcOldOtherHospital) :
                new ObjectParameter("vcOldOtherHospital", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrHospitalizationUpdate", admission_dateParameter, hospital_nameParameter, discharge_dateParameter, hospital_addressParameter, hospital_cityParameter, hospital_pincodeParameter, doctor_nameParameter, doctor_addressParameter, doctor_contactnoParameter, problem_condition_suspectedParameter, disease_condion_diagnosedParameter, treatment_detailsParameter, cost_of_treatmentParameter, discharge_summaryParameter, hospital_ratingParameter, surgeryParameter, surgeonNameParameter, vcOtherDiseaseNameParameter, vcOtherDoctorParameter, vcOtherHospitalParameter, vcOtherCityParameter, user_idParameter, oldadmission_dateParameter, oldhospital_nameParameter, vcOldCityParameter, vcOldDiseaseParameter, vcOldOtherDiseaseNameParameter, isrParameter, vcDiseaseIDParameter, vcOldOtherHospitalParameter);
        }
    
        public virtual ObjectResult<sp_EhrHospitalView_Result> sp_EhrHospitalView(string vcDiseaseID, string hos_id, string vcHospitalCity, Nullable<System.DateTime> todate, Nullable<System.DateTime> fromdate, string user_id)
        {
            var vcDiseaseIDParameter = vcDiseaseID != null ?
                new ObjectParameter("vcDiseaseID", vcDiseaseID) :
                new ObjectParameter("vcDiseaseID", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var vcHospitalCityParameter = vcHospitalCity != null ?
                new ObjectParameter("vcHospitalCity", vcHospitalCity) :
                new ObjectParameter("vcHospitalCity", typeof(string));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrHospitalView_Result>("sp_EhrHospitalView", vcDiseaseIDParameter, hos_idParameter, vcHospitalCityParameter, todateParameter, fromdateParameter, user_idParameter);
        }
    
        public virtual int sp_EhrImmunization(string isr, string user_id, string provider_Name, string plan_Policy_No, string immunization_other, string immunization_name, Nullable<System.DateTime> date)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var provider_NameParameter = provider_Name != null ?
                new ObjectParameter("Provider_Name", provider_Name) :
                new ObjectParameter("Provider_Name", typeof(string));
    
            var plan_Policy_NoParameter = plan_Policy_No != null ?
                new ObjectParameter("Plan_Policy_No", plan_Policy_No) :
                new ObjectParameter("Plan_Policy_No", typeof(string));
    
            var immunization_otherParameter = immunization_other != null ?
                new ObjectParameter("immunization_other", immunization_other) :
                new ObjectParameter("immunization_other", typeof(string));
    
            var immunization_nameParameter = immunization_name != null ?
                new ObjectParameter("immunization_name", immunization_name) :
                new ObjectParameter("immunization_name", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrImmunization", isrParameter, user_idParameter, provider_NameParameter, plan_Policy_NoParameter, immunization_otherParameter, immunization_nameParameter, dateParameter);
        }
    
        public virtual int sp_EhrImmunizationUpdate(string user_id, Nullable<System.DateTime> date, string immunization_name, string oldimmOther, string immunization_other, string date1, string date2, string date3, string remarks, string oldname, string dateOld, string isr)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var immunization_nameParameter = immunization_name != null ?
                new ObjectParameter("immunization_name", immunization_name) :
                new ObjectParameter("immunization_name", typeof(string));
    
            var oldimmOtherParameter = oldimmOther != null ?
                new ObjectParameter("OldimmOther", oldimmOther) :
                new ObjectParameter("OldimmOther", typeof(string));
    
            var immunization_otherParameter = immunization_other != null ?
                new ObjectParameter("immunization_other", immunization_other) :
                new ObjectParameter("immunization_other", typeof(string));
    
            var date1Parameter = date1 != null ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(string));
    
            var date2Parameter = date2 != null ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(string));
    
            var date3Parameter = date3 != null ?
                new ObjectParameter("date3", date3) :
                new ObjectParameter("date3", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var oldnameParameter = oldname != null ?
                new ObjectParameter("Oldname", oldname) :
                new ObjectParameter("Oldname", typeof(string));
    
            var dateOldParameter = dateOld != null ?
                new ObjectParameter("dateOld", dateOld) :
                new ObjectParameter("dateOld", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrImmunizationUpdate", user_idParameter, dateParameter, immunization_nameParameter, oldimmOtherParameter, immunization_otherParameter, date1Parameter, date2Parameter, date3Parameter, remarksParameter, oldnameParameter, dateOldParameter, isrParameter);
        }
    
        public virtual int sp_EhrInsurancePlan(string isr, string provider_Name, string plan_Policy_No, string user_id)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var provider_NameParameter = provider_Name != null ?
                new ObjectParameter("Provider_Name", provider_Name) :
                new ObjectParameter("Provider_Name", typeof(string));
    
            var plan_Policy_NoParameter = plan_Policy_No != null ?
                new ObjectParameter("Plan_Policy_No", plan_Policy_No) :
                new ObjectParameter("Plan_Policy_No", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrInsurancePlan", isrParameter, provider_NameParameter, plan_Policy_NoParameter, user_idParameter);
        }
    
        public virtual int sp_EhrInsurancePlanUpdate(string user_id, string isr, string provider_Type, string provider_Name, string plan_Name, string plan_Policy_No, string employment_Linked_Plan, string insured_Name, string relationship_With_Insured, string insured_Amount, string yearly_Plan_Premium, string contact_Person, string contact_No, Nullable<System.DateTime> date_Policy_Started, Nullable<System.DateTime> date_Policy_Ended, string oldProvider_Name, string oldPlan_Policy_No)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var provider_TypeParameter = provider_Type != null ?
                new ObjectParameter("Provider_Type", provider_Type) :
                new ObjectParameter("Provider_Type", typeof(string));
    
            var provider_NameParameter = provider_Name != null ?
                new ObjectParameter("Provider_Name", provider_Name) :
                new ObjectParameter("Provider_Name", typeof(string));
    
            var plan_NameParameter = plan_Name != null ?
                new ObjectParameter("Plan_Name", plan_Name) :
                new ObjectParameter("Plan_Name", typeof(string));
    
            var plan_Policy_NoParameter = plan_Policy_No != null ?
                new ObjectParameter("Plan_Policy_No", plan_Policy_No) :
                new ObjectParameter("Plan_Policy_No", typeof(string));
    
            var employment_Linked_PlanParameter = employment_Linked_Plan != null ?
                new ObjectParameter("Employment_Linked_Plan", employment_Linked_Plan) :
                new ObjectParameter("Employment_Linked_Plan", typeof(string));
    
            var insured_NameParameter = insured_Name != null ?
                new ObjectParameter("Insured_Name", insured_Name) :
                new ObjectParameter("Insured_Name", typeof(string));
    
            var relationship_With_InsuredParameter = relationship_With_Insured != null ?
                new ObjectParameter("Relationship_With_Insured", relationship_With_Insured) :
                new ObjectParameter("Relationship_With_Insured", typeof(string));
    
            var insured_AmountParameter = insured_Amount != null ?
                new ObjectParameter("Insured_Amount", insured_Amount) :
                new ObjectParameter("Insured_Amount", typeof(string));
    
            var yearly_Plan_PremiumParameter = yearly_Plan_Premium != null ?
                new ObjectParameter("Yearly_Plan_Premium", yearly_Plan_Premium) :
                new ObjectParameter("Yearly_Plan_Premium", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("Contact_No", contact_No) :
                new ObjectParameter("Contact_No", typeof(string));
    
            var date_Policy_StartedParameter = date_Policy_Started.HasValue ?
                new ObjectParameter("Date_Policy_Started", date_Policy_Started) :
                new ObjectParameter("Date_Policy_Started", typeof(System.DateTime));
    
            var date_Policy_EndedParameter = date_Policy_Ended.HasValue ?
                new ObjectParameter("Date_Policy_Ended", date_Policy_Ended) :
                new ObjectParameter("Date_Policy_Ended", typeof(System.DateTime));
    
            var oldProvider_NameParameter = oldProvider_Name != null ?
                new ObjectParameter("oldProvider_Name", oldProvider_Name) :
                new ObjectParameter("oldProvider_Name", typeof(string));
    
            var oldPlan_Policy_NoParameter = oldPlan_Policy_No != null ?
                new ObjectParameter("oldPlan_Policy_No", oldPlan_Policy_No) :
                new ObjectParameter("oldPlan_Policy_No", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrInsurancePlanUpdate", user_idParameter, isrParameter, provider_TypeParameter, provider_NameParameter, plan_NameParameter, plan_Policy_NoParameter, employment_Linked_PlanParameter, insured_NameParameter, relationship_With_InsuredParameter, insured_AmountParameter, yearly_Plan_PremiumParameter, contact_PersonParameter, contact_NoParameter, date_Policy_StartedParameter, date_Policy_EndedParameter, oldProvider_NameParameter, oldPlan_Policy_NoParameter);
        }
    
        public virtual int sp_EhrLabReports(string isr, string vcParentID, string user_id, string tablename, string hospital_city, string vcOtherCity)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcParentIDParameter = vcParentID != null ?
                new ObjectParameter("vcParentID", vcParentID) :
                new ObjectParameter("vcParentID", typeof(string));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var tablenameParameter = tablename != null ?
                new ObjectParameter("Tablename", tablename) :
                new ObjectParameter("Tablename", typeof(string));
    
            var hospital_cityParameter = hospital_city != null ?
                new ObjectParameter("hospital_city", hospital_city) :
                new ObjectParameter("hospital_city", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrLabReports", isrParameter, vcParentIDParameter, user_idParameter, tablenameParameter, hospital_cityParameter, vcOtherCityParameter);
        }
    
        public virtual ObjectResult<sp_EhrLabReportUpdate_Result> sp_EhrLabReportUpdate(string user_id, string isr, Nullable<System.DateTime> test_date, string performing_lab, string vcTestId, string vcDiseaseId, string vcOtherDiseaseName, string vcOtherTest, string vcOldCityName, string lab_address, string lab_city, string lab_zone, string lab_pincode, string doctor_name, string doctor_address, string disease_diagnosed, string test_type, string result, string comments, string vcOtherCity, string vcOtherDoctor, string oldperforming_lab, string oldtest_type, string vcOldDisease, string vcOldOtherTest, string vcOldOtherDisease, Nullable<double> vcActualRange, Nullable<double> vcMaxRange, Nullable<double> vcMinRange, Nullable<System.DateTime> oldtest_date)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var test_dateParameter = test_date.HasValue ?
                new ObjectParameter("test_date", test_date) :
                new ObjectParameter("test_date", typeof(System.DateTime));
    
            var performing_labParameter = performing_lab != null ?
                new ObjectParameter("performing_lab", performing_lab) :
                new ObjectParameter("performing_lab", typeof(string));
    
            var vcTestIdParameter = vcTestId != null ?
                new ObjectParameter("vcTestId", vcTestId) :
                new ObjectParameter("vcTestId", typeof(string));
    
            var vcDiseaseIdParameter = vcDiseaseId != null ?
                new ObjectParameter("vcDiseaseId", vcDiseaseId) :
                new ObjectParameter("vcDiseaseId", typeof(string));
    
            var vcOtherDiseaseNameParameter = vcOtherDiseaseName != null ?
                new ObjectParameter("vcOtherDiseaseName", vcOtherDiseaseName) :
                new ObjectParameter("vcOtherDiseaseName", typeof(string));
    
            var vcOtherTestParameter = vcOtherTest != null ?
                new ObjectParameter("vcOtherTest", vcOtherTest) :
                new ObjectParameter("vcOtherTest", typeof(string));
    
            var vcOldCityNameParameter = vcOldCityName != null ?
                new ObjectParameter("vcOldCityName", vcOldCityName) :
                new ObjectParameter("vcOldCityName", typeof(string));
    
            var lab_addressParameter = lab_address != null ?
                new ObjectParameter("lab_address", lab_address) :
                new ObjectParameter("lab_address", typeof(string));
    
            var lab_cityParameter = lab_city != null ?
                new ObjectParameter("lab_city", lab_city) :
                new ObjectParameter("lab_city", typeof(string));
    
            var lab_zoneParameter = lab_zone != null ?
                new ObjectParameter("lab_zone", lab_zone) :
                new ObjectParameter("lab_zone", typeof(string));
    
            var lab_pincodeParameter = lab_pincode != null ?
                new ObjectParameter("lab_pincode", lab_pincode) :
                new ObjectParameter("lab_pincode", typeof(string));
    
            var doctor_nameParameter = doctor_name != null ?
                new ObjectParameter("doctor_name", doctor_name) :
                new ObjectParameter("doctor_name", typeof(string));
    
            var doctor_addressParameter = doctor_address != null ?
                new ObjectParameter("doctor_address", doctor_address) :
                new ObjectParameter("doctor_address", typeof(string));
    
            var disease_diagnosedParameter = disease_diagnosed != null ?
                new ObjectParameter("disease_diagnosed", disease_diagnosed) :
                new ObjectParameter("disease_diagnosed", typeof(string));
    
            var test_typeParameter = test_type != null ?
                new ObjectParameter("test_type", test_type) :
                new ObjectParameter("test_type", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("result", result) :
                new ObjectParameter("result", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            var vcOtherDoctorParameter = vcOtherDoctor != null ?
                new ObjectParameter("vcOtherDoctor", vcOtherDoctor) :
                new ObjectParameter("vcOtherDoctor", typeof(string));
    
            var oldperforming_labParameter = oldperforming_lab != null ?
                new ObjectParameter("oldperforming_lab", oldperforming_lab) :
                new ObjectParameter("oldperforming_lab", typeof(string));
    
            var oldtest_typeParameter = oldtest_type != null ?
                new ObjectParameter("oldtest_type", oldtest_type) :
                new ObjectParameter("oldtest_type", typeof(string));
    
            var vcOldDiseaseParameter = vcOldDisease != null ?
                new ObjectParameter("vcOldDisease", vcOldDisease) :
                new ObjectParameter("vcOldDisease", typeof(string));
    
            var vcOldOtherTestParameter = vcOldOtherTest != null ?
                new ObjectParameter("vcOldOtherTest", vcOldOtherTest) :
                new ObjectParameter("vcOldOtherTest", typeof(string));
    
            var vcOldOtherDiseaseParameter = vcOldOtherDisease != null ?
                new ObjectParameter("vcOldOtherDisease", vcOldOtherDisease) :
                new ObjectParameter("vcOldOtherDisease", typeof(string));
    
            var vcActualRangeParameter = vcActualRange.HasValue ?
                new ObjectParameter("vcActualRange", vcActualRange) :
                new ObjectParameter("vcActualRange", typeof(double));
    
            var vcMaxRangeParameter = vcMaxRange.HasValue ?
                new ObjectParameter("vcMaxRange", vcMaxRange) :
                new ObjectParameter("vcMaxRange", typeof(double));
    
            var vcMinRangeParameter = vcMinRange.HasValue ?
                new ObjectParameter("vcMinRange", vcMinRange) :
                new ObjectParameter("vcMinRange", typeof(double));
    
            var oldtest_dateParameter = oldtest_date.HasValue ?
                new ObjectParameter("oldtest_date", oldtest_date) :
                new ObjectParameter("oldtest_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrLabReportUpdate_Result>("sp_EhrLabReportUpdate", user_idParameter, isrParameter, test_dateParameter, performing_labParameter, vcTestIdParameter, vcDiseaseIdParameter, vcOtherDiseaseNameParameter, vcOtherTestParameter, vcOldCityNameParameter, lab_addressParameter, lab_cityParameter, lab_zoneParameter, lab_pincodeParameter, doctor_nameParameter, doctor_addressParameter, disease_diagnosedParameter, test_typeParameter, resultParameter, commentsParameter, vcOtherCityParameter, vcOtherDoctorParameter, oldperforming_labParameter, oldtest_typeParameter, vcOldDiseaseParameter, vcOldOtherTestParameter, vcOldOtherDiseaseParameter, vcActualRangeParameter, vcMaxRangeParameter, vcMinRangeParameter, oldtest_dateParameter);
        }
    
        public virtual ObjectResult<sp_EhrLabView_Result> sp_EhrLabView(string vcDiseaseID, string performing_lab, string vcTestId, Nullable<System.DateTime> todate, Nullable<System.DateTime> fromdate, string user_id)
        {
            var vcDiseaseIDParameter = vcDiseaseID != null ?
                new ObjectParameter("vcDiseaseID", vcDiseaseID) :
                new ObjectParameter("vcDiseaseID", typeof(string));
    
            var performing_labParameter = performing_lab != null ?
                new ObjectParameter("performing_lab", performing_lab) :
                new ObjectParameter("performing_lab", typeof(string));
    
            var vcTestIdParameter = vcTestId != null ?
                new ObjectParameter("vcTestId", vcTestId) :
                new ObjectParameter("vcTestId", typeof(string));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrLabView_Result>("sp_EhrLabView", vcDiseaseIDParameter, performing_labParameter, vcTestIdParameter, todateParameter, fromdateParameter, user_idParameter);
        }
    
        public virtual ObjectResult<sp_EhrMeaseurements_Result> sp_EhrMeaseurements(string user_id, string weight, string measurement, string context, string mtype, string bP_Systolic, string bP_Diastolic, string pulse, string irregularHeartbeat, string lDL, string hDL, string triglycerides, string totalCholesterol, Nullable<System.DateTime> mdate, string mtime, string note, string age, string currentWeight, string gender, string heightInFeets, string heightInInches, string bloodGroup, string currentConditionsName, Nullable<System.DateTime> endDate, string status, string contact_ContactType, string firstName, string lastName, string emergencyContactPhone, string emergencyContactEmail, string emergencyContactAddress, string contactSpecialty, string contactOrganization, string isr)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(string));
    
            var measurementParameter = measurement != null ?
                new ObjectParameter("Measurement", measurement) :
                new ObjectParameter("Measurement", typeof(string));
    
            var contextParameter = context != null ?
                new ObjectParameter("context", context) :
                new ObjectParameter("context", typeof(string));
    
            var mtypeParameter = mtype != null ?
                new ObjectParameter("mtype", mtype) :
                new ObjectParameter("mtype", typeof(string));
    
            var bP_SystolicParameter = bP_Systolic != null ?
                new ObjectParameter("BP_Systolic", bP_Systolic) :
                new ObjectParameter("BP_Systolic", typeof(string));
    
            var bP_DiastolicParameter = bP_Diastolic != null ?
                new ObjectParameter("BP_Diastolic", bP_Diastolic) :
                new ObjectParameter("BP_Diastolic", typeof(string));
    
            var pulseParameter = pulse != null ?
                new ObjectParameter("Pulse", pulse) :
                new ObjectParameter("Pulse", typeof(string));
    
            var irregularHeartbeatParameter = irregularHeartbeat != null ?
                new ObjectParameter("IrregularHeartbeat", irregularHeartbeat) :
                new ObjectParameter("IrregularHeartbeat", typeof(string));
    
            var lDLParameter = lDL != null ?
                new ObjectParameter("LDL", lDL) :
                new ObjectParameter("LDL", typeof(string));
    
            var hDLParameter = hDL != null ?
                new ObjectParameter("HDL", hDL) :
                new ObjectParameter("HDL", typeof(string));
    
            var triglyceridesParameter = triglycerides != null ?
                new ObjectParameter("Triglycerides", triglycerides) :
                new ObjectParameter("Triglycerides", typeof(string));
    
            var totalCholesterolParameter = totalCholesterol != null ?
                new ObjectParameter("TotalCholesterol", totalCholesterol) :
                new ObjectParameter("TotalCholesterol", typeof(string));
    
            var mdateParameter = mdate.HasValue ?
                new ObjectParameter("mdate", mdate) :
                new ObjectParameter("mdate", typeof(System.DateTime));
    
            var mtimeParameter = mtime != null ?
                new ObjectParameter("mtime", mtime) :
                new ObjectParameter("mtime", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var currentWeightParameter = currentWeight != null ?
                new ObjectParameter("CurrentWeight", currentWeight) :
                new ObjectParameter("CurrentWeight", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var heightInFeetsParameter = heightInFeets != null ?
                new ObjectParameter("HeightInFeets", heightInFeets) :
                new ObjectParameter("HeightInFeets", typeof(string));
    
            var heightInInchesParameter = heightInInches != null ?
                new ObjectParameter("HeightInInches", heightInInches) :
                new ObjectParameter("HeightInInches", typeof(string));
    
            var bloodGroupParameter = bloodGroup != null ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(string));
    
            var currentConditionsNameParameter = currentConditionsName != null ?
                new ObjectParameter("CurrentConditionsName", currentConditionsName) :
                new ObjectParameter("CurrentConditionsName", typeof(string));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var contact_ContactTypeParameter = contact_ContactType != null ?
                new ObjectParameter("Contact_ContactType", contact_ContactType) :
                new ObjectParameter("Contact_ContactType", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emergencyContactPhoneParameter = emergencyContactPhone != null ?
                new ObjectParameter("EmergencyContactPhone", emergencyContactPhone) :
                new ObjectParameter("EmergencyContactPhone", typeof(string));
    
            var emergencyContactEmailParameter = emergencyContactEmail != null ?
                new ObjectParameter("EmergencyContactEmail", emergencyContactEmail) :
                new ObjectParameter("EmergencyContactEmail", typeof(string));
    
            var emergencyContactAddressParameter = emergencyContactAddress != null ?
                new ObjectParameter("EmergencyContactAddress", emergencyContactAddress) :
                new ObjectParameter("EmergencyContactAddress", typeof(string));
    
            var contactSpecialtyParameter = contactSpecialty != null ?
                new ObjectParameter("ContactSpecialty", contactSpecialty) :
                new ObjectParameter("ContactSpecialty", typeof(string));
    
            var contactOrganizationParameter = contactOrganization != null ?
                new ObjectParameter("ContactOrganization", contactOrganization) :
                new ObjectParameter("ContactOrganization", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrMeaseurements_Result>("sp_EhrMeaseurements", user_idParameter, weightParameter, measurementParameter, contextParameter, mtypeParameter, bP_SystolicParameter, bP_DiastolicParameter, pulseParameter, irregularHeartbeatParameter, lDLParameter, hDLParameter, triglyceridesParameter, totalCholesterolParameter, mdateParameter, mtimeParameter, noteParameter, ageParameter, currentWeightParameter, genderParameter, heightInFeetsParameter, heightInInchesParameter, bloodGroupParameter, currentConditionsNameParameter, endDateParameter, statusParameter, contact_ContactTypeParameter, firstNameParameter, lastNameParameter, emergencyContactPhoneParameter, emergencyContactEmailParameter, emergencyContactAddressParameter, contactSpecialtyParameter, contactOrganizationParameter, isrParameter);
        }
    
        public virtual int sp_EhrMedication(string isr, string drug_name, string disease, string vcOtherDiseaseName, string vcOtherDrugName, Nullable<System.DateTime> olddtStartDate, string user_id)
        {
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var drug_nameParameter = drug_name != null ?
                new ObjectParameter("drug_name", drug_name) :
                new ObjectParameter("drug_name", typeof(string));
    
            var diseaseParameter = disease != null ?
                new ObjectParameter("disease", disease) :
                new ObjectParameter("disease", typeof(string));
    
            var vcOtherDiseaseNameParameter = vcOtherDiseaseName != null ?
                new ObjectParameter("vcOtherDiseaseName", vcOtherDiseaseName) :
                new ObjectParameter("vcOtherDiseaseName", typeof(string));
    
            var vcOtherDrugNameParameter = vcOtherDrugName != null ?
                new ObjectParameter("vcOtherDrugName", vcOtherDrugName) :
                new ObjectParameter("vcOtherDrugName", typeof(string));
    
            var olddtStartDateParameter = olddtStartDate.HasValue ?
                new ObjectParameter("OlddtStartDate", olddtStartDate) :
                new ObjectParameter("OlddtStartDate", typeof(System.DateTime));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EhrMedication", isrParameter, drug_nameParameter, diseaseParameter, vcOtherDiseaseNameParameter, vcOtherDrugNameParameter, olddtStartDateParameter, user_idParameter);
        }
    
        public virtual ObjectResult<sp_EhrMedicationUpdate_Result> sp_EhrMedicationUpdate(string user_id, Nullable<System.DateTime> visit_date, string drug_Name, string problem, string disease, string form, string quantity, string how_Often, string status, string other, Nullable<System.DateTime> dtStartDate, string vcOtherDiseaseName, string vcOtherDrugName, string olddrug_name, string olddisease, string vcOldOtherDiseaseName, string vcOldOtherDrugName, Nullable<System.DateTime> olddtStartDate, Nullable<int> ccid, Nullable<int> cid, string dtStartDatex, Nullable<System.DateTime> dtEndDate, string note, string isr)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var visit_dateParameter = visit_date.HasValue ?
                new ObjectParameter("visit_date", visit_date) :
                new ObjectParameter("visit_date", typeof(System.DateTime));
    
            var drug_NameParameter = drug_Name != null ?
                new ObjectParameter("Drug_Name", drug_Name) :
                new ObjectParameter("Drug_Name", typeof(string));
    
            var problemParameter = problem != null ?
                new ObjectParameter("Problem", problem) :
                new ObjectParameter("Problem", typeof(string));
    
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var formParameter = form != null ?
                new ObjectParameter("Form", form) :
                new ObjectParameter("Form", typeof(string));
    
            var quantityParameter = quantity != null ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(string));
    
            var how_OftenParameter = how_Often != null ?
                new ObjectParameter("How_Often", how_Often) :
                new ObjectParameter("How_Often", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("Other", other) :
                new ObjectParameter("Other", typeof(string));
    
            var dtStartDateParameter = dtStartDate.HasValue ?
                new ObjectParameter("dtStartDate", dtStartDate) :
                new ObjectParameter("dtStartDate", typeof(System.DateTime));
    
            var vcOtherDiseaseNameParameter = vcOtherDiseaseName != null ?
                new ObjectParameter("vcOtherDiseaseName", vcOtherDiseaseName) :
                new ObjectParameter("vcOtherDiseaseName", typeof(string));
    
            var vcOtherDrugNameParameter = vcOtherDrugName != null ?
                new ObjectParameter("vcOtherDrugName", vcOtherDrugName) :
                new ObjectParameter("vcOtherDrugName", typeof(string));
    
            var olddrug_nameParameter = olddrug_name != null ?
                new ObjectParameter("Olddrug_name", olddrug_name) :
                new ObjectParameter("Olddrug_name", typeof(string));
    
            var olddiseaseParameter = olddisease != null ?
                new ObjectParameter("Olddisease", olddisease) :
                new ObjectParameter("Olddisease", typeof(string));
    
            var vcOldOtherDiseaseNameParameter = vcOldOtherDiseaseName != null ?
                new ObjectParameter("vcOldOtherDiseaseName", vcOldOtherDiseaseName) :
                new ObjectParameter("vcOldOtherDiseaseName", typeof(string));
    
            var vcOldOtherDrugNameParameter = vcOldOtherDrugName != null ?
                new ObjectParameter("vcOldOtherDrugName", vcOldOtherDrugName) :
                new ObjectParameter("vcOldOtherDrugName", typeof(string));
    
            var olddtStartDateParameter = olddtStartDate.HasValue ?
                new ObjectParameter("OlddtStartDate", olddtStartDate) :
                new ObjectParameter("OlddtStartDate", typeof(System.DateTime));
    
            var ccidParameter = ccid.HasValue ?
                new ObjectParameter("ccid", ccid) :
                new ObjectParameter("ccid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var dtStartDatexParameter = dtStartDatex != null ?
                new ObjectParameter("dtStartDatex", dtStartDatex) :
                new ObjectParameter("dtStartDatex", typeof(string));
    
            var dtEndDateParameter = dtEndDate.HasValue ?
                new ObjectParameter("dtEndDate", dtEndDate) :
                new ObjectParameter("dtEndDate", typeof(System.DateTime));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrMedicationUpdate_Result>("sp_EhrMedicationUpdate", user_idParameter, visit_dateParameter, drug_NameParameter, problemParameter, diseaseParameter, formParameter, quantityParameter, how_OftenParameter, statusParameter, otherParameter, dtStartDateParameter, vcOtherDiseaseNameParameter, vcOtherDrugNameParameter, olddrug_nameParameter, olddiseaseParameter, vcOldOtherDiseaseNameParameter, vcOldOtherDrugNameParameter, olddtStartDateParameter, ccidParameter, cidParameter, dtStartDatexParameter, dtEndDateParameter, noteParameter, isrParameter);
        }
    
        public virtual ObjectResult<sp_EhrMedicationView_Result> sp_EhrMedicationView(string vcDiseaseID, string vcDrugId, Nullable<System.DateTime> todate, Nullable<System.DateTime> fromdate, string user_id)
        {
            var vcDiseaseIDParameter = vcDiseaseID != null ?
                new ObjectParameter("vcDiseaseID", vcDiseaseID) :
                new ObjectParameter("vcDiseaseID", typeof(string));
    
            var vcDrugIdParameter = vcDrugId != null ?
                new ObjectParameter("vcDrugId", vcDrugId) :
                new ObjectParameter("vcDrugId", typeof(string));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(System.DateTime));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(System.DateTime));
    
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EhrMedicationView_Result>("sp_EhrMedicationView", vcDiseaseIDParameter, vcDrugIdParameter, todateParameter, fromdateParameter, user_idParameter);
        }
    
        public virtual ObjectResult<sp_getcommon_Result> sp_getcommon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getcommon_Result>("sp_getcommon");
        }
    
        public virtual ObjectResult<sp_GetDoctorDetails_Result> sp_GetDoctorDetails(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDoctorDetails_Result>("sp_GetDoctorDetails", doc_idParameter);
        }
    
        public virtual ObjectResult<sp_GetDoctorsDetails_Result> sp_GetDoctorsDetails(string vcDoctor_Name)
        {
            var vcDoctor_NameParameter = vcDoctor_Name != null ?
                new ObjectParameter("vcDoctor_Name", vcDoctor_Name) :
                new ObjectParameter("vcDoctor_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDoctorsDetails_Result>("sp_GetDoctorsDetails", vcDoctor_NameParameter);
        }
    
        public virtual ObjectResult<sp_GetHospitalDetail_Result> sp_GetHospitalDetail(string hos_id)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetHospitalDetail_Result>("sp_GetHospitalDetail", hos_idParameter);
        }
    
        public virtual ObjectResult<sp_GetHospitalDetails_Result> sp_GetHospitalDetails(string vcHospital_Name)
        {
            var vcHospital_NameParameter = vcHospital_Name != null ?
                new ObjectParameter("vcHospital_Name", vcHospital_Name) :
                new ObjectParameter("vcHospital_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetHospitalDetails_Result>("sp_GetHospitalDetails", vcHospital_NameParameter);
        }
    
        public virtual int sp_GetProcedureDescription(string skillName, string istr)
        {
            var skillNameParameter = skillName != null ?
                new ObjectParameter("SkillName", skillName) :
                new ObjectParameter("SkillName", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetProcedureDescription", skillNameParameter, istrParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_HospitalRegistrationBasicDetails_Result> sp_HospitalRegistrationBasicDetails(ObjectParameter count_hosId, ObjectParameter hos_id)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_HospitalRegistrationBasicDetails_Result>("sp_HospitalRegistrationBasicDetails", count_hosId, hos_id);
        }
    
        public virtual ObjectResult<sp_InputForm_Result> sp_InputForm(string istr, string hos_id, string dia_id, string specialityName, string tESTGROUPNAME, ObjectParameter maxPlanId, ObjectParameter maxContactId, Nullable<bool> isCity, string org_id)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var specialityNameParameter = specialityName != null ?
                new ObjectParameter("SpecialityName", specialityName) :
                new ObjectParameter("SpecialityName", typeof(string));
    
            var tESTGROUPNAMEParameter = tESTGROUPNAME != null ?
                new ObjectParameter("TESTGROUPNAME", tESTGROUPNAME) :
                new ObjectParameter("TESTGROUPNAME", typeof(string));
    
            var isCityParameter = isCity.HasValue ?
                new ObjectParameter("IsCity", isCity) :
                new ObjectParameter("IsCity", typeof(bool));
    
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_InputForm_Result>("sp_InputForm", istrParameter, hos_idParameter, dia_idParameter, specialityNameParameter, tESTGROUPNAMEParameter, maxPlanId, maxContactId, isCityParameter, org_idParameter);
        }
    
        public virtual int sp_InsertAmbulanceServicesDetail(Nullable<int> iD, string service_Type, string name, string contact_Person, string address, string city, string phone_No, string mobile_No, string email, string web_Url, string paymentCard_Accepted, string timing, string facilities, string vcUserName, string vcRoleType)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var service_TypeParameter = service_Type != null ?
                new ObjectParameter("Service_Type", service_Type) :
                new ObjectParameter("Service_Type", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contact_PersonParameter = contact_Person != null ?
                new ObjectParameter("Contact_Person", contact_Person) :
                new ObjectParameter("Contact_Person", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var phone_NoParameter = phone_No != null ?
                new ObjectParameter("Phone_No", phone_No) :
                new ObjectParameter("Phone_No", typeof(string));
    
            var mobile_NoParameter = mobile_No != null ?
                new ObjectParameter("Mobile_No", mobile_No) :
                new ObjectParameter("Mobile_No", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var web_UrlParameter = web_Url != null ?
                new ObjectParameter("Web_Url", web_Url) :
                new ObjectParameter("Web_Url", typeof(string));
    
            var paymentCard_AcceptedParameter = paymentCard_Accepted != null ?
                new ObjectParameter("PaymentCard_Accepted", paymentCard_Accepted) :
                new ObjectParameter("PaymentCard_Accepted", typeof(string));
    
            var timingParameter = timing != null ?
                new ObjectParameter("Timing", timing) :
                new ObjectParameter("Timing", typeof(string));
    
            var facilitiesParameter = facilities != null ?
                new ObjectParameter("Facilities", facilities) :
                new ObjectParameter("Facilities", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAmbulanceServicesDetail", iDParameter, service_TypeParameter, nameParameter, contact_PersonParameter, addressParameter, cityParameter, phone_NoParameter, mobile_NoParameter, emailParameter, web_UrlParameter, paymentCard_AcceptedParameter, timingParameter, facilitiesParameter, vcUserNameParameter, vcRoleTypeParameter);
        }
    
        public virtual int sp_InsertOrderDetail(string orderID, string emailID, string phone, Nullable<int> productID, Nullable<int> categoryID, Nullable<int> brandID, Nullable<double> unitPrice, Nullable<int> quantity, Nullable<int> customerID)
        {
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var brandIDParameter = brandID.HasValue ?
                new ObjectParameter("BrandID", brandID) :
                new ObjectParameter("BrandID", typeof(int));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(double));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOrderDetail", orderIDParameter, emailIDParameter, phoneParameter, productIDParameter, categoryIDParameter, brandIDParameter, unitPriceParameter, quantityParameter, customerIDParameter);
        }
    
        public virtual int sp_InsertOrganization(string org_id, string org_name, string org_type, string owner_name, string address, string city, string pincode, string std1, string phone1, string std2, string phone2, string website, string email, string branches, string rch_branch, string ambulance_facility, string rch_ambulance, Nullable<bool> associated_agency, string rch_agency, string fax, string updated_by, string updated_datetime, string old_age_home, string deaf_and_dumb, string blind, string adoption_centre, string orphanage, string mentally_challenged, string physically_disabled, string speech_therapy, string other, string other_category, string category_code, string chk_Physiotheraphy, string vcOtherOrgType, string vcUserName, string vcRoleType, string vcApproval)
        {
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            var org_nameParameter = org_name != null ?
                new ObjectParameter("org_name", org_name) :
                new ObjectParameter("org_name", typeof(string));
    
            var org_typeParameter = org_type != null ?
                new ObjectParameter("org_type", org_type) :
                new ObjectParameter("org_type", typeof(string));
    
            var owner_nameParameter = owner_name != null ?
                new ObjectParameter("owner_name", owner_name) :
                new ObjectParameter("owner_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var std1Parameter = std1 != null ?
                new ObjectParameter("std1", std1) :
                new ObjectParameter("std1", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var std2Parameter = std2 != null ?
                new ObjectParameter("std2", std2) :
                new ObjectParameter("std2", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var branchesParameter = branches != null ?
                new ObjectParameter("branches", branches) :
                new ObjectParameter("branches", typeof(string));
    
            var rch_branchParameter = rch_branch != null ?
                new ObjectParameter("rch_branch", rch_branch) :
                new ObjectParameter("rch_branch", typeof(string));
    
            var ambulance_facilityParameter = ambulance_facility != null ?
                new ObjectParameter("ambulance_facility", ambulance_facility) :
                new ObjectParameter("ambulance_facility", typeof(string));
    
            var rch_ambulanceParameter = rch_ambulance != null ?
                new ObjectParameter("rch_ambulance", rch_ambulance) :
                new ObjectParameter("rch_ambulance", typeof(string));
    
            var associated_agencyParameter = associated_agency.HasValue ?
                new ObjectParameter("Associated_agency", associated_agency) :
                new ObjectParameter("Associated_agency", typeof(bool));
    
            var rch_agencyParameter = rch_agency != null ?
                new ObjectParameter("rch_agency", rch_agency) :
                new ObjectParameter("rch_agency", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime != null ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(string));
    
            var old_age_homeParameter = old_age_home != null ?
                new ObjectParameter("old_age_home", old_age_home) :
                new ObjectParameter("old_age_home", typeof(string));
    
            var deaf_and_dumbParameter = deaf_and_dumb != null ?
                new ObjectParameter("deaf_and_dumb", deaf_and_dumb) :
                new ObjectParameter("deaf_and_dumb", typeof(string));
    
            var blindParameter = blind != null ?
                new ObjectParameter("blind", blind) :
                new ObjectParameter("blind", typeof(string));
    
            var adoption_centreParameter = adoption_centre != null ?
                new ObjectParameter("adoption_centre", adoption_centre) :
                new ObjectParameter("adoption_centre", typeof(string));
    
            var orphanageParameter = orphanage != null ?
                new ObjectParameter("orphanage", orphanage) :
                new ObjectParameter("orphanage", typeof(string));
    
            var mentally_challengedParameter = mentally_challenged != null ?
                new ObjectParameter("mentally_challenged", mentally_challenged) :
                new ObjectParameter("mentally_challenged", typeof(string));
    
            var physically_disabledParameter = physically_disabled != null ?
                new ObjectParameter("physically_disabled", physically_disabled) :
                new ObjectParameter("physically_disabled", typeof(string));
    
            var speech_therapyParameter = speech_therapy != null ?
                new ObjectParameter("speech_therapy", speech_therapy) :
                new ObjectParameter("speech_therapy", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var other_categoryParameter = other_category != null ?
                new ObjectParameter("other_category", other_category) :
                new ObjectParameter("other_category", typeof(string));
    
            var category_codeParameter = category_code != null ?
                new ObjectParameter("category_code", category_code) :
                new ObjectParameter("category_code", typeof(string));
    
            var chk_PhysiotheraphyParameter = chk_Physiotheraphy != null ?
                new ObjectParameter("chk_Physiotheraphy", chk_Physiotheraphy) :
                new ObjectParameter("chk_Physiotheraphy", typeof(string));
    
            var vcOtherOrgTypeParameter = vcOtherOrgType != null ?
                new ObjectParameter("vcOtherOrgType", vcOtherOrgType) :
                new ObjectParameter("vcOtherOrgType", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var vcApprovalParameter = vcApproval != null ?
                new ObjectParameter("vcApproval", vcApproval) :
                new ObjectParameter("vcApproval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOrganization", org_idParameter, org_nameParameter, org_typeParameter, owner_nameParameter, addressParameter, cityParameter, pincodeParameter, std1Parameter, phone1Parameter, std2Parameter, phone2Parameter, websiteParameter, emailParameter, branchesParameter, rch_branchParameter, ambulance_facilityParameter, rch_ambulanceParameter, associated_agencyParameter, rch_agencyParameter, faxParameter, updated_byParameter, updated_datetimeParameter, old_age_homeParameter, deaf_and_dumbParameter, blindParameter, adoption_centreParameter, orphanageParameter, mentally_challengedParameter, physically_disabledParameter, speech_therapyParameter, otherParameter, other_categoryParameter, category_codeParameter, chk_PhysiotheraphyParameter, vcOtherOrgTypeParameter, vcUserNameParameter, vcRoleTypeParameter, vcApprovalParameter);
        }
    
        public virtual int sp_InsertOrganizationFacilities(string org_id, Nullable<bool> hostel_facility, Nullable<int> beds, Nullable<bool> mess_facility, Nullable<bool> meal_facility, Nullable<bool> daycare_facility, Nullable<bool> medical_facility, Nullable<bool> tution_facility, string tution_rch, Nullable<bool> therapy_facility, string therapy_rch, Nullable<bool> training_facility, string training_rch, string schemes, string updated_by, Nullable<System.DateTime> updated_datetime, string medical_rch, string age_limit, string other_terms)
        {
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            var hostel_facilityParameter = hostel_facility.HasValue ?
                new ObjectParameter("hostel_facility", hostel_facility) :
                new ObjectParameter("hostel_facility", typeof(bool));
    
            var bedsParameter = beds.HasValue ?
                new ObjectParameter("beds", beds) :
                new ObjectParameter("beds", typeof(int));
    
            var mess_facilityParameter = mess_facility.HasValue ?
                new ObjectParameter("mess_facility", mess_facility) :
                new ObjectParameter("mess_facility", typeof(bool));
    
            var meal_facilityParameter = meal_facility.HasValue ?
                new ObjectParameter("meal_facility", meal_facility) :
                new ObjectParameter("meal_facility", typeof(bool));
    
            var daycare_facilityParameter = daycare_facility.HasValue ?
                new ObjectParameter("daycare_facility", daycare_facility) :
                new ObjectParameter("daycare_facility", typeof(bool));
    
            var medical_facilityParameter = medical_facility.HasValue ?
                new ObjectParameter("medical_facility", medical_facility) :
                new ObjectParameter("medical_facility", typeof(bool));
    
            var tution_facilityParameter = tution_facility.HasValue ?
                new ObjectParameter("tution_facility", tution_facility) :
                new ObjectParameter("tution_facility", typeof(bool));
    
            var tution_rchParameter = tution_rch != null ?
                new ObjectParameter("tution_rch", tution_rch) :
                new ObjectParameter("tution_rch", typeof(string));
    
            var therapy_facilityParameter = therapy_facility.HasValue ?
                new ObjectParameter("therapy_facility", therapy_facility) :
                new ObjectParameter("therapy_facility", typeof(bool));
    
            var therapy_rchParameter = therapy_rch != null ?
                new ObjectParameter("therapy_rch", therapy_rch) :
                new ObjectParameter("therapy_rch", typeof(string));
    
            var training_facilityParameter = training_facility.HasValue ?
                new ObjectParameter("training_facility", training_facility) :
                new ObjectParameter("training_facility", typeof(bool));
    
            var training_rchParameter = training_rch != null ?
                new ObjectParameter("training_rch", training_rch) :
                new ObjectParameter("training_rch", typeof(string));
    
            var schemesParameter = schemes != null ?
                new ObjectParameter("schemes", schemes) :
                new ObjectParameter("schemes", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var medical_rchParameter = medical_rch != null ?
                new ObjectParameter("medical_rch", medical_rch) :
                new ObjectParameter("medical_rch", typeof(string));
    
            var age_limitParameter = age_limit != null ?
                new ObjectParameter("age_limit", age_limit) :
                new ObjectParameter("age_limit", typeof(string));
    
            var other_termsParameter = other_terms != null ?
                new ObjectParameter("other_terms", other_terms) :
                new ObjectParameter("other_terms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOrganizationFacilities", org_idParameter, hostel_facilityParameter, bedsParameter, mess_facilityParameter, meal_facilityParameter, daycare_facilityParameter, medical_facilityParameter, tution_facilityParameter, tution_rchParameter, therapy_facilityParameter, therapy_rchParameter, training_facilityParameter, training_rchParameter, schemesParameter, updated_byParameter, updated_datetimeParameter, medical_rchParameter, age_limitParameter, other_termsParameter);
        }
    
        public virtual int sp_InsertOrganizationTerm(string org_id, string age, string fee, string others, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(string));
    
            var feeParameter = fee != null ?
                new ObjectParameter("fee", fee) :
                new ObjectParameter("fee", typeof(string));
    
            var othersParameter = others != null ?
                new ObjectParameter("others", others) :
                new ObjectParameter("others", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOrganizationTerm", org_idParameter, ageParameter, feeParameter, othersParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int sp_InsertOrgPersonDetail(string org_id, string person_Name, string designation, string contact_No, string email, string other_Info, string updated_by, Nullable<System.DateTime> updated_Datetime)
        {
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            var person_NameParameter = person_Name != null ?
                new ObjectParameter("Person_Name", person_Name) :
                new ObjectParameter("Person_Name", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("Contact_No", contact_No) :
                new ObjectParameter("Contact_No", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var other_InfoParameter = other_Info != null ?
                new ObjectParameter("Other_Info", other_Info) :
                new ObjectParameter("Other_Info", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(string));
    
            var updated_DatetimeParameter = updated_Datetime.HasValue ?
                new ObjectParameter("Updated_Datetime", updated_Datetime) :
                new ObjectParameter("Updated_Datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertOrgPersonDetail", org_idParameter, person_NameParameter, designationParameter, contact_NoParameter, emailParameter, other_InfoParameter, updated_byParameter, updated_DatetimeParameter);
        }
    
        public virtual int sp_Log(string user_ID, string password, string vcparentid, string isr, string vcEmail, string first_name, string last_name, string vcCategory, string vcCategoryCode, Nullable<bool> btDependent)
        {
            var user_IDParameter = user_ID != null ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var vcparentidParameter = vcparentid != null ?
                new ObjectParameter("vcparentid", vcparentid) :
                new ObjectParameter("vcparentid", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var vcCategoryParameter = vcCategory != null ?
                new ObjectParameter("vcCategory", vcCategory) :
                new ObjectParameter("vcCategory", typeof(string));
    
            var vcCategoryCodeParameter = vcCategoryCode != null ?
                new ObjectParameter("vcCategoryCode", vcCategoryCode) :
                new ObjectParameter("vcCategoryCode", typeof(string));
    
            var btDependentParameter = btDependent.HasValue ?
                new ObjectParameter("btDependent", btDependent) :
                new ObjectParameter("btDependent", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Log", user_IDParameter, passwordParameter, vcparentidParameter, isrParameter, vcEmailParameter, first_nameParameter, last_nameParameter, vcCategoryParameter, vcCategoryCodeParameter, btDependentParameter);
        }
    
        public virtual ObjectResult<sp_Login_Result> sp_Login(string user_ID, string vcparentid, string password)
        {
            var user_IDParameter = user_ID != null ?
                new ObjectParameter("User_ID", user_ID) :
                new ObjectParameter("User_ID", typeof(string));
    
            var vcparentidParameter = vcparentid != null ?
                new ObjectParameter("vcparentid", vcparentid) :
                new ObjectParameter("vcparentid", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Login_Result>("sp_Login", user_IDParameter, vcparentidParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_PartnerDetails_Result> sp_PartnerDetails(string hosId)
        {
            var hosIdParameter = hosId != null ?
                new ObjectParameter("HosId", hosId) :
                new ObjectParameter("HosId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PartnerDetails_Result>("sp_PartnerDetails", hosIdParameter);
        }
    
        public virtual ObjectResult<sp_PatientDetails_Result> sp_PatientDetails(string user_id, string isr)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var isrParameter = isr != null ?
                new ObjectParameter("Isr", isr) :
                new ObjectParameter("Isr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PatientDetails_Result>("sp_PatientDetails", user_idParameter, isrParameter);
        }
    
        public virtual ObjectResult<sp_PrintReports_Result> sp_PrintReports(string user_id)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PrintReports_Result>("sp_PrintReports", user_idParameter);
        }
    
        public virtual int sp_ProductDetail(string istr, string productName, Nullable<double> price1, Nullable<double> price2, Nullable<int> productId, string actualUrl, Nullable<int> categoryId)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var price1Parameter = price1.HasValue ?
                new ObjectParameter("Price1", price1) :
                new ObjectParameter("Price1", typeof(double));
    
            var price2Parameter = price2.HasValue ?
                new ObjectParameter("Price2", price2) :
                new ObjectParameter("Price2", typeof(double));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var actualUrlParameter = actualUrl != null ?
                new ObjectParameter("ActualUrl", actualUrl) :
                new ObjectParameter("ActualUrl", typeof(string));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProductDetail", istrParameter, productNameParameter, price1Parameter, price2Parameter, productIdParameter, actualUrlParameter, categoryIdParameter);
        }
    
        public virtual int sp_QryInsertDoctorMembershipInfo(string vcDoctor_Id, string vcDoctor_Name, Nullable<System.DateTime> vcRegDate, string vcContact_person_ph, string vcEmail, string vcCity, string vcCost, string vcOthers, Nullable<System.DateTime> vcEmailDate)
        {
            var vcDoctor_IdParameter = vcDoctor_Id != null ?
                new ObjectParameter("vcDoctor_Id", vcDoctor_Id) :
                new ObjectParameter("vcDoctor_Id", typeof(string));
    
            var vcDoctor_NameParameter = vcDoctor_Name != null ?
                new ObjectParameter("vcDoctor_Name", vcDoctor_Name) :
                new ObjectParameter("vcDoctor_Name", typeof(string));
    
            var vcRegDateParameter = vcRegDate.HasValue ?
                new ObjectParameter("vcRegDate", vcRegDate) :
                new ObjectParameter("vcRegDate", typeof(System.DateTime));
    
            var vcContact_person_phParameter = vcContact_person_ph != null ?
                new ObjectParameter("vcContact_person_ph", vcContact_person_ph) :
                new ObjectParameter("vcContact_person_ph", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var vcCityParameter = vcCity != null ?
                new ObjectParameter("vcCity", vcCity) :
                new ObjectParameter("vcCity", typeof(string));
    
            var vcCostParameter = vcCost != null ?
                new ObjectParameter("vcCost", vcCost) :
                new ObjectParameter("vcCost", typeof(string));
    
            var vcOthersParameter = vcOthers != null ?
                new ObjectParameter("vcOthers", vcOthers) :
                new ObjectParameter("vcOthers", typeof(string));
    
            var vcEmailDateParameter = vcEmailDate.HasValue ?
                new ObjectParameter("vcEmailDate", vcEmailDate) :
                new ObjectParameter("vcEmailDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_QryInsertDoctorMembershipInfo", vcDoctor_IdParameter, vcDoctor_NameParameter, vcRegDateParameter, vcContact_person_phParameter, vcEmailParameter, vcCityParameter, vcCostParameter, vcOthersParameter, vcEmailDateParameter);
        }
    
        public virtual int sp_QryInsertHospitalMembershipInfo(string vcHospital_Id, string vcHospital_Name, Nullable<System.DateTime> vcRegDate, string vcContact_person_name, string vcContact_person_ph, string vcEmail, string vcSigning_Authority, string vcCost, string vcCity, string vcOthers, Nullable<System.DateTime> vcEmailDate)
        {
            var vcHospital_IdParameter = vcHospital_Id != null ?
                new ObjectParameter("vcHospital_Id", vcHospital_Id) :
                new ObjectParameter("vcHospital_Id", typeof(string));
    
            var vcHospital_NameParameter = vcHospital_Name != null ?
                new ObjectParameter("vcHospital_Name", vcHospital_Name) :
                new ObjectParameter("vcHospital_Name", typeof(string));
    
            var vcRegDateParameter = vcRegDate.HasValue ?
                new ObjectParameter("vcRegDate", vcRegDate) :
                new ObjectParameter("vcRegDate", typeof(System.DateTime));
    
            var vcContact_person_nameParameter = vcContact_person_name != null ?
                new ObjectParameter("vcContact_person_name", vcContact_person_name) :
                new ObjectParameter("vcContact_person_name", typeof(string));
    
            var vcContact_person_phParameter = vcContact_person_ph != null ?
                new ObjectParameter("vcContact_person_ph", vcContact_person_ph) :
                new ObjectParameter("vcContact_person_ph", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var vcSigning_AuthorityParameter = vcSigning_Authority != null ?
                new ObjectParameter("vcSigning_Authority", vcSigning_Authority) :
                new ObjectParameter("vcSigning_Authority", typeof(string));
    
            var vcCostParameter = vcCost != null ?
                new ObjectParameter("vcCost", vcCost) :
                new ObjectParameter("vcCost", typeof(string));
    
            var vcCityParameter = vcCity != null ?
                new ObjectParameter("vcCity", vcCity) :
                new ObjectParameter("vcCity", typeof(string));
    
            var vcOthersParameter = vcOthers != null ?
                new ObjectParameter("vcOthers", vcOthers) :
                new ObjectParameter("vcOthers", typeof(string));
    
            var vcEmailDateParameter = vcEmailDate.HasValue ?
                new ObjectParameter("vcEmailDate", vcEmailDate) :
                new ObjectParameter("vcEmailDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_QryInsertHospitalMembershipInfo", vcHospital_IdParameter, vcHospital_NameParameter, vcRegDateParameter, vcContact_person_nameParameter, vcContact_person_phParameter, vcEmailParameter, vcSigning_AuthorityParameter, vcCostParameter, vcCityParameter, vcOthersParameter, vcEmailDateParameter);
        }
    
        public virtual int sp_QryUpdateDoctorMembershipInfo(string vcDoctor_Id, string vcDoctor_Name, Nullable<System.DateTime> vcRegDate, string vcContact_person_ph, string vcEmail, string vcCost, string vcCity, string vcOthers, Nullable<System.DateTime> vcEmailDate)
        {
            var vcDoctor_IdParameter = vcDoctor_Id != null ?
                new ObjectParameter("vcDoctor_Id", vcDoctor_Id) :
                new ObjectParameter("vcDoctor_Id", typeof(string));
    
            var vcDoctor_NameParameter = vcDoctor_Name != null ?
                new ObjectParameter("vcDoctor_Name", vcDoctor_Name) :
                new ObjectParameter("vcDoctor_Name", typeof(string));
    
            var vcRegDateParameter = vcRegDate.HasValue ?
                new ObjectParameter("vcRegDate", vcRegDate) :
                new ObjectParameter("vcRegDate", typeof(System.DateTime));
    
            var vcContact_person_phParameter = vcContact_person_ph != null ?
                new ObjectParameter("vcContact_person_ph", vcContact_person_ph) :
                new ObjectParameter("vcContact_person_ph", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var vcCostParameter = vcCost != null ?
                new ObjectParameter("vcCost", vcCost) :
                new ObjectParameter("vcCost", typeof(string));
    
            var vcCityParameter = vcCity != null ?
                new ObjectParameter("vcCity", vcCity) :
                new ObjectParameter("vcCity", typeof(string));
    
            var vcOthersParameter = vcOthers != null ?
                new ObjectParameter("vcOthers", vcOthers) :
                new ObjectParameter("vcOthers", typeof(string));
    
            var vcEmailDateParameter = vcEmailDate.HasValue ?
                new ObjectParameter("vcEmailDate", vcEmailDate) :
                new ObjectParameter("vcEmailDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_QryUpdateDoctorMembershipInfo", vcDoctor_IdParameter, vcDoctor_NameParameter, vcRegDateParameter, vcContact_person_phParameter, vcEmailParameter, vcCostParameter, vcCityParameter, vcOthersParameter, vcEmailDateParameter);
        }
    
        public virtual int sp_QryUpdateHospitalMembershipInfo(string vcHospital_Id, string vcHospital_Name, Nullable<System.DateTime> vcRegDate, string vcContact_person_name, string vcContact_person_ph, string vcEmail, string vcSigning_Authority, string vcCost, string vcCity, string vcOthers, Nullable<System.DateTime> vcEmailDate)
        {
            var vcHospital_IdParameter = vcHospital_Id != null ?
                new ObjectParameter("vcHospital_Id", vcHospital_Id) :
                new ObjectParameter("vcHospital_Id", typeof(string));
    
            var vcHospital_NameParameter = vcHospital_Name != null ?
                new ObjectParameter("vcHospital_Name", vcHospital_Name) :
                new ObjectParameter("vcHospital_Name", typeof(string));
    
            var vcRegDateParameter = vcRegDate.HasValue ?
                new ObjectParameter("vcRegDate", vcRegDate) :
                new ObjectParameter("vcRegDate", typeof(System.DateTime));
    
            var vcContact_person_nameParameter = vcContact_person_name != null ?
                new ObjectParameter("vcContact_person_name", vcContact_person_name) :
                new ObjectParameter("vcContact_person_name", typeof(string));
    
            var vcContact_person_phParameter = vcContact_person_ph != null ?
                new ObjectParameter("vcContact_person_ph", vcContact_person_ph) :
                new ObjectParameter("vcContact_person_ph", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var vcSigning_AuthorityParameter = vcSigning_Authority != null ?
                new ObjectParameter("vcSigning_Authority", vcSigning_Authority) :
                new ObjectParameter("vcSigning_Authority", typeof(string));
    
            var vcCostParameter = vcCost != null ?
                new ObjectParameter("vcCost", vcCost) :
                new ObjectParameter("vcCost", typeof(string));
    
            var vcCityParameter = vcCity != null ?
                new ObjectParameter("vcCity", vcCity) :
                new ObjectParameter("vcCity", typeof(string));
    
            var vcOthersParameter = vcOthers != null ?
                new ObjectParameter("vcOthers", vcOthers) :
                new ObjectParameter("vcOthers", typeof(string));
    
            var vcEmailDateParameter = vcEmailDate.HasValue ?
                new ObjectParameter("vcEmailDate", vcEmailDate) :
                new ObjectParameter("vcEmailDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_QryUpdateHospitalMembershipInfo", vcHospital_IdParameter, vcHospital_NameParameter, vcRegDateParameter, vcContact_person_nameParameter, vcContact_person_phParameter, vcEmailParameter, vcSigning_AuthorityParameter, vcCostParameter, vcCityParameter, vcOthersParameter, vcEmailDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_QuerySentToProvider(string vcProvId, string istr, string hosid, string queryId, string hosName, string contactName, string contactNumber, string designation, string email, Nullable<int> sentQueries)
        {
            var vcProvIdParameter = vcProvId != null ?
                new ObjectParameter("vcProvId", vcProvId) :
                new ObjectParameter("vcProvId", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var hosidParameter = hosid != null ?
                new ObjectParameter("Hosid", hosid) :
                new ObjectParameter("Hosid", typeof(string));
    
            var queryIdParameter = queryId != null ?
                new ObjectParameter("QueryId", queryId) :
                new ObjectParameter("QueryId", typeof(string));
    
            var hosNameParameter = hosName != null ?
                new ObjectParameter("HosName", hosName) :
                new ObjectParameter("HosName", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var sentQueriesParameter = sentQueries.HasValue ?
                new ObjectParameter("SentQueries", sentQueries) :
                new ObjectParameter("SentQueries", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_QuerySentToProvider", vcProvIdParameter, istrParameter, hosidParameter, queryIdParameter, hosNameParameter, contactNameParameter, contactNumberParameter, designationParameter, emailParameter, sentQueriesParameter);
        }
    
        public virtual int sp_RegisterDependent(string std_code, string phone_no, string mobile_no, string first_name, string last_name, string address, string city, Nullable<decimal> pincode, string state, string country, string occupation, string vcOtherCity, string userImage, string vcParentID, string vcEmail, string duser_id, string vcRelation)
        {
            var std_codeParameter = std_code != null ?
                new ObjectParameter("std_code", std_code) :
                new ObjectParameter("std_code", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var mobile_noParameter = mobile_no != null ?
                new ObjectParameter("mobile_no", mobile_no) :
                new ObjectParameter("mobile_no", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            var userImageParameter = userImage != null ?
                new ObjectParameter("UserImage", userImage) :
                new ObjectParameter("UserImage", typeof(string));
    
            var vcParentIDParameter = vcParentID != null ?
                new ObjectParameter("vcParentID", vcParentID) :
                new ObjectParameter("vcParentID", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var duser_idParameter = duser_id != null ?
                new ObjectParameter("duser_id", duser_id) :
                new ObjectParameter("duser_id", typeof(string));
    
            var vcRelationParameter = vcRelation != null ?
                new ObjectParameter("vcRelation", vcRelation) :
                new ObjectParameter("vcRelation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegisterDependent", std_codeParameter, phone_noParameter, mobile_noParameter, first_nameParameter, last_nameParameter, addressParameter, cityParameter, pincodeParameter, stateParameter, countryParameter, occupationParameter, vcOtherCityParameter, userImageParameter, vcParentIDParameter, vcEmailParameter, duser_idParameter, vcRelationParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_searchCommon(string table_name, string fldname, string searchcrit)
        {
            var table_nameParameter = table_name != null ?
                new ObjectParameter("table_name", table_name) :
                new ObjectParameter("table_name", typeof(string));
    
            var fldnameParameter = fldname != null ?
                new ObjectParameter("fldname", fldname) :
                new ObjectParameter("fldname", typeof(string));
    
            var searchcritParameter = searchcrit != null ?
                new ObjectParameter("searchcrit", searchcrit) :
                new ObjectParameter("searchcrit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_searchCommon", table_nameParameter, fldnameParameter, searchcritParameter);
        }
    
        public virtual int sp_SearchDoctorInHospital_dp(string first_name, string middle_name, string last_name, string address, string city, string specialization_name)
        {
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("Middle_name", middle_name) :
                new ObjectParameter("Middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SearchDoctorInHospital_dp", first_nameParameter, middle_nameParameter, last_nameParameter, addressParameter, cityParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<sp_SpecialityInCity_Result> sp_SpecialityInCity(string city)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SpecialityInCity_Result>("sp_SpecialityInCity", cityParameter);
        }
    
        public virtual int sp_UpdateBasicDeatils(string user_id, string std_code, string phone_no, string mobile_no, string first_name, string last_name, string address, string city, Nullable<int> pincode, string state, string country, string occupation, string vcOtherCity, string userImage)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            var std_codeParameter = std_code != null ?
                new ObjectParameter("std_code", std_code) :
                new ObjectParameter("std_code", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var mobile_noParameter = mobile_no != null ?
                new ObjectParameter("mobile_no", mobile_no) :
                new ObjectParameter("mobile_no", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var occupationParameter = occupation != null ?
                new ObjectParameter("occupation", occupation) :
                new ObjectParameter("occupation", typeof(string));
    
            var vcOtherCityParameter = vcOtherCity != null ?
                new ObjectParameter("vcOtherCity", vcOtherCity) :
                new ObjectParameter("vcOtherCity", typeof(string));
    
            var userImageParameter = userImage != null ?
                new ObjectParameter("UserImage", userImage) :
                new ObjectParameter("UserImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateBasicDeatils", user_idParameter, std_codeParameter, phone_noParameter, mobile_noParameter, first_nameParameter, last_nameParameter, addressParameter, cityParameter, pincodeParameter, stateParameter, countryParameter, occupationParameter, vcOtherCityParameter, userImageParameter);
        }
    
        public virtual int sp_UpdateDiseaseDetails(string diseaseName, byte[] about, byte[] discription, byte[] treatmentCenter)
        {
            var diseaseNameParameter = diseaseName != null ?
                new ObjectParameter("DiseaseName", diseaseName) :
                new ObjectParameter("DiseaseName", typeof(string));
    
            var aboutParameter = about != null ?
                new ObjectParameter("About", about) :
                new ObjectParameter("About", typeof(byte[]));
    
            var discriptionParameter = discription != null ?
                new ObjectParameter("Discription", discription) :
                new ObjectParameter("Discription", typeof(byte[]));
    
            var treatmentCenterParameter = treatmentCenter != null ?
                new ObjectParameter("TreatmentCenter", treatmentCenter) :
                new ObjectParameter("TreatmentCenter", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateDiseaseDetails", diseaseNameParameter, aboutParameter, discriptionParameter, treatmentCenterParameter);
        }
    
        public virtual int sp_UpdateHospitalDiagnostics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateHospitalDiagnostics");
        }
    
        public virtual int sp_UpdateProductDetails(Nullable<int> categoryId, Nullable<int> brandId, string productName, string productDisplayName, Nullable<double> price, string actualLink, string productLink, string imageUrl, Nullable<int> productId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDisplayNameParameter = productDisplayName != null ?
                new ObjectParameter("ProductDisplayName", productDisplayName) :
                new ObjectParameter("ProductDisplayName", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var actualLinkParameter = actualLink != null ?
                new ObjectParameter("ActualLink", actualLink) :
                new ObjectParameter("ActualLink", typeof(string));
    
            var productLinkParameter = productLink != null ?
                new ObjectParameter("ProductLink", productLink) :
                new ObjectParameter("ProductLink", typeof(string));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProductDetails", categoryIdParameter, brandIdParameter, productNameParameter, productDisplayNameParameter, priceParameter, actualLinkParameter, productLinkParameter, imageUrlParameter, productIdParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_UserDetail(string user_id)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("User_id", user_id) :
                new ObjectParameter("User_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserDetail", user_idParameter);
        }
    
        public virtual int spAddDoctorsDetail(string doc_id, string first_name, string middle_name, string last_name, Nullable<System.DateTime> date_of_birth, string address, string city, string zone, Nullable<decimal> pincode, string primary_std, Nullable<decimal> primary_phone, string secondry_std, Nullable<decimal> secondry_phone, string web_url, string email, string graduation, Nullable<decimal> year_of_graduation, string institute_name, string institute_city, string post_graduation, Nullable<decimal> year_of_pg, string institute_name_pg, string institute_city_pg, string other_qualification1, string institute_name_other1, string other_qualification2, string institute_name_other2, Nullable<int> specialization_id, string super_specialization, string registration_no, Nullable<decimal> consultation_fee, string experience1, Nullable<decimal> no_of_years1, string experience2, Nullable<decimal> no_of_years2, string experience3, Nullable<decimal> no_of_years3, string special_achievements, string memberships, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zoneParameter = zone != null ?
                new ObjectParameter("zone", zone) :
                new ObjectParameter("zone", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var primary_stdParameter = primary_std != null ?
                new ObjectParameter("primary_std", primary_std) :
                new ObjectParameter("primary_std", typeof(string));
    
            var primary_phoneParameter = primary_phone.HasValue ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(decimal));
    
            var secondry_stdParameter = secondry_std != null ?
                new ObjectParameter("secondry_std", secondry_std) :
                new ObjectParameter("secondry_std", typeof(string));
    
            var secondry_phoneParameter = secondry_phone.HasValue ?
                new ObjectParameter("secondry_phone", secondry_phone) :
                new ObjectParameter("secondry_phone", typeof(decimal));
    
            var web_urlParameter = web_url != null ?
                new ObjectParameter("web_url", web_url) :
                new ObjectParameter("web_url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var graduationParameter = graduation != null ?
                new ObjectParameter("graduation", graduation) :
                new ObjectParameter("graduation", typeof(string));
    
            var year_of_graduationParameter = year_of_graduation.HasValue ?
                new ObjectParameter("year_of_graduation", year_of_graduation) :
                new ObjectParameter("year_of_graduation", typeof(decimal));
    
            var institute_nameParameter = institute_name != null ?
                new ObjectParameter("institute_name", institute_name) :
                new ObjectParameter("institute_name", typeof(string));
    
            var institute_cityParameter = institute_city != null ?
                new ObjectParameter("institute_city", institute_city) :
                new ObjectParameter("institute_city", typeof(string));
    
            var post_graduationParameter = post_graduation != null ?
                new ObjectParameter("post_graduation", post_graduation) :
                new ObjectParameter("post_graduation", typeof(string));
    
            var year_of_pgParameter = year_of_pg.HasValue ?
                new ObjectParameter("year_of_pg", year_of_pg) :
                new ObjectParameter("year_of_pg", typeof(decimal));
    
            var institute_name_pgParameter = institute_name_pg != null ?
                new ObjectParameter("institute_name_pg", institute_name_pg) :
                new ObjectParameter("institute_name_pg", typeof(string));
    
            var institute_city_pgParameter = institute_city_pg != null ?
                new ObjectParameter("institute_city_pg", institute_city_pg) :
                new ObjectParameter("institute_city_pg", typeof(string));
    
            var other_qualification1Parameter = other_qualification1 != null ?
                new ObjectParameter("other_qualification1", other_qualification1) :
                new ObjectParameter("other_qualification1", typeof(string));
    
            var institute_name_other1Parameter = institute_name_other1 != null ?
                new ObjectParameter("institute_name_other1", institute_name_other1) :
                new ObjectParameter("institute_name_other1", typeof(string));
    
            var other_qualification2Parameter = other_qualification2 != null ?
                new ObjectParameter("other_qualification2", other_qualification2) :
                new ObjectParameter("other_qualification2", typeof(string));
    
            var institute_name_other2Parameter = institute_name_other2 != null ?
                new ObjectParameter("institute_name_other2", institute_name_other2) :
                new ObjectParameter("institute_name_other2", typeof(string));
    
            var specialization_idParameter = specialization_id.HasValue ?
                new ObjectParameter("specialization_id", specialization_id) :
                new ObjectParameter("specialization_id", typeof(int));
    
            var super_specializationParameter = super_specialization != null ?
                new ObjectParameter("super_specialization", super_specialization) :
                new ObjectParameter("super_specialization", typeof(string));
    
            var registration_noParameter = registration_no != null ?
                new ObjectParameter("registration_no", registration_no) :
                new ObjectParameter("registration_no", typeof(string));
    
            var consultation_feeParameter = consultation_fee.HasValue ?
                new ObjectParameter("consultation_fee", consultation_fee) :
                new ObjectParameter("consultation_fee", typeof(decimal));
    
            var experience1Parameter = experience1 != null ?
                new ObjectParameter("experience1", experience1) :
                new ObjectParameter("experience1", typeof(string));
    
            var no_of_years1Parameter = no_of_years1.HasValue ?
                new ObjectParameter("no_of_years1", no_of_years1) :
                new ObjectParameter("no_of_years1", typeof(decimal));
    
            var experience2Parameter = experience2 != null ?
                new ObjectParameter("experience2", experience2) :
                new ObjectParameter("experience2", typeof(string));
    
            var no_of_years2Parameter = no_of_years2.HasValue ?
                new ObjectParameter("no_of_years2", no_of_years2) :
                new ObjectParameter("no_of_years2", typeof(decimal));
    
            var experience3Parameter = experience3 != null ?
                new ObjectParameter("experience3", experience3) :
                new ObjectParameter("experience3", typeof(string));
    
            var no_of_years3Parameter = no_of_years3.HasValue ?
                new ObjectParameter("no_of_years3", no_of_years3) :
                new ObjectParameter("no_of_years3", typeof(decimal));
    
            var special_achievementsParameter = special_achievements != null ?
                new ObjectParameter("special_achievements", special_achievements) :
                new ObjectParameter("special_achievements", typeof(string));
    
            var membershipsParameter = memberships != null ?
                new ObjectParameter("memberships", memberships) :
                new ObjectParameter("memberships", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddDoctorsDetail", doc_idParameter, first_nameParameter, middle_nameParameter, last_nameParameter, date_of_birthParameter, addressParameter, cityParameter, zoneParameter, pincodeParameter, primary_stdParameter, primary_phoneParameter, secondry_stdParameter, secondry_phoneParameter, web_urlParameter, emailParameter, graduationParameter, year_of_graduationParameter, institute_nameParameter, institute_cityParameter, post_graduationParameter, year_of_pgParameter, institute_name_pgParameter, institute_city_pgParameter, other_qualification1Parameter, institute_name_other1Parameter, other_qualification2Parameter, institute_name_other2Parameter, specialization_idParameter, super_specializationParameter, registration_noParameter, consultation_feeParameter, experience1Parameter, no_of_years1Parameter, experience2Parameter, no_of_years2Parameter, experience3Parameter, no_of_years3Parameter, special_achievementsParameter, membershipsParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual ObjectResult<string> spdetail(string sname)
        {
            var snameParameter = sname != null ?
                new ObjectParameter("sname", sname) :
                new ObjectParameter("sname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spdetail", snameParameter);
        }
    
        public virtual int spDoctorsByInterventions(string interventions)
        {
            var interventionsParameter = interventions != null ?
                new ObjectParameter("Interventions", interventions) :
                new ObjectParameter("Interventions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDoctorsByInterventions", interventionsParameter);
        }
    
        public virtual int spDoctorsBySpecialization(string specialization)
        {
            var specializationParameter = specialization != null ?
                new ObjectParameter("specialization", specialization) :
                new ObjectParameter("specialization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDoctorsBySpecialization", specializationParameter);
        }
    
        public virtual ObjectResult<spFillDoctorDetail_Result> spFillDoctorDetail(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFillDoctorDetail_Result>("spFillDoctorDetail", doc_idParameter);
        }
    
        public virtual ObjectResult<spFillDoctorWorkDetail_Result> spFillDoctorWorkDetail(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFillDoctorWorkDetail_Result>("spFillDoctorWorkDetail", doc_idParameter);
        }
    
        public virtual ObjectResult<spFillHospitalDetail_Result> spFillHospitalDetail(string hos_id)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFillHospitalDetail_Result>("spFillHospitalDetail", hos_idParameter);
        }
    
        public virtual ObjectResult<string> spincity_dp(string istr, string city, string cname)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var cnameParameter = cname != null ?
                new ObjectParameter("Cname", cname) :
                new ObjectParameter("Cname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spincity_dp", istrParameter, cityParameter, cnameParameter);
        }
    
        public virtual int sproc_ShowDBConnectionCount(string dBName)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_ShowDBConnectionCount", dBNameParameter);
        }
    
        public virtual int sproc_ShowDBConnections(string dBName)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sproc_ShowDBConnections", dBNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spSave_QueryPatToComReply(string vcComName, string vcPostMsg, string vcQueryId, string vcPatientId, string vcPostType, Nullable<int> intIdToPost, string vcUserName, ObjectParameter new_identity)
        {
            var vcComNameParameter = vcComName != null ?
                new ObjectParameter("vcComName", vcComName) :
                new ObjectParameter("vcComName", typeof(string));
    
            var vcPostMsgParameter = vcPostMsg != null ?
                new ObjectParameter("vcPostMsg", vcPostMsg) :
                new ObjectParameter("vcPostMsg", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spSave_QueryPatToComReply", vcComNameParameter, vcPostMsgParameter, vcQueryIdParameter, vcPatientIdParameter, vcPostTypeParameter, intIdToPostParameter, vcUserNameParameter, new_identity);
        }
    
        public virtual int spSaveBankInfo(string ban_id, string bank_name, string bank_type, string owner_name, string address, string city, string zone, Nullable<decimal> pincode, string std1, string phone1, string std2, string phone2, string website, string email, Nullable<bool> organ_bank, Nullable<bool> blood_bank, Nullable<bool> eye_bank, Nullable<bool> organ_bone, Nullable<bool> organ_kidney, Nullable<bool> organ_heart, Nullable<bool> organ_pancreas, Nullable<bool> organ_skin, Nullable<bool> organ_liver, Nullable<bool> organ_umblical, Nullable<bool> blood_whole, Nullable<bool> blood_packed, Nullable<bool> blood_platelets, Nullable<bool> blood_plasma, Nullable<bool> blood_cryoprecipitate, Nullable<bool> blood_freshfrozenplasma, Nullable<bool> eye, Nullable<bool> application_fee, Nullable<bool> application_card, Nullable<bool> application_form, string application_others, string time_retrieval, Nullable<bool> organ_others, string organ_text, Nullable<bool> blood_factors, Nullable<bool> blood_others, string blood_factors_text, string blood_others_text, string fax, string vcUserName, string vcRoleType, Nullable<int> category_code, Nullable<int> bcount, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var bank_nameParameter = bank_name != null ?
                new ObjectParameter("bank_name", bank_name) :
                new ObjectParameter("bank_name", typeof(string));
    
            var bank_typeParameter = bank_type != null ?
                new ObjectParameter("bank_type", bank_type) :
                new ObjectParameter("bank_type", typeof(string));
    
            var owner_nameParameter = owner_name != null ?
                new ObjectParameter("owner_name", owner_name) :
                new ObjectParameter("owner_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zoneParameter = zone != null ?
                new ObjectParameter("zone", zone) :
                new ObjectParameter("zone", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var std1Parameter = std1 != null ?
                new ObjectParameter("std1", std1) :
                new ObjectParameter("std1", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var std2Parameter = std2 != null ?
                new ObjectParameter("std2", std2) :
                new ObjectParameter("std2", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var organ_bankParameter = organ_bank.HasValue ?
                new ObjectParameter("organ_bank", organ_bank) :
                new ObjectParameter("organ_bank", typeof(bool));
    
            var blood_bankParameter = blood_bank.HasValue ?
                new ObjectParameter("blood_bank", blood_bank) :
                new ObjectParameter("blood_bank", typeof(bool));
    
            var eye_bankParameter = eye_bank.HasValue ?
                new ObjectParameter("eye_bank", eye_bank) :
                new ObjectParameter("eye_bank", typeof(bool));
    
            var organ_boneParameter = organ_bone.HasValue ?
                new ObjectParameter("organ_bone", organ_bone) :
                new ObjectParameter("organ_bone", typeof(bool));
    
            var organ_kidneyParameter = organ_kidney.HasValue ?
                new ObjectParameter("organ_kidney", organ_kidney) :
                new ObjectParameter("organ_kidney", typeof(bool));
    
            var organ_heartParameter = organ_heart.HasValue ?
                new ObjectParameter("organ_heart", organ_heart) :
                new ObjectParameter("organ_heart", typeof(bool));
    
            var organ_pancreasParameter = organ_pancreas.HasValue ?
                new ObjectParameter("organ_pancreas", organ_pancreas) :
                new ObjectParameter("organ_pancreas", typeof(bool));
    
            var organ_skinParameter = organ_skin.HasValue ?
                new ObjectParameter("organ_skin", organ_skin) :
                new ObjectParameter("organ_skin", typeof(bool));
    
            var organ_liverParameter = organ_liver.HasValue ?
                new ObjectParameter("organ_liver", organ_liver) :
                new ObjectParameter("organ_liver", typeof(bool));
    
            var organ_umblicalParameter = organ_umblical.HasValue ?
                new ObjectParameter("organ_umblical", organ_umblical) :
                new ObjectParameter("organ_umblical", typeof(bool));
    
            var blood_wholeParameter = blood_whole.HasValue ?
                new ObjectParameter("blood_whole", blood_whole) :
                new ObjectParameter("blood_whole", typeof(bool));
    
            var blood_packedParameter = blood_packed.HasValue ?
                new ObjectParameter("blood_packed", blood_packed) :
                new ObjectParameter("blood_packed", typeof(bool));
    
            var blood_plateletsParameter = blood_platelets.HasValue ?
                new ObjectParameter("blood_platelets", blood_platelets) :
                new ObjectParameter("blood_platelets", typeof(bool));
    
            var blood_plasmaParameter = blood_plasma.HasValue ?
                new ObjectParameter("blood_plasma", blood_plasma) :
                new ObjectParameter("blood_plasma", typeof(bool));
    
            var blood_cryoprecipitateParameter = blood_cryoprecipitate.HasValue ?
                new ObjectParameter("blood_cryoprecipitate", blood_cryoprecipitate) :
                new ObjectParameter("blood_cryoprecipitate", typeof(bool));
    
            var blood_freshfrozenplasmaParameter = blood_freshfrozenplasma.HasValue ?
                new ObjectParameter("blood_freshfrozenplasma", blood_freshfrozenplasma) :
                new ObjectParameter("blood_freshfrozenplasma", typeof(bool));
    
            var eyeParameter = eye.HasValue ?
                new ObjectParameter("eye", eye) :
                new ObjectParameter("eye", typeof(bool));
    
            var application_feeParameter = application_fee.HasValue ?
                new ObjectParameter("application_fee", application_fee) :
                new ObjectParameter("application_fee", typeof(bool));
    
            var application_cardParameter = application_card.HasValue ?
                new ObjectParameter("application_card", application_card) :
                new ObjectParameter("application_card", typeof(bool));
    
            var application_formParameter = application_form.HasValue ?
                new ObjectParameter("application_form", application_form) :
                new ObjectParameter("application_form", typeof(bool));
    
            var application_othersParameter = application_others != null ?
                new ObjectParameter("application_others", application_others) :
                new ObjectParameter("application_others", typeof(string));
    
            var time_retrievalParameter = time_retrieval != null ?
                new ObjectParameter("time_retrieval", time_retrieval) :
                new ObjectParameter("time_retrieval", typeof(string));
    
            var organ_othersParameter = organ_others.HasValue ?
                new ObjectParameter("organ_others", organ_others) :
                new ObjectParameter("organ_others", typeof(bool));
    
            var organ_textParameter = organ_text != null ?
                new ObjectParameter("organ_text", organ_text) :
                new ObjectParameter("organ_text", typeof(string));
    
            var blood_factorsParameter = blood_factors.HasValue ?
                new ObjectParameter("blood_factors", blood_factors) :
                new ObjectParameter("blood_factors", typeof(bool));
    
            var blood_othersParameter = blood_others.HasValue ?
                new ObjectParameter("blood_others", blood_others) :
                new ObjectParameter("blood_others", typeof(bool));
    
            var blood_factors_textParameter = blood_factors_text != null ?
                new ObjectParameter("blood_factors_text", blood_factors_text) :
                new ObjectParameter("blood_factors_text", typeof(string));
    
            var blood_others_textParameter = blood_others_text != null ?
                new ObjectParameter("blood_others_text", blood_others_text) :
                new ObjectParameter("blood_others_text", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var category_codeParameter = category_code.HasValue ?
                new ObjectParameter("category_code", category_code) :
                new ObjectParameter("category_code", typeof(int));
    
            var bcountParameter = bcount.HasValue ?
                new ObjectParameter("bcount", bcount) :
                new ObjectParameter("bcount", typeof(int));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveBankInfo", ban_idParameter, bank_nameParameter, bank_typeParameter, owner_nameParameter, addressParameter, cityParameter, zoneParameter, pincodeParameter, std1Parameter, phone1Parameter, std2Parameter, phone2Parameter, websiteParameter, emailParameter, organ_bankParameter, blood_bankParameter, eye_bankParameter, organ_boneParameter, organ_kidneyParameter, organ_heartParameter, organ_pancreasParameter, organ_skinParameter, organ_liverParameter, organ_umblicalParameter, blood_wholeParameter, blood_packedParameter, blood_plateletsParameter, blood_plasmaParameter, blood_cryoprecipitateParameter, blood_freshfrozenplasmaParameter, eyeParameter, application_feeParameter, application_cardParameter, application_formParameter, application_othersParameter, time_retrievalParameter, organ_othersParameter, organ_textParameter, blood_factorsParameter, blood_othersParameter, blood_factors_textParameter, blood_others_textParameter, faxParameter, vcUserNameParameter, vcRoleTypeParameter, category_codeParameter, bcountParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveBankInfoContactdetails(string ban_id, Nullable<decimal> contact_id, string contact_person, string designation, string std_code, string phone_no, string address, string email, string city, string area, Nullable<decimal> pincode, string remarks, string updated_by, Nullable<System.DateTime> updated_DateTime)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var contact_idParameter = contact_id.HasValue ?
                new ObjectParameter("contact_id", contact_id) :
                new ObjectParameter("contact_id", typeof(decimal));
    
            var contact_personParameter = contact_person != null ?
                new ObjectParameter("contact_person", contact_person) :
                new ObjectParameter("contact_person", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var std_codeParameter = std_code != null ?
                new ObjectParameter("std_code", std_code) :
                new ObjectParameter("std_code", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(string));
    
            var updated_DateTimeParameter = updated_DateTime.HasValue ?
                new ObjectParameter("updated_DateTime", updated_DateTime) :
                new ObjectParameter("updated_DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveBankInfoContactdetails", ban_idParameter, contact_idParameter, contact_personParameter, designationParameter, std_codeParameter, phone_noParameter, addressParameter, emailParameter, cityParameter, areaParameter, pincodeParameter, remarksParameter, updated_byParameter, updated_DateTimeParameter);
        }
    
        public virtual int spSaveBankInfoTerm(string ban_id, string donor_age, string donor_others, Nullable<bool> recipient_registeration_yes, Nullable<bool> recipient_registeration_no, string registeration_text, string recipient_others, string any_other, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var donor_ageParameter = donor_age != null ?
                new ObjectParameter("donor_age", donor_age) :
                new ObjectParameter("donor_age", typeof(string));
    
            var donor_othersParameter = donor_others != null ?
                new ObjectParameter("donor_others", donor_others) :
                new ObjectParameter("donor_others", typeof(string));
    
            var recipient_registeration_yesParameter = recipient_registeration_yes.HasValue ?
                new ObjectParameter("recipient_registeration_yes", recipient_registeration_yes) :
                new ObjectParameter("recipient_registeration_yes", typeof(bool));
    
            var recipient_registeration_noParameter = recipient_registeration_no.HasValue ?
                new ObjectParameter("recipient_registeration_no", recipient_registeration_no) :
                new ObjectParameter("recipient_registeration_no", typeof(bool));
    
            var registeration_textParameter = registeration_text != null ?
                new ObjectParameter("registeration_text", registeration_text) :
                new ObjectParameter("registeration_text", typeof(string));
    
            var recipient_othersParameter = recipient_others != null ?
                new ObjectParameter("recipient_others", recipient_others) :
                new ObjectParameter("recipient_others", typeof(string));
    
            var any_otherParameter = any_other != null ?
                new ObjectParameter("any_other", any_other) :
                new ObjectParameter("any_other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveBankInfoTerm", ban_idParameter, donor_ageParameter, donor_othersParameter, recipient_registeration_yesParameter, recipient_registeration_noParameter, registeration_textParameter, recipient_othersParameter, any_otherParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveBankInfoTiming(string ban_id, string working_Type, string working_Time, string day_Name, string updated_by, Nullable<System.DateTime> updated_datetime, string others)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var working_TypeParameter = working_Type != null ?
                new ObjectParameter("Working_Type", working_Type) :
                new ObjectParameter("Working_Type", typeof(string));
    
            var working_TimeParameter = working_Time != null ?
                new ObjectParameter("Working_Time", working_Time) :
                new ObjectParameter("Working_Time", typeof(string));
    
            var day_NameParameter = day_Name != null ?
                new ObjectParameter("Day_Name", day_Name) :
                new ObjectParameter("Day_Name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var othersParameter = others != null ?
                new ObjectParameter("others", others) :
                new ObjectParameter("others", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveBankInfoTiming", ban_idParameter, working_TypeParameter, working_TimeParameter, day_NameParameter, updated_byParameter, updated_datetimeParameter, othersParameter);
        }
    
        public virtual int spSavediagnosticCentersHealthCheckUpPlan(string dia_id, Nullable<decimal> plan_id, string planname, string cost, string others)
        {
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var plan_idParameter = plan_id.HasValue ?
                new ObjectParameter("plan_id", plan_id) :
                new ObjectParameter("plan_id", typeof(decimal));
    
            var plannameParameter = planname != null ?
                new ObjectParameter("planname", planname) :
                new ObjectParameter("planname", typeof(string));
    
            var costParameter = cost != null ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(string));
    
            var othersParameter = others != null ?
                new ObjectParameter("others", others) :
                new ObjectParameter("others", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSavediagnosticCentersHealthCheckUpPlan", dia_idParameter, plan_idParameter, plannameParameter, costParameter, othersParameter);
        }
    
        public virtual int spSaveDiagnosticCentreDetail(string dia_id, string dia_name, string address, string std1, string phone1, string std2, string phone2, string city, string zone, string pincode, string fax_no, string email, string website, Nullable<bool> open_all_days, Nullable<bool> open_24_hours, Nullable<bool> emergency_testing, string emergency_service_name, string accreditation_by, string discount, string branches, string tiesup_with_specialized_lab, Nullable<bool> online_booking, string online_detail, string mobile_USG_Xray, string updated_by, Nullable<System.DateTime> updated_datetime, string closed_on, string working_hours, Nullable<bool> clinical_trails, string clinical_trails_services, string other_info, Nullable<decimal> category_code, Nullable<decimal> count_DiaId, string vcUserName, string vcRoleType)
        {
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var dia_nameParameter = dia_name != null ?
                new ObjectParameter("dia_name", dia_name) :
                new ObjectParameter("dia_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var std1Parameter = std1 != null ?
                new ObjectParameter("std1", std1) :
                new ObjectParameter("std1", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var std2Parameter = std2 != null ?
                new ObjectParameter("std2", std2) :
                new ObjectParameter("std2", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zoneParameter = zone != null ?
                new ObjectParameter("zone", zone) :
                new ObjectParameter("zone", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var fax_noParameter = fax_no != null ?
                new ObjectParameter("fax_no", fax_no) :
                new ObjectParameter("fax_no", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var open_all_daysParameter = open_all_days.HasValue ?
                new ObjectParameter("open_all_days", open_all_days) :
                new ObjectParameter("open_all_days", typeof(bool));
    
            var open_24_hoursParameter = open_24_hours.HasValue ?
                new ObjectParameter("open_24_hours", open_24_hours) :
                new ObjectParameter("open_24_hours", typeof(bool));
    
            var emergency_testingParameter = emergency_testing.HasValue ?
                new ObjectParameter("emergency_testing", emergency_testing) :
                new ObjectParameter("emergency_testing", typeof(bool));
    
            var emergency_service_nameParameter = emergency_service_name != null ?
                new ObjectParameter("emergency_service_name", emergency_service_name) :
                new ObjectParameter("emergency_service_name", typeof(string));
    
            var accreditation_byParameter = accreditation_by != null ?
                new ObjectParameter("accreditation_by", accreditation_by) :
                new ObjectParameter("accreditation_by", typeof(string));
    
            var discountParameter = discount != null ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(string));
    
            var branchesParameter = branches != null ?
                new ObjectParameter("branches", branches) :
                new ObjectParameter("branches", typeof(string));
    
            var tiesup_with_specialized_labParameter = tiesup_with_specialized_lab != null ?
                new ObjectParameter("tiesup_with_specialized_lab", tiesup_with_specialized_lab) :
                new ObjectParameter("tiesup_with_specialized_lab", typeof(string));
    
            var online_bookingParameter = online_booking.HasValue ?
                new ObjectParameter("online_booking", online_booking) :
                new ObjectParameter("online_booking", typeof(bool));
    
            var online_detailParameter = online_detail != null ?
                new ObjectParameter("online_detail", online_detail) :
                new ObjectParameter("online_detail", typeof(string));
    
            var mobile_USG_XrayParameter = mobile_USG_Xray != null ?
                new ObjectParameter("mobile_USG_Xray", mobile_USG_Xray) :
                new ObjectParameter("mobile_USG_Xray", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var closed_onParameter = closed_on != null ?
                new ObjectParameter("closed_on", closed_on) :
                new ObjectParameter("closed_on", typeof(string));
    
            var working_hoursParameter = working_hours != null ?
                new ObjectParameter("working_hours", working_hours) :
                new ObjectParameter("working_hours", typeof(string));
    
            var clinical_trailsParameter = clinical_trails.HasValue ?
                new ObjectParameter("clinical_trails", clinical_trails) :
                new ObjectParameter("clinical_trails", typeof(bool));
    
            var clinical_trails_servicesParameter = clinical_trails_services != null ?
                new ObjectParameter("clinical_trails_services", clinical_trails_services) :
                new ObjectParameter("clinical_trails_services", typeof(string));
    
            var other_infoParameter = other_info != null ?
                new ObjectParameter("other_info", other_info) :
                new ObjectParameter("other_info", typeof(string));
    
            var category_codeParameter = category_code.HasValue ?
                new ObjectParameter("category_code", category_code) :
                new ObjectParameter("category_code", typeof(decimal));
    
            var count_DiaIdParameter = count_DiaId.HasValue ?
                new ObjectParameter("Count_DiaId", count_DiaId) :
                new ObjectParameter("Count_DiaId", typeof(decimal));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveDiagnosticCentreDetail", dia_idParameter, dia_nameParameter, addressParameter, std1Parameter, phone1Parameter, std2Parameter, phone2Parameter, cityParameter, zoneParameter, pincodeParameter, fax_noParameter, emailParameter, websiteParameter, open_all_daysParameter, open_24_hoursParameter, emergency_testingParameter, emergency_service_nameParameter, accreditation_byParameter, discountParameter, branchesParameter, tiesup_with_specialized_labParameter, online_bookingParameter, online_detailParameter, mobile_USG_XrayParameter, updated_byParameter, updated_datetimeParameter, closed_onParameter, working_hoursParameter, clinical_trailsParameter, clinical_trails_servicesParameter, other_infoParameter, category_codeParameter, count_DiaIdParameter, vcUserNameParameter, vcRoleTypeParameter);
        }
    
        public virtual int spSaveDiagnosticCentreDetailContact(string dia_id, Nullable<decimal> contact_id, string contact_person, string designation, string std_code, string phone_no, string address, string email, string city, string area, Nullable<decimal> pincode, string remarks, string updated_by, Nullable<System.DateTime> updated_DateTime)
        {
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var contact_idParameter = contact_id.HasValue ?
                new ObjectParameter("contact_id", contact_id) :
                new ObjectParameter("contact_id", typeof(decimal));
    
            var contact_personParameter = contact_person != null ?
                new ObjectParameter("contact_person", contact_person) :
                new ObjectParameter("contact_person", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var std_codeParameter = std_code != null ?
                new ObjectParameter("std_code", std_code) :
                new ObjectParameter("std_code", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(string));
    
            var updated_DateTimeParameter = updated_DateTime.HasValue ?
                new ObjectParameter("updated_DateTime", updated_DateTime) :
                new ObjectParameter("updated_DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveDiagnosticCentreDetailContact", dia_idParameter, contact_idParameter, contact_personParameter, designationParameter, std_codeParameter, phone_noParameter, addressParameter, emailParameter, cityParameter, areaParameter, pincodeParameter, remarksParameter, updated_byParameter, updated_DateTimeParameter);
        }
    
        public virtual int spSaveDiagnosticCentreReportingDoctors(string dia_id, string first_name, string middle_name, string last_name, Nullable<decimal> speciality_id, string qualification, Nullable<decimal> year_of_exp, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var speciality_idParameter = speciality_id.HasValue ?
                new ObjectParameter("speciality_id", speciality_id) :
                new ObjectParameter("speciality_id", typeof(decimal));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var year_of_expParameter = year_of_exp.HasValue ?
                new ObjectParameter("year_of_exp", year_of_exp) :
                new ObjectParameter("year_of_exp", typeof(decimal));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveDiagnosticCentreReportingDoctors", dia_idParameter, first_nameParameter, middle_nameParameter, last_nameParameter, speciality_idParameter, qualificationParameter, year_of_expParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveDiagnosticCentreServices(string dia_id, string service_name, string subService_name, string rate, string updated_by, Nullable<System.DateTime> updated_datetime, string other, string test_name, string rate1)
        {
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var service_nameParameter = service_name != null ?
                new ObjectParameter("Service_name", service_name) :
                new ObjectParameter("Service_name", typeof(string));
    
            var subService_nameParameter = subService_name != null ?
                new ObjectParameter("SubService_name", subService_name) :
                new ObjectParameter("SubService_name", typeof(string));
    
            var rateParameter = rate != null ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var test_nameParameter = test_name != null ?
                new ObjectParameter("test_name", test_name) :
                new ObjectParameter("test_name", typeof(string));
    
            var rate1Parameter = rate1 != null ?
                new ObjectParameter("rate1", rate1) :
                new ObjectParameter("rate1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveDiagnosticCentreServices", dia_idParameter, service_nameParameter, subService_nameParameter, rateParameter, updated_byParameter, updated_datetimeParameter, otherParameter, test_nameParameter, rate1Parameter);
        }
    
        public virtual int spSaveDiagnosticWorkingHours(string dia_id, string working_Type, string working_Time, string day_Name, string updated_by, Nullable<System.DateTime> updated_datetime, string other)
        {
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var working_TypeParameter = working_Type != null ?
                new ObjectParameter("Working_Type", working_Type) :
                new ObjectParameter("Working_Type", typeof(string));
    
            var working_TimeParameter = working_Time != null ?
                new ObjectParameter("Working_Time", working_Time) :
                new ObjectParameter("Working_Time", typeof(string));
    
            var day_NameParameter = day_Name != null ?
                new ObjectParameter("Day_Name", day_Name) :
                new ObjectParameter("Day_Name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveDiagnosticWorkingHours", dia_idParameter, working_TypeParameter, working_TimeParameter, day_NameParameter, updated_byParameter, updated_datetimeParameter, otherParameter);
        }
    
        public virtual int spSaveHealthInsuranceTPATiesUp(string hos_id, string type, string tiesUp_With, string other_Info, string updated_By, Nullable<System.DateTime> updated_DateTime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var tiesUp_WithParameter = tiesUp_With != null ?
                new ObjectParameter("TiesUp_With", tiesUp_With) :
                new ObjectParameter("TiesUp_With", typeof(string));
    
            var other_InfoParameter = other_Info != null ?
                new ObjectParameter("Other_Info", other_Info) :
                new ObjectParameter("Other_Info", typeof(string));
    
            var updated_ByParameter = updated_By != null ?
                new ObjectParameter("Updated_By", updated_By) :
                new ObjectParameter("Updated_By", typeof(string));
    
            var updated_DateTimeParameter = updated_DateTime.HasValue ?
                new ObjectParameter("Updated_DateTime", updated_DateTime) :
                new ObjectParameter("Updated_DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHealthInsuranceTPATiesUp", hos_idParameter, typeParameter, tiesUp_WithParameter, other_InfoParameter, updated_ByParameter, updated_DateTimeParameter);
        }
    
        public virtual int spSaveHospitalConsultants(string hos_id, string first_name, string middle_name, string last_name, string specialization_name, string skill_expertize, string day_time, string city, string qualification, Nullable<int> year_of_exp, string updated_by, Nullable<System.DateTime> updated_datetime, string other_info, string vcEmail, string experience, string image, Nullable<int> isMemberShipIdRequire, Nullable<int> iscard, Nullable<bool> videocons, Nullable<bool> docdisp)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var skill_expertizeParameter = skill_expertize != null ?
                new ObjectParameter("skill_expertize", skill_expertize) :
                new ObjectParameter("skill_expertize", typeof(string));
    
            var day_timeParameter = day_time != null ?
                new ObjectParameter("day_time", day_time) :
                new ObjectParameter("day_time", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var year_of_expParameter = year_of_exp.HasValue ?
                new ObjectParameter("year_of_exp", year_of_exp) :
                new ObjectParameter("year_of_exp", typeof(int));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var other_infoParameter = other_info != null ?
                new ObjectParameter("other_info", other_info) :
                new ObjectParameter("other_info", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("Experience", experience) :
                new ObjectParameter("Experience", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var isMemberShipIdRequireParameter = isMemberShipIdRequire.HasValue ?
                new ObjectParameter("IsMemberShipIdRequire", isMemberShipIdRequire) :
                new ObjectParameter("IsMemberShipIdRequire", typeof(int));
    
            var iscardParameter = iscard.HasValue ?
                new ObjectParameter("Iscard", iscard) :
                new ObjectParameter("Iscard", typeof(int));
    
            var videoconsParameter = videocons.HasValue ?
                new ObjectParameter("videocons", videocons) :
                new ObjectParameter("videocons", typeof(bool));
    
            var docdispParameter = docdisp.HasValue ?
                new ObjectParameter("docdisp", docdisp) :
                new ObjectParameter("docdisp", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalConsultants", hos_idParameter, first_nameParameter, middle_nameParameter, last_nameParameter, specialization_nameParameter, skill_expertizeParameter, day_timeParameter, cityParameter, qualificationParameter, year_of_expParameter, updated_byParameter, updated_datetimeParameter, other_infoParameter, vcEmailParameter, experienceParameter, imageParameter, isMemberShipIdRequireParameter, iscardParameter, videoconsParameter, docdispParameter);
        }
    
        public virtual int spSaveHospitalContactPersonDetail(string hos_id, Nullable<decimal> contact_id, string person_name, string designation, string contact_no, string email, string other_info, string updated_by, Nullable<System.DateTime> updated_datetime, ObjectParameter duplicate)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var contact_idParameter = contact_id.HasValue ?
                new ObjectParameter("contact_id", contact_id) :
                new ObjectParameter("contact_id", typeof(decimal));
    
            var person_nameParameter = person_name != null ?
                new ObjectParameter("person_name", person_name) :
                new ObjectParameter("person_name", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var other_infoParameter = other_info != null ?
                new ObjectParameter("other_info", other_info) :
                new ObjectParameter("other_info", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalContactPersonDetail", hos_idParameter, contact_idParameter, person_nameParameter, designationParameter, contact_noParameter, emailParameter, other_infoParameter, updated_byParameter, updated_datetimeParameter, duplicate);
        }
    
        public virtual int spSaveHospitalDiagnostic(string hos_id, string service_name, string subService_name, string remarks, string updated_by, Nullable<System.DateTime> updated_datetime, string rate, string test_name, string rate1, string vC_OtherSub)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var service_nameParameter = service_name != null ?
                new ObjectParameter("Service_name", service_name) :
                new ObjectParameter("Service_name", typeof(string));
    
            var subService_nameParameter = subService_name != null ?
                new ObjectParameter("SubService_name", subService_name) :
                new ObjectParameter("SubService_name", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var rateParameter = rate != null ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(string));
    
            var test_nameParameter = test_name != null ?
                new ObjectParameter("test_name", test_name) :
                new ObjectParameter("test_name", typeof(string));
    
            var rate1Parameter = rate1 != null ?
                new ObjectParameter("rate1", rate1) :
                new ObjectParameter("rate1", typeof(string));
    
            var vC_OtherSubParameter = vC_OtherSub != null ?
                new ObjectParameter("VC_OtherSub", vC_OtherSub) :
                new ObjectParameter("VC_OtherSub", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalDiagnostic", hos_idParameter, service_nameParameter, subService_nameParameter, remarksParameter, updated_byParameter, updated_datetimeParameter, rateParameter, test_nameParameter, rate1Parameter, vC_OtherSubParameter);
        }
    
        public virtual int spSaveHospitalFacilities(string hos_id, Nullable<int> facility_id, string std1, string phone1, string other, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var facility_idParameter = facility_id.HasValue ?
                new ObjectParameter("facility_id", facility_id) :
                new ObjectParameter("facility_id", typeof(int));
    
            var std1Parameter = std1 != null ?
                new ObjectParameter("std1", std1) :
                new ObjectParameter("std1", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalFacilities", hos_idParameter, facility_idParameter, std1Parameter, phone1Parameter, otherParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveHospitalIndoorServices(string hos_id, string ward_type, Nullable<int> no_of_beds, string charge, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var ward_typeParameter = ward_type != null ?
                new ObjectParameter("ward_type", ward_type) :
                new ObjectParameter("ward_type", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(int));
    
            var chargeParameter = charge != null ?
                new ObjectParameter("charge", charge) :
                new ObjectParameter("charge", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalIndoorServices", hos_idParameter, ward_typeParameter, no_of_bedsParameter, chargeParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveHospitalPackageDetail(string hos_id, Nullable<int> package_id, string package_name, string package_type, string package_detail, Nullable<decimal> min_price, Nullable<decimal> max_price, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var package_idParameter = package_id.HasValue ?
                new ObjectParameter("package_id", package_id) :
                new ObjectParameter("package_id", typeof(int));
    
            var package_nameParameter = package_name != null ?
                new ObjectParameter("package_name", package_name) :
                new ObjectParameter("package_name", typeof(string));
    
            var package_typeParameter = package_type != null ?
                new ObjectParameter("package_type", package_type) :
                new ObjectParameter("package_type", typeof(string));
    
            var package_detailParameter = package_detail != null ?
                new ObjectParameter("package_detail", package_detail) :
                new ObjectParameter("package_detail", typeof(string));
    
            var min_priceParameter = min_price.HasValue ?
                new ObjectParameter("min_price", min_price) :
                new ObjectParameter("min_price", typeof(decimal));
    
            var max_priceParameter = max_price.HasValue ?
                new ObjectParameter("max_price", max_price) :
                new ObjectParameter("max_price", typeof(decimal));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalPackageDetail", hos_idParameter, package_idParameter, package_nameParameter, package_typeParameter, package_detailParameter, min_priceParameter, max_priceParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveHospitalProcedures(string hos_id, string specialization_name, string procedure_name, string other, string updated_by, Nullable<System.DateTime> updated_datetime, string price)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("Specialization_name", specialization_name) :
                new ObjectParameter("Specialization_name", typeof(string));
    
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("Procedure_name", procedure_name) :
                new ObjectParameter("Procedure_name", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalProcedures", hos_idParameter, specialization_nameParameter, procedure_nameParameter, otherParameter, updated_byParameter, updated_datetimeParameter, priceParameter);
        }
    
        public virtual int spSaveHospitalVisitingConsultants(string hos_id, string first_name, string middle_name, string last_name, string specialization_name, string skill_expertize, string coming_from, string city, string day_time, string qualification, Nullable<int> year_of_exp, string updated_by, Nullable<System.DateTime> updated_datetime, string other_info, string vcEmail)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var skill_expertizeParameter = skill_expertize != null ?
                new ObjectParameter("skill_expertize", skill_expertize) :
                new ObjectParameter("skill_expertize", typeof(string));
    
            var coming_fromParameter = coming_from != null ?
                new ObjectParameter("coming_from", coming_from) :
                new ObjectParameter("coming_from", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var day_timeParameter = day_time != null ?
                new ObjectParameter("day_time", day_time) :
                new ObjectParameter("day_time", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("qualification", qualification) :
                new ObjectParameter("qualification", typeof(string));
    
            var year_of_expParameter = year_of_exp.HasValue ?
                new ObjectParameter("year_of_exp", year_of_exp) :
                new ObjectParameter("year_of_exp", typeof(int));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var other_infoParameter = other_info != null ?
                new ObjectParameter("other_info", other_info) :
                new ObjectParameter("other_info", typeof(string));
    
            var vcEmailParameter = vcEmail != null ?
                new ObjectParameter("vcEmail", vcEmail) :
                new ObjectParameter("vcEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveHospitalVisitingConsultants", hos_idParameter, first_nameParameter, middle_nameParameter, last_nameParameter, specialization_nameParameter, skill_expertizeParameter, coming_fromParameter, cityParameter, day_timeParameter, qualificationParameter, year_of_expParameter, updated_byParameter, updated_datetimeParameter, other_infoParameter, vcEmailParameter);
        }
    
        public virtual int spSaveOPDTiming(string hos_id, string opd_name, string season, string registration_time, string consultation_time, string day_name, string location, string other, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var opd_nameParameter = opd_name != null ?
                new ObjectParameter("opd_name", opd_name) :
                new ObjectParameter("opd_name", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("season", season) :
                new ObjectParameter("season", typeof(string));
    
            var registration_timeParameter = registration_time != null ?
                new ObjectParameter("registration_time", registration_time) :
                new ObjectParameter("registration_time", typeof(string));
    
            var consultation_timeParameter = consultation_time != null ?
                new ObjectParameter("consultation_time", consultation_time) :
                new ObjectParameter("consultation_time", typeof(string));
    
            var day_nameParameter = day_name != null ?
                new ObjectParameter("day_name", day_name) :
                new ObjectParameter("day_name", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveOPDTiming", hos_idParameter, opd_nameParameter, seasonParameter, registration_timeParameter, consultation_timeParameter, day_nameParameter, locationParameter, otherParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSavePackageTypeMaster(Nullable<decimal> package_id, string package_name, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var package_idParameter = package_id.HasValue ?
                new ObjectParameter("package_id", package_id) :
                new ObjectParameter("package_id", typeof(decimal));
    
            var package_nameParameter = package_name != null ?
                new ObjectParameter("package_name", package_name) :
                new ObjectParameter("package_name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSavePackageTypeMaster", package_idParameter, package_nameParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveSpecialityClinicsCentreDetail(Nullable<int> centre_id, string hos_id, string centre_name, string address, string std1, Nullable<decimal> phone1, string std2, Nullable<decimal> phone2, string email, string web_site, string remarks, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var centre_idParameter = centre_id.HasValue ?
                new ObjectParameter("centre_id", centre_id) :
                new ObjectParameter("centre_id", typeof(int));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var centre_nameParameter = centre_name != null ?
                new ObjectParameter("centre_name", centre_name) :
                new ObjectParameter("centre_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var std1Parameter = std1 != null ?
                new ObjectParameter("std1", std1) :
                new ObjectParameter("std1", typeof(string));
    
            var phone1Parameter = phone1.HasValue ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(decimal));
    
            var std2Parameter = std2 != null ?
                new ObjectParameter("std2", std2) :
                new ObjectParameter("std2", typeof(string));
    
            var phone2Parameter = phone2.HasValue ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(decimal));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var web_siteParameter = web_site != null ?
                new ObjectParameter("web_site", web_site) :
                new ObjectParameter("web_site", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveSpecialityClinicsCentreDetail", centre_idParameter, hos_idParameter, centre_nameParameter, addressParameter, std1Parameter, phone1Parameter, std2Parameter, phone2Parameter, emailParameter, web_siteParameter, remarksParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spSaveSuperSpecilaityOPDTiming(string hos_id, string superspeciality_name, string season, string registration_time, string consultation_time, string day_name, string location, string other, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var superspeciality_nameParameter = superspeciality_name != null ?
                new ObjectParameter("superspeciality_name", superspeciality_name) :
                new ObjectParameter("superspeciality_name", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("season", season) :
                new ObjectParameter("season", typeof(string));
    
            var registration_timeParameter = registration_time != null ?
                new ObjectParameter("registration_time", registration_time) :
                new ObjectParameter("registration_time", typeof(string));
    
            var consultation_timeParameter = consultation_time != null ?
                new ObjectParameter("consultation_time", consultation_time) :
                new ObjectParameter("consultation_time", typeof(string));
    
            var day_nameParameter = day_name != null ?
                new ObjectParameter("day_name", day_name) :
                new ObjectParameter("day_name", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spSaveSuperSpecilaityOPDTiming", hos_idParameter, superspeciality_nameParameter, seasonParameter, registration_timeParameter, consultation_timeParameter, day_nameParameter, locationParameter, otherParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spUpdateBankInfo(string ban_id, string bank_name, string bank_type, string owner_name, string address, string city, string zone, Nullable<decimal> pincode, string std1, string phone1, string std2, string phone2, string website, string email, Nullable<bool> organ_bank, Nullable<bool> blood_bank, Nullable<bool> eye_bank, Nullable<bool> organ_bone, Nullable<bool> organ_kidney, Nullable<bool> organ_heart, Nullable<bool> organ_pancreas, Nullable<bool> organ_skin, Nullable<bool> organ_liver, Nullable<bool> organ_umblical, Nullable<bool> blood_whole, Nullable<bool> blood_packed, Nullable<bool> blood_platelets, Nullable<bool> blood_plasma, Nullable<bool> blood_cryoprecipitate, Nullable<bool> blood_freshfrozenplasma, Nullable<bool> eye, Nullable<bool> application_fee, Nullable<bool> application_card, Nullable<bool> application_form, string application_others, string time_retrieval, Nullable<bool> organ_others, string organ_text, Nullable<bool> blood_factors, Nullable<bool> blood_others, string blood_factors_text, string blood_others_text, string fax, string sRoletype, string updated_By, Nullable<System.DateTime> updated_datetime)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var bank_nameParameter = bank_name != null ?
                new ObjectParameter("bank_name", bank_name) :
                new ObjectParameter("bank_name", typeof(string));
    
            var bank_typeParameter = bank_type != null ?
                new ObjectParameter("bank_type", bank_type) :
                new ObjectParameter("bank_type", typeof(string));
    
            var owner_nameParameter = owner_name != null ?
                new ObjectParameter("owner_name", owner_name) :
                new ObjectParameter("owner_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zoneParameter = zone != null ?
                new ObjectParameter("zone", zone) :
                new ObjectParameter("zone", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var std1Parameter = std1 != null ?
                new ObjectParameter("std1", std1) :
                new ObjectParameter("std1", typeof(string));
    
            var phone1Parameter = phone1 != null ?
                new ObjectParameter("phone1", phone1) :
                new ObjectParameter("phone1", typeof(string));
    
            var std2Parameter = std2 != null ?
                new ObjectParameter("std2", std2) :
                new ObjectParameter("std2", typeof(string));
    
            var phone2Parameter = phone2 != null ?
                new ObjectParameter("phone2", phone2) :
                new ObjectParameter("phone2", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var organ_bankParameter = organ_bank.HasValue ?
                new ObjectParameter("organ_bank", organ_bank) :
                new ObjectParameter("organ_bank", typeof(bool));
    
            var blood_bankParameter = blood_bank.HasValue ?
                new ObjectParameter("blood_bank", blood_bank) :
                new ObjectParameter("blood_bank", typeof(bool));
    
            var eye_bankParameter = eye_bank.HasValue ?
                new ObjectParameter("eye_bank", eye_bank) :
                new ObjectParameter("eye_bank", typeof(bool));
    
            var organ_boneParameter = organ_bone.HasValue ?
                new ObjectParameter("organ_bone", organ_bone) :
                new ObjectParameter("organ_bone", typeof(bool));
    
            var organ_kidneyParameter = organ_kidney.HasValue ?
                new ObjectParameter("organ_kidney", organ_kidney) :
                new ObjectParameter("organ_kidney", typeof(bool));
    
            var organ_heartParameter = organ_heart.HasValue ?
                new ObjectParameter("organ_heart", organ_heart) :
                new ObjectParameter("organ_heart", typeof(bool));
    
            var organ_pancreasParameter = organ_pancreas.HasValue ?
                new ObjectParameter("organ_pancreas", organ_pancreas) :
                new ObjectParameter("organ_pancreas", typeof(bool));
    
            var organ_skinParameter = organ_skin.HasValue ?
                new ObjectParameter("organ_skin", organ_skin) :
                new ObjectParameter("organ_skin", typeof(bool));
    
            var organ_liverParameter = organ_liver.HasValue ?
                new ObjectParameter("organ_liver", organ_liver) :
                new ObjectParameter("organ_liver", typeof(bool));
    
            var organ_umblicalParameter = organ_umblical.HasValue ?
                new ObjectParameter("organ_umblical", organ_umblical) :
                new ObjectParameter("organ_umblical", typeof(bool));
    
            var blood_wholeParameter = blood_whole.HasValue ?
                new ObjectParameter("blood_whole", blood_whole) :
                new ObjectParameter("blood_whole", typeof(bool));
    
            var blood_packedParameter = blood_packed.HasValue ?
                new ObjectParameter("blood_packed", blood_packed) :
                new ObjectParameter("blood_packed", typeof(bool));
    
            var blood_plateletsParameter = blood_platelets.HasValue ?
                new ObjectParameter("blood_platelets", blood_platelets) :
                new ObjectParameter("blood_platelets", typeof(bool));
    
            var blood_plasmaParameter = blood_plasma.HasValue ?
                new ObjectParameter("blood_plasma", blood_plasma) :
                new ObjectParameter("blood_plasma", typeof(bool));
    
            var blood_cryoprecipitateParameter = blood_cryoprecipitate.HasValue ?
                new ObjectParameter("blood_cryoprecipitate", blood_cryoprecipitate) :
                new ObjectParameter("blood_cryoprecipitate", typeof(bool));
    
            var blood_freshfrozenplasmaParameter = blood_freshfrozenplasma.HasValue ?
                new ObjectParameter("blood_freshfrozenplasma", blood_freshfrozenplasma) :
                new ObjectParameter("blood_freshfrozenplasma", typeof(bool));
    
            var eyeParameter = eye.HasValue ?
                new ObjectParameter("eye", eye) :
                new ObjectParameter("eye", typeof(bool));
    
            var application_feeParameter = application_fee.HasValue ?
                new ObjectParameter("application_fee", application_fee) :
                new ObjectParameter("application_fee", typeof(bool));
    
            var application_cardParameter = application_card.HasValue ?
                new ObjectParameter("application_card", application_card) :
                new ObjectParameter("application_card", typeof(bool));
    
            var application_formParameter = application_form.HasValue ?
                new ObjectParameter("application_form", application_form) :
                new ObjectParameter("application_form", typeof(bool));
    
            var application_othersParameter = application_others != null ?
                new ObjectParameter("application_others", application_others) :
                new ObjectParameter("application_others", typeof(string));
    
            var time_retrievalParameter = time_retrieval != null ?
                new ObjectParameter("time_retrieval", time_retrieval) :
                new ObjectParameter("time_retrieval", typeof(string));
    
            var organ_othersParameter = organ_others.HasValue ?
                new ObjectParameter("organ_others", organ_others) :
                new ObjectParameter("organ_others", typeof(bool));
    
            var organ_textParameter = organ_text != null ?
                new ObjectParameter("organ_text", organ_text) :
                new ObjectParameter("organ_text", typeof(string));
    
            var blood_factorsParameter = blood_factors.HasValue ?
                new ObjectParameter("blood_factors", blood_factors) :
                new ObjectParameter("blood_factors", typeof(bool));
    
            var blood_othersParameter = blood_others.HasValue ?
                new ObjectParameter("blood_others", blood_others) :
                new ObjectParameter("blood_others", typeof(bool));
    
            var blood_factors_textParameter = blood_factors_text != null ?
                new ObjectParameter("blood_factors_text", blood_factors_text) :
                new ObjectParameter("blood_factors_text", typeof(string));
    
            var blood_others_textParameter = blood_others_text != null ?
                new ObjectParameter("blood_others_text", blood_others_text) :
                new ObjectParameter("blood_others_text", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("fax", fax) :
                new ObjectParameter("fax", typeof(string));
    
            var sRoletypeParameter = sRoletype != null ?
                new ObjectParameter("sRoletype", sRoletype) :
                new ObjectParameter("sRoletype", typeof(string));
    
            var updated_ByParameter = updated_By != null ?
                new ObjectParameter("updated_By", updated_By) :
                new ObjectParameter("updated_By", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateBankInfo", ban_idParameter, bank_nameParameter, bank_typeParameter, owner_nameParameter, addressParameter, cityParameter, zoneParameter, pincodeParameter, std1Parameter, phone1Parameter, std2Parameter, phone2Parameter, websiteParameter, emailParameter, organ_bankParameter, blood_bankParameter, eye_bankParameter, organ_boneParameter, organ_kidneyParameter, organ_heartParameter, organ_pancreasParameter, organ_skinParameter, organ_liverParameter, organ_umblicalParameter, blood_wholeParameter, blood_packedParameter, blood_plateletsParameter, blood_plasmaParameter, blood_cryoprecipitateParameter, blood_freshfrozenplasmaParameter, eyeParameter, application_feeParameter, application_cardParameter, application_formParameter, application_othersParameter, time_retrievalParameter, organ_othersParameter, organ_textParameter, blood_factorsParameter, blood_othersParameter, blood_factors_textParameter, blood_others_textParameter, faxParameter, sRoletypeParameter, updated_ByParameter, updated_datetimeParameter);
        }
    
        public virtual int spUpdateBankInfoContactDetail(string ban_id, Nullable<decimal> contact_id, string contact_person, string designation, string std_code, string phone_no, string address, string email, string city, string area, Nullable<decimal> pincode, string remarks, string updated_by, Nullable<System.DateTime> updated_DateTime)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var contact_idParameter = contact_id.HasValue ?
                new ObjectParameter("contact_id", contact_id) :
                new ObjectParameter("contact_id", typeof(decimal));
    
            var contact_personParameter = contact_person != null ?
                new ObjectParameter("contact_person", contact_person) :
                new ObjectParameter("contact_person", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var std_codeParameter = std_code != null ?
                new ObjectParameter("std_code", std_code) :
                new ObjectParameter("std_code", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("area", area) :
                new ObjectParameter("area", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("remarks", remarks) :
                new ObjectParameter("remarks", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("Updated_by", updated_by) :
                new ObjectParameter("Updated_by", typeof(string));
    
            var updated_DateTimeParameter = updated_DateTime.HasValue ?
                new ObjectParameter("updated_DateTime", updated_DateTime) :
                new ObjectParameter("updated_DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateBankInfoContactDetail", ban_idParameter, contact_idParameter, contact_personParameter, designationParameter, std_codeParameter, phone_noParameter, addressParameter, emailParameter, cityParameter, areaParameter, pincodeParameter, remarksParameter, updated_byParameter, updated_DateTimeParameter);
        }
    
        public virtual int spUpdateBankInfoTerm(string ban_id, string donor_age, string donor_others, Nullable<bool> recipient_registeration_yes, Nullable<bool> recipient_registeration_no, string registeration_text, string recipient_others, string any_other, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var donor_ageParameter = donor_age != null ?
                new ObjectParameter("donor_age", donor_age) :
                new ObjectParameter("donor_age", typeof(string));
    
            var donor_othersParameter = donor_others != null ?
                new ObjectParameter("donor_others", donor_others) :
                new ObjectParameter("donor_others", typeof(string));
    
            var recipient_registeration_yesParameter = recipient_registeration_yes.HasValue ?
                new ObjectParameter("recipient_registeration_yes", recipient_registeration_yes) :
                new ObjectParameter("recipient_registeration_yes", typeof(bool));
    
            var recipient_registeration_noParameter = recipient_registeration_no.HasValue ?
                new ObjectParameter("recipient_registeration_no", recipient_registeration_no) :
                new ObjectParameter("recipient_registeration_no", typeof(bool));
    
            var registeration_textParameter = registeration_text != null ?
                new ObjectParameter("registeration_text", registeration_text) :
                new ObjectParameter("registeration_text", typeof(string));
    
            var recipient_othersParameter = recipient_others != null ?
                new ObjectParameter("recipient_others", recipient_others) :
                new ObjectParameter("recipient_others", typeof(string));
    
            var any_otherParameter = any_other != null ?
                new ObjectParameter("any_other", any_other) :
                new ObjectParameter("any_other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateBankInfoTerm", ban_idParameter, donor_ageParameter, donor_othersParameter, recipient_registeration_yesParameter, recipient_registeration_noParameter, registeration_textParameter, recipient_othersParameter, any_otherParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spUpdateBankInfoTiming(string ban_id, string working_Type, string working_Time, string day_Name, string updated_by, Nullable<System.DateTime> updated_datetime, string others)
        {
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var working_TypeParameter = working_Type != null ?
                new ObjectParameter("Working_Type", working_Type) :
                new ObjectParameter("Working_Type", typeof(string));
    
            var working_TimeParameter = working_Time != null ?
                new ObjectParameter("Working_Time", working_Time) :
                new ObjectParameter("Working_Time", typeof(string));
    
            var day_NameParameter = day_Name != null ?
                new ObjectParameter("Day_Name", day_Name) :
                new ObjectParameter("Day_Name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var othersParameter = others != null ?
                new ObjectParameter("others", others) :
                new ObjectParameter("others", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateBankInfoTiming", ban_idParameter, working_TypeParameter, working_TimeParameter, day_NameParameter, updated_byParameter, updated_datetimeParameter, othersParameter);
        }
    
        public virtual int spUpdateDiagnostics(string hos_id, Nullable<int> diagnostic_id, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var diagnostic_idParameter = diagnostic_id.HasValue ?
                new ObjectParameter("diagnostic_id", diagnostic_id) :
                new ObjectParameter("diagnostic_id", typeof(int));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateDiagnostics", hos_idParameter, diagnostic_idParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spUpdateDoctorsDetail(string doc_id, string first_name, string middle_name, string last_name, Nullable<System.DateTime> date_of_birth, string address, string city, string zone, Nullable<decimal> pincode, string primary_std, Nullable<decimal> primary_phone, string secondry_std, Nullable<decimal> secondry_phone, string web_url, string email, string graduation, Nullable<decimal> year_of_graduation, string institute_name, string institute_city, string post_graduation, Nullable<decimal> year_of_pg, string institute_name_pg, string institute_city_pg, string other_qualification1, string institute_name_other1, string other_qualification2, string institute_name_other2, Nullable<int> specialization_id, string super_specialization, string registration_no, Nullable<decimal> consultation_fee, string experience1, Nullable<decimal> no_of_years1, string experience2, Nullable<decimal> no_of_years2, string experience3, Nullable<decimal> no_of_years3, string special_achievements, string memberships, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var zoneParameter = zone != null ?
                new ObjectParameter("zone", zone) :
                new ObjectParameter("zone", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var primary_stdParameter = primary_std != null ?
                new ObjectParameter("primary_std", primary_std) :
                new ObjectParameter("primary_std", typeof(string));
    
            var primary_phoneParameter = primary_phone.HasValue ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(decimal));
    
            var secondry_stdParameter = secondry_std != null ?
                new ObjectParameter("secondry_std", secondry_std) :
                new ObjectParameter("secondry_std", typeof(string));
    
            var secondry_phoneParameter = secondry_phone.HasValue ?
                new ObjectParameter("secondry_phone", secondry_phone) :
                new ObjectParameter("secondry_phone", typeof(decimal));
    
            var web_urlParameter = web_url != null ?
                new ObjectParameter("web_url", web_url) :
                new ObjectParameter("web_url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var graduationParameter = graduation != null ?
                new ObjectParameter("graduation", graduation) :
                new ObjectParameter("graduation", typeof(string));
    
            var year_of_graduationParameter = year_of_graduation.HasValue ?
                new ObjectParameter("year_of_graduation", year_of_graduation) :
                new ObjectParameter("year_of_graduation", typeof(decimal));
    
            var institute_nameParameter = institute_name != null ?
                new ObjectParameter("institute_name", institute_name) :
                new ObjectParameter("institute_name", typeof(string));
    
            var institute_cityParameter = institute_city != null ?
                new ObjectParameter("institute_city", institute_city) :
                new ObjectParameter("institute_city", typeof(string));
    
            var post_graduationParameter = post_graduation != null ?
                new ObjectParameter("post_graduation", post_graduation) :
                new ObjectParameter("post_graduation", typeof(string));
    
            var year_of_pgParameter = year_of_pg.HasValue ?
                new ObjectParameter("year_of_pg", year_of_pg) :
                new ObjectParameter("year_of_pg", typeof(decimal));
    
            var institute_name_pgParameter = institute_name_pg != null ?
                new ObjectParameter("institute_name_pg", institute_name_pg) :
                new ObjectParameter("institute_name_pg", typeof(string));
    
            var institute_city_pgParameter = institute_city_pg != null ?
                new ObjectParameter("institute_city_pg", institute_city_pg) :
                new ObjectParameter("institute_city_pg", typeof(string));
    
            var other_qualification1Parameter = other_qualification1 != null ?
                new ObjectParameter("other_qualification1", other_qualification1) :
                new ObjectParameter("other_qualification1", typeof(string));
    
            var institute_name_other1Parameter = institute_name_other1 != null ?
                new ObjectParameter("institute_name_other1", institute_name_other1) :
                new ObjectParameter("institute_name_other1", typeof(string));
    
            var other_qualification2Parameter = other_qualification2 != null ?
                new ObjectParameter("other_qualification2", other_qualification2) :
                new ObjectParameter("other_qualification2", typeof(string));
    
            var institute_name_other2Parameter = institute_name_other2 != null ?
                new ObjectParameter("institute_name_other2", institute_name_other2) :
                new ObjectParameter("institute_name_other2", typeof(string));
    
            var specialization_idParameter = specialization_id.HasValue ?
                new ObjectParameter("specialization_id", specialization_id) :
                new ObjectParameter("specialization_id", typeof(int));
    
            var super_specializationParameter = super_specialization != null ?
                new ObjectParameter("super_specialization", super_specialization) :
                new ObjectParameter("super_specialization", typeof(string));
    
            var registration_noParameter = registration_no != null ?
                new ObjectParameter("registration_no", registration_no) :
                new ObjectParameter("registration_no", typeof(string));
    
            var consultation_feeParameter = consultation_fee.HasValue ?
                new ObjectParameter("consultation_fee", consultation_fee) :
                new ObjectParameter("consultation_fee", typeof(decimal));
    
            var experience1Parameter = experience1 != null ?
                new ObjectParameter("experience1", experience1) :
                new ObjectParameter("experience1", typeof(string));
    
            var no_of_years1Parameter = no_of_years1.HasValue ?
                new ObjectParameter("no_of_years1", no_of_years1) :
                new ObjectParameter("no_of_years1", typeof(decimal));
    
            var experience2Parameter = experience2 != null ?
                new ObjectParameter("experience2", experience2) :
                new ObjectParameter("experience2", typeof(string));
    
            var no_of_years2Parameter = no_of_years2.HasValue ?
                new ObjectParameter("no_of_years2", no_of_years2) :
                new ObjectParameter("no_of_years2", typeof(decimal));
    
            var experience3Parameter = experience3 != null ?
                new ObjectParameter("experience3", experience3) :
                new ObjectParameter("experience3", typeof(string));
    
            var no_of_years3Parameter = no_of_years3.HasValue ?
                new ObjectParameter("no_of_years3", no_of_years3) :
                new ObjectParameter("no_of_years3", typeof(decimal));
    
            var special_achievementsParameter = special_achievements != null ?
                new ObjectParameter("special_achievements", special_achievements) :
                new ObjectParameter("special_achievements", typeof(string));
    
            var membershipsParameter = memberships != null ?
                new ObjectParameter("memberships", memberships) :
                new ObjectParameter("memberships", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateDoctorsDetail", doc_idParameter, first_nameParameter, middle_nameParameter, last_nameParameter, date_of_birthParameter, addressParameter, cityParameter, zoneParameter, pincodeParameter, primary_stdParameter, primary_phoneParameter, secondry_stdParameter, secondry_phoneParameter, web_urlParameter, emailParameter, graduationParameter, year_of_graduationParameter, institute_nameParameter, institute_cityParameter, post_graduationParameter, year_of_pgParameter, institute_name_pgParameter, institute_city_pgParameter, other_qualification1Parameter, institute_name_other1Parameter, other_qualification2Parameter, institute_name_other2Parameter, specialization_idParameter, super_specializationParameter, registration_noParameter, consultation_feeParameter, experience1Parameter, no_of_years1Parameter, experience2Parameter, no_of_years2Parameter, experience3Parameter, no_of_years3Parameter, special_achievementsParameter, membershipsParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int spUpdatePackageTypeMaster(Nullable<decimal> package_id, string package_name, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var package_idParameter = package_id.HasValue ?
                new ObjectParameter("package_id", package_id) :
                new ObjectParameter("package_id", typeof(decimal));
    
            var package_nameParameter = package_name != null ?
                new ObjectParameter("package_name", package_name) :
                new ObjectParameter("package_name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdatePackageTypeMaster", package_idParameter, package_nameParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual ObjectResult<string> surgerydetail_dp(string pname, string vcUserName, string cname)
        {
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var cnameParameter = cname != null ?
                new ObjectParameter("cname", cname) :
                new ObjectParameter("cname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("surgerydetail_dp", pnameParameter, vcUserNameParameter, cnameParameter);
        }
    
        public virtual ObjectResult<Tabdocdetail_dp_Result> Tabdocdetail_dp(string docid)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Tabdocdetail_dp_Result>("Tabdocdetail_dp", docidParameter);
        }
    
        public virtual ObjectResult<string> testbak(string dBName)
        {
            var dBNameParameter = dBName != null ?
                new ObjectParameter("DBName", dBName) :
                new ObjectParameter("DBName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("testbak", dBNameParameter);
        }
    
        public virtual ObjectResult<Unused2used_dp_Result> Unused2used_dp(string orderid, string email)
        {
            var orderidParameter = orderid != null ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Unused2used_dp_Result>("Unused2used_dp", orderidParameter, emailParameter);
        }
    
        public virtual int UnwantedQryEmail_dp(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnwantedQryEmail_dp", vcQueryIdParameter);
        }
    
        public virtual int updatdetailacc_dp(Nullable<int> iAccessCount, Nullable<System.DateTime> dttmAccess, string vcOrderID, string vcAccessDetailFor)
        {
            var iAccessCountParameter = iAccessCount.HasValue ?
                new ObjectParameter("iAccessCount", iAccessCount) :
                new ObjectParameter("iAccessCount", typeof(int));
    
            var dttmAccessParameter = dttmAccess.HasValue ?
                new ObjectParameter("dttmAccess", dttmAccess) :
                new ObjectParameter("dttmAccess", typeof(System.DateTime));
    
            var vcOrderIDParameter = vcOrderID != null ?
                new ObjectParameter("vcOrderID", vcOrderID) :
                new ObjectParameter("vcOrderID", typeof(string));
    
            var vcAccessDetailForParameter = vcAccessDetailFor != null ?
                new ObjectParameter("vcAccessDetailFor", vcAccessDetailFor) :
                new ObjectParameter("vcAccessDetailFor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatdetailacc_dp", iAccessCountParameter, dttmAccessParameter, vcOrderIDParameter, vcAccessDetailForParameter);
        }
    
        public virtual int updatedocskill_dp(string speciality_name, string skill_name, Nullable<int> intSkillId, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var speciality_nameParameter = speciality_name != null ?
                new ObjectParameter("speciality_name", speciality_name) :
                new ObjectParameter("speciality_name", typeof(string));
    
            var skill_nameParameter = skill_name != null ?
                new ObjectParameter("skill_name", skill_name) :
                new ObjectParameter("skill_name", typeof(string));
    
            var intSkillIdParameter = intSkillId.HasValue ?
                new ObjectParameter("intSkillId", intSkillId) :
                new ObjectParameter("intSkillId", typeof(int));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatedocskill_dp", speciality_nameParameter, skill_nameParameter, intSkillIdParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int updateemail_dp(string vcPatientEmail, string vcPatientId, string vcUserName, string disease, string vcparentid)
        {
            var vcPatientEmailParameter = vcPatientEmail != null ?
                new ObjectParameter("vcPatientEmail", vcPatientEmail) :
                new ObjectParameter("vcPatientEmail", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var diseaseParameter = disease != null ?
                new ObjectParameter("disease", disease) :
                new ObjectParameter("disease", typeof(string));
    
            var vcparentidParameter = vcparentid != null ?
                new ObjectParameter("vcparentid", vcparentid) :
                new ObjectParameter("vcparentid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateemail_dp", vcPatientEmailParameter, vcPatientIdParameter, vcUserNameParameter, diseaseParameter, vcparentidParameter);
        }
    
        public virtual int updateemail1_dp(string vcPatientEmail, string vcPatientId, string vcUserName, string disease, string vcparentid)
        {
            var vcPatientEmailParameter = vcPatientEmail != null ?
                new ObjectParameter("vcPatientEmail", vcPatientEmail) :
                new ObjectParameter("vcPatientEmail", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var diseaseParameter = disease != null ?
                new ObjectParameter("disease", disease) :
                new ObjectParameter("disease", typeof(string));
    
            var vcparentidParameter = vcparentid != null ?
                new ObjectParameter("vcparentid", vcparentid) :
                new ObjectParameter("vcparentid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateemail1_dp", vcPatientEmailParameter, vcPatientIdParameter, vcUserNameParameter, diseaseParameter, vcparentidParameter);
        }
    
        public virtual int updatehoscon(Nullable<int> hd_id, string hos_id, string city, Nullable<int> isMemberShipIdRequire, Nullable<int> iscard, Nullable<bool> videocons, string image, string fname, string mname, string lname, string spec, Nullable<bool> block, string description)
        {
            var hd_idParameter = hd_id.HasValue ?
                new ObjectParameter("hd_id", hd_id) :
                new ObjectParameter("hd_id", typeof(int));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var isMemberShipIdRequireParameter = isMemberShipIdRequire.HasValue ?
                new ObjectParameter("IsMemberShipIdRequire", isMemberShipIdRequire) :
                new ObjectParameter("IsMemberShipIdRequire", typeof(int));
    
            var iscardParameter = iscard.HasValue ?
                new ObjectParameter("Iscard", iscard) :
                new ObjectParameter("Iscard", typeof(int));
    
            var videoconsParameter = videocons.HasValue ?
                new ObjectParameter("videocons", videocons) :
                new ObjectParameter("videocons", typeof(bool));
    
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var mnameParameter = mname != null ?
                new ObjectParameter("mname", mname) :
                new ObjectParameter("mname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var specParameter = spec != null ?
                new ObjectParameter("spec", spec) :
                new ObjectParameter("spec", typeof(string));
    
            var blockParameter = block.HasValue ?
                new ObjectParameter("block", block) :
                new ObjectParameter("block", typeof(bool));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatehoscon", hd_idParameter, hos_idParameter, cityParameter, isMemberShipIdRequireParameter, iscardParameter, videoconsParameter, imageParameter, fnameParameter, mnameParameter, lnameParameter, specParameter, blockParameter, descriptionParameter);
        }
    
        public virtual int updatemydisc_dp(string istr, string vcUserName, string vcRoleType, string doc_id)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatemydisc_dp", istrParameter, vcUserNameParameter, vcRoleTypeParameter, doc_idParameter);
        }
    
        public virtual int updatemydiscambdetail_dp(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatemydiscambdetail_dp", vcQueryIdParameter);
        }
    
        public virtual int updatemydiss_dp(string istr, Nullable<int> intPostId, Nullable<System.DateTime> dtlastactivity, string vcRepType, string vcDiseaseName, string vcUserName, string vcQueryId)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var intPostIdParameter = intPostId.HasValue ?
                new ObjectParameter("intPostId", intPostId) :
                new ObjectParameter("intPostId", typeof(int));
    
            var dtlastactivityParameter = dtlastactivity.HasValue ?
                new ObjectParameter("dtlastactivity", dtlastactivity) :
                new ObjectParameter("dtlastactivity", typeof(System.DateTime));
    
            var vcRepTypeParameter = vcRepType != null ?
                new ObjectParameter("vcRepType", vcRepType) :
                new ObjectParameter("vcRepType", typeof(string));
    
            var vcDiseaseNameParameter = vcDiseaseName != null ?
                new ObjectParameter("vcDiseaseName", vcDiseaseName) :
                new ObjectParameter("vcDiseaseName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatemydiss_dp", istrParameter, intPostIdParameter, dtlastactivityParameter, vcRepTypeParameter, vcDiseaseNameParameter, vcUserNameParameter, vcQueryIdParameter);
        }
    
        public virtual int updateqry(string vcqueryid, string vcpatid, string vcusername, string vcemail)
        {
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            var vcpatidParameter = vcpatid != null ?
                new ObjectParameter("vcpatid", vcpatid) :
                new ObjectParameter("vcpatid", typeof(string));
    
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            var vcemailParameter = vcemail != null ?
                new ObjectParameter("vcemail", vcemail) :
                new ObjectParameter("vcemail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateqry", vcqueryidParameter, vcpatidParameter, vcusernameParameter, vcemailParameter);
        }
    
        public virtual int upddocclinic_dp(string doc_id, string start_time, string oldstart_time, string end_time, string oldend_time, string day_name, string oldday_name, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var start_timeParameter = start_time != null ?
                new ObjectParameter("start_time", start_time) :
                new ObjectParameter("start_time", typeof(string));
    
            var oldstart_timeParameter = oldstart_time != null ?
                new ObjectParameter("oldstart_time", oldstart_time) :
                new ObjectParameter("oldstart_time", typeof(string));
    
            var end_timeParameter = end_time != null ?
                new ObjectParameter("end_time", end_time) :
                new ObjectParameter("end_time", typeof(string));
    
            var oldend_timeParameter = oldend_time != null ?
                new ObjectParameter("oldend_time", oldend_time) :
                new ObjectParameter("oldend_time", typeof(string));
    
            var day_nameParameter = day_name != null ?
                new ObjectParameter("day_name", day_name) :
                new ObjectParameter("day_name", typeof(string));
    
            var oldday_nameParameter = oldday_name != null ?
                new ObjectParameter("oldday_name", oldday_name) :
                new ObjectParameter("oldday_name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("upddocclinic_dp", doc_idParameter, start_timeParameter, oldstart_timeParameter, end_timeParameter, oldend_timeParameter, day_nameParameter, oldday_nameParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int upddocvisit_dp(string doc_id, string hospital_name, string oldhospital_name, string newaddress, string oldaddress, string newcity, string oldcity, string newstd_code, Nullable<decimal> newphone_no, Nullable<decimal> oldphone_no, string newday_time, string oldday_time, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var oldhospital_nameParameter = oldhospital_name != null ?
                new ObjectParameter("oldhospital_name", oldhospital_name) :
                new ObjectParameter("oldhospital_name", typeof(string));
    
            var newaddressParameter = newaddress != null ?
                new ObjectParameter("Newaddress", newaddress) :
                new ObjectParameter("Newaddress", typeof(string));
    
            var oldaddressParameter = oldaddress != null ?
                new ObjectParameter("oldaddress", oldaddress) :
                new ObjectParameter("oldaddress", typeof(string));
    
            var newcityParameter = newcity != null ?
                new ObjectParameter("Newcity", newcity) :
                new ObjectParameter("Newcity", typeof(string));
    
            var oldcityParameter = oldcity != null ?
                new ObjectParameter("oldcity", oldcity) :
                new ObjectParameter("oldcity", typeof(string));
    
            var newstd_codeParameter = newstd_code != null ?
                new ObjectParameter("Newstd_code", newstd_code) :
                new ObjectParameter("Newstd_code", typeof(string));
    
            var newphone_noParameter = newphone_no.HasValue ?
                new ObjectParameter("Newphone_no", newphone_no) :
                new ObjectParameter("Newphone_no", typeof(decimal));
    
            var oldphone_noParameter = oldphone_no.HasValue ?
                new ObjectParameter("oldphone_no", oldphone_no) :
                new ObjectParameter("oldphone_no", typeof(decimal));
    
            var newday_timeParameter = newday_time != null ?
                new ObjectParameter("Newday_time", newday_time) :
                new ObjectParameter("Newday_time", typeof(string));
    
            var oldday_timeParameter = oldday_time != null ?
                new ObjectParameter("oldday_time", oldday_time) :
                new ObjectParameter("oldday_time", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("upddocvisit_dp", doc_idParameter, hospital_nameParameter, oldhospital_nameParameter, newaddressParameter, oldaddressParameter, newcityParameter, oldcityParameter, newstd_codeParameter, newphone_noParameter, oldphone_noParameter, newday_timeParameter, oldday_timeParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int updocdet_dp(string doc_id, string first_name, string middle_name, string last_name, Nullable<System.DateTime> date_of_birth, Nullable<decimal> pincode, string primary_std, string primary_phone, string secondry_std, string secondry_phone, string web_url, string email, string qualification1, string specialization_name1, Nullable<decimal> year1, string institute1, string qualification2, string specialization_name2, Nullable<decimal> year2, string institute2, string qualification3, string specialization_name3, Nullable<decimal> year3, string institute3, string qualification4, string specialization_name4, Nullable<decimal> year4, string institute4, string registration_No, Nullable<decimal> consultation_Fee, string designation, string vcothercity, string vcimage, string vcPersonImageType, string vcImageName, string vcUserName, string address, string city, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(System.DateTime));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var primary_stdParameter = primary_std != null ?
                new ObjectParameter("primary_std", primary_std) :
                new ObjectParameter("primary_std", typeof(string));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var secondry_stdParameter = secondry_std != null ?
                new ObjectParameter("secondry_std", secondry_std) :
                new ObjectParameter("secondry_std", typeof(string));
    
            var secondry_phoneParameter = secondry_phone != null ?
                new ObjectParameter("secondry_phone", secondry_phone) :
                new ObjectParameter("secondry_phone", typeof(string));
    
            var web_urlParameter = web_url != null ?
                new ObjectParameter("web_url", web_url) :
                new ObjectParameter("web_url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var qualification1Parameter = qualification1 != null ?
                new ObjectParameter("Qualification1", qualification1) :
                new ObjectParameter("Qualification1", typeof(string));
    
            var specialization_name1Parameter = specialization_name1 != null ?
                new ObjectParameter("specialization_name1", specialization_name1) :
                new ObjectParameter("specialization_name1", typeof(string));
    
            var year1Parameter = year1.HasValue ?
                new ObjectParameter("year1", year1) :
                new ObjectParameter("year1", typeof(decimal));
    
            var institute1Parameter = institute1 != null ?
                new ObjectParameter("institute1", institute1) :
                new ObjectParameter("institute1", typeof(string));
    
            var qualification2Parameter = qualification2 != null ?
                new ObjectParameter("qualification2", qualification2) :
                new ObjectParameter("qualification2", typeof(string));
    
            var specialization_name2Parameter = specialization_name2 != null ?
                new ObjectParameter("specialization_name2", specialization_name2) :
                new ObjectParameter("specialization_name2", typeof(string));
    
            var year2Parameter = year2.HasValue ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(decimal));
    
            var institute2Parameter = institute2 != null ?
                new ObjectParameter("institute2", institute2) :
                new ObjectParameter("institute2", typeof(string));
    
            var qualification3Parameter = qualification3 != null ?
                new ObjectParameter("Qualification3", qualification3) :
                new ObjectParameter("Qualification3", typeof(string));
    
            var specialization_name3Parameter = specialization_name3 != null ?
                new ObjectParameter("specialization_name3", specialization_name3) :
                new ObjectParameter("specialization_name3", typeof(string));
    
            var year3Parameter = year3.HasValue ?
                new ObjectParameter("year3", year3) :
                new ObjectParameter("year3", typeof(decimal));
    
            var institute3Parameter = institute3 != null ?
                new ObjectParameter("institute3", institute3) :
                new ObjectParameter("institute3", typeof(string));
    
            var qualification4Parameter = qualification4 != null ?
                new ObjectParameter("qualification4", qualification4) :
                new ObjectParameter("qualification4", typeof(string));
    
            var specialization_name4Parameter = specialization_name4 != null ?
                new ObjectParameter("specialization_name4", specialization_name4) :
                new ObjectParameter("specialization_name4", typeof(string));
    
            var year4Parameter = year4.HasValue ?
                new ObjectParameter("year4", year4) :
                new ObjectParameter("year4", typeof(decimal));
    
            var institute4Parameter = institute4 != null ?
                new ObjectParameter("institute4", institute4) :
                new ObjectParameter("institute4", typeof(string));
    
            var registration_NoParameter = registration_No != null ?
                new ObjectParameter("Registration_No", registration_No) :
                new ObjectParameter("Registration_No", typeof(string));
    
            var consultation_FeeParameter = consultation_Fee.HasValue ?
                new ObjectParameter("Consultation_Fee", consultation_Fee) :
                new ObjectParameter("Consultation_Fee", typeof(decimal));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var vcothercityParameter = vcothercity != null ?
                new ObjectParameter("vcothercity", vcothercity) :
                new ObjectParameter("vcothercity", typeof(string));
    
            var vcimageParameter = vcimage != null ?
                new ObjectParameter("vcimage", vcimage) :
                new ObjectParameter("vcimage", typeof(string));
    
            var vcPersonImageTypeParameter = vcPersonImageType != null ?
                new ObjectParameter("vcPersonImageType", vcPersonImageType) :
                new ObjectParameter("vcPersonImageType", typeof(string));
    
            var vcImageNameParameter = vcImageName != null ?
                new ObjectParameter("vcImageName", vcImageName) :
                new ObjectParameter("vcImageName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updocdet_dp", doc_idParameter, first_nameParameter, middle_nameParameter, last_nameParameter, date_of_birthParameter, pincodeParameter, primary_stdParameter, primary_phoneParameter, secondry_stdParameter, secondry_phoneParameter, web_urlParameter, emailParameter, qualification1Parameter, specialization_name1Parameter, year1Parameter, institute1Parameter, qualification2Parameter, specialization_name2Parameter, year2Parameter, institute2Parameter, qualification3Parameter, specialization_name3Parameter, year3Parameter, institute3Parameter, qualification4Parameter, specialization_name4Parameter, year4Parameter, institute4Parameter, registration_NoParameter, consultation_FeeParameter, designationParameter, vcothercityParameter, vcimageParameter, vcPersonImageTypeParameter, vcImageNameParameter, vcUserNameParameter, addressParameter, cityParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int uphosconsult(string doc_id, string hospital_name, string address, string city, string std_code, Nullable<decimal> phone_no, string day_time, string others, string experience1, Nullable<int> s_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var std_codeParameter = std_code != null ?
                new ObjectParameter("std_code", std_code) :
                new ObjectParameter("std_code", typeof(string));
    
            var phone_noParameter = phone_no.HasValue ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(decimal));
    
            var day_timeParameter = day_time != null ?
                new ObjectParameter("day_time", day_time) :
                new ObjectParameter("day_time", typeof(string));
    
            var othersParameter = others != null ?
                new ObjectParameter("others", others) :
                new ObjectParameter("others", typeof(string));
    
            var experience1Parameter = experience1 != null ?
                new ObjectParameter("experience1", experience1) :
                new ObjectParameter("experience1", typeof(string));
    
            var s_idParameter = s_id.HasValue ?
                new ObjectParameter("S_id", s_id) :
                new ObjectParameter("S_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uphosconsult", doc_idParameter, hospital_nameParameter, addressParameter, cityParameter, std_codeParameter, phone_noParameter, day_timeParameter, othersParameter, experience1Parameter, s_idParameter);
        }
    
        public virtual int upqrydocrply(string vcReplyId, string vcreplymsgupdate, string vcReplyMessage, Nullable<bool> btreplydisplay)
        {
            var vcReplyIdParameter = vcReplyId != null ?
                new ObjectParameter("vcReplyId", vcReplyId) :
                new ObjectParameter("vcReplyId", typeof(string));
    
            var vcreplymsgupdateParameter = vcreplymsgupdate != null ?
                new ObjectParameter("vcreplymsgupdate", vcreplymsgupdate) :
                new ObjectParameter("vcreplymsgupdate", typeof(string));
    
            var vcReplyMessageParameter = vcReplyMessage != null ?
                new ObjectParameter("vcReplyMessage", vcReplyMessage) :
                new ObjectParameter("vcReplyMessage", typeof(string));
    
            var btreplydisplayParameter = btreplydisplay.HasValue ?
                new ObjectParameter("btreplydisplay", btreplydisplay) :
                new ObjectParameter("btreplydisplay", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("upqrydocrply", vcReplyIdParameter, vcreplymsgupdateParameter, vcReplyMessageParameter, btreplydisplayParameter);
        }
    
        public virtual int Upunused2used_dp(string vcqueryid)
        {
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Upunused2used_dp", vcqueryidParameter);
        }
    
        public virtual ObjectResult<usp_Bank_Result> usp_Bank(string vcUserName, string searchCond, string hosid, string bankid, string mode)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var searchCondParameter = searchCond != null ?
                new ObjectParameter("searchCond", searchCond) :
                new ObjectParameter("searchCond", typeof(string));
    
            var hosidParameter = hosid != null ?
                new ObjectParameter("hosid", hosid) :
                new ObjectParameter("hosid", typeof(string));
    
            var bankidParameter = bankid != null ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Bank_Result>("usp_Bank", vcUserNameParameter, searchCondParameter, hosidParameter, bankidParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_bankApproval_Result> usp_bankApproval(string bankid, string username, string approval, string mode)
        {
            var bankidParameter = bankid != null ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var approvalParameter = approval != null ?
                new ObjectParameter("approval", approval) :
                new ObjectParameter("approval", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_bankApproval_Result>("usp_bankApproval", bankidParameter, usernameParameter, approvalParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_bankdeletion_Result> usp_bankdeletion(string keyword, string city, string address, string bank_name)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var bank_nameParameter = bank_name != null ?
                new ObjectParameter("bank_name", bank_name) :
                new ObjectParameter("bank_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_bankdeletion_Result>("usp_bankdeletion", keywordParameter, cityParameter, addressParameter, bank_nameParameter);
        }
    
        public virtual int usp_bankDtlforApp(string keyword, string ban_id, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var ban_idParameter = ban_id != null ?
                new ObjectParameter("ban_id", ban_id) :
                new ObjectParameter("ban_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_bankDtlforApp", keywordParameter, ban_idParameter, modeParameter);
        }
    
        public virtual int usp_bookappointment_phone(string strpatname, string strpatemail, string strpatphone, string strbookdate, string strprefdate, string strpreftime, string strdisease, string strdocdet, string age, string referdoc, Nullable<bool> appType)
        {
            var strpatnameParameter = strpatname != null ?
                new ObjectParameter("strpatname", strpatname) :
                new ObjectParameter("strpatname", typeof(string));
    
            var strpatemailParameter = strpatemail != null ?
                new ObjectParameter("strpatemail", strpatemail) :
                new ObjectParameter("strpatemail", typeof(string));
    
            var strpatphoneParameter = strpatphone != null ?
                new ObjectParameter("strpatphone", strpatphone) :
                new ObjectParameter("strpatphone", typeof(string));
    
            var strbookdateParameter = strbookdate != null ?
                new ObjectParameter("strbookdate", strbookdate) :
                new ObjectParameter("strbookdate", typeof(string));
    
            var strprefdateParameter = strprefdate != null ?
                new ObjectParameter("strprefdate", strprefdate) :
                new ObjectParameter("strprefdate", typeof(string));
    
            var strpreftimeParameter = strpreftime != null ?
                new ObjectParameter("strpreftime", strpreftime) :
                new ObjectParameter("strpreftime", typeof(string));
    
            var strdiseaseParameter = strdisease != null ?
                new ObjectParameter("strdisease", strdisease) :
                new ObjectParameter("strdisease", typeof(string));
    
            var strdocdetParameter = strdocdet != null ?
                new ObjectParameter("strdocdet", strdocdet) :
                new ObjectParameter("strdocdet", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var referdocParameter = referdoc != null ?
                new ObjectParameter("referdoc", referdoc) :
                new ObjectParameter("referdoc", typeof(string));
    
            var appTypeParameter = appType.HasValue ?
                new ObjectParameter("appType", appType) :
                new ObjectParameter("appType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_bookappointment_phone", strpatnameParameter, strpatemailParameter, strpatphoneParameter, strbookdateParameter, strprefdateParameter, strpreftimeParameter, strdiseaseParameter, strdocdetParameter, ageParameter, referdocParameter, appTypeParameter);
        }
    
        public virtual ObjectResult<usp_BookAppointmentEmail_Result> usp_BookAppointmentEmail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BookAppointmentEmail_Result>("usp_BookAppointmentEmail");
        }
    
        public virtual ObjectResult<usp_BookAppointmentEmail_followupdate_Result> usp_BookAppointmentEmail_followupdate(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string searchregion)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var searchregionParameter = searchregion != null ?
                new ObjectParameter("searchregion", searchregion) :
                new ObjectParameter("searchregion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BookAppointmentEmail_followupdate_Result>("usp_BookAppointmentEmail_followupdate", fromdateParameter, todateParameter, searchregionParameter);
        }
    
        public virtual ObjectResult<usp_BookAppointmentEmail1_Result> usp_BookAppointmentEmail1(string hosname, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var hosnameParameter = hosname != null ?
                new ObjectParameter("hosname", hosname) :
                new ObjectParameter("hosname", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BookAppointmentEmail1_Result>("usp_BookAppointmentEmail1", hosnameParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<usp_BookAppointmentEmail1_rm_Result> usp_BookAppointmentEmail1_rm(string docid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_BookAppointmentEmail1_rm_Result>("usp_BookAppointmentEmail1_rm", docidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual int usp_BookAppointmentEmail1_test(string hosname, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string vcEmailID, Nullable<System.DateTime> dttmBookOn)
        {
            var hosnameParameter = hosname != null ?
                new ObjectParameter("hosname", hosname) :
                new ObjectParameter("hosname", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var vcEmailIDParameter = vcEmailID != null ?
                new ObjectParameter("vcEmailID", vcEmailID) :
                new ObjectParameter("vcEmailID", typeof(string));
    
            var dttmBookOnParameter = dttmBookOn.HasValue ?
                new ObjectParameter("dttmBookOn", dttmBookOn) :
                new ObjectParameter("dttmBookOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_BookAppointmentEmail1_test", hosnameParameter, fromdateParameter, todateParameter, vcEmailIDParameter, dttmBookOnParameter);
        }
    
        public virtual int usp_CompHospDetail(string keyword, string hos_id, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("Hos_id", hos_id) :
                new ObjectParameter("Hos_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CompHospDetail", keywordParameter, hos_idParameter, modeParameter);
        }
    
        public virtual int usp_DaigCenterDetail(string keyword, string dia_id, string svcid, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var dia_idParameter = dia_id != null ?
                new ObjectParameter("dia_id", dia_id) :
                new ObjectParameter("dia_id", typeof(string));
    
            var svcidParameter = svcid != null ?
                new ObjectParameter("Svcid", svcid) :
                new ObjectParameter("Svcid", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DaigCenterDetail", keywordParameter, dia_idParameter, svcidParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_disease_Result> usp_disease(string disease)
        {
            var diseaseParameter = disease != null ?
                new ObjectParameter("disease", disease) :
                new ObjectParameter("disease", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_disease_Result>("usp_disease", diseaseParameter);
        }
    
        public virtual ObjectResult<usp_docinhos_Result> usp_docinhos(string cat, string city, string vcAreaName)
        {
            var catParameter = cat != null ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var vcAreaNameParameter = vcAreaName != null ?
                new ObjectParameter("vcAreaName", vcAreaName) :
                new ObjectParameter("vcAreaName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_docinhos_Result>("usp_docinhos", catParameter, cityParameter, vcAreaNameParameter);
        }
    
        public virtual ObjectResult<usp_doclist_Result> usp_doclist(string keyword, string firstname, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_doclist_Result>("usp_doclist", keywordParameter, firstnameParameter, modeParameter);
        }
    
        public virtual ObjectResult<string> usp_EXPdisease()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_EXPdisease");
        }
    
        public virtual ObjectResult<usp_EXPdisease1_Result> usp_EXPdisease1(string diseaseName)
        {
            var diseaseNameParameter = diseaseName != null ?
                new ObjectParameter("diseaseName", diseaseName) :
                new ObjectParameter("diseaseName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EXPdisease1_Result>("usp_EXPdisease1", diseaseNameParameter);
        }
    
        public virtual ObjectResult<usp_EXPdisease2_Result> usp_EXPdisease2(string dept, string getCity)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var getCityParameter = getCity != null ?
                new ObjectParameter("getCity", getCity) :
                new ObjectParameter("getCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EXPdisease2_Result>("usp_EXPdisease2", deptParameter, getCityParameter);
        }
    
        public virtual ObjectResult<usp_EXPdisease3_Result> usp_EXPdisease3(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EXPdisease3_Result>("usp_EXPdisease3", deptParameter);
        }
    
        public virtual ObjectResult<usp_EXPdisease4_Result> usp_EXPdisease4(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EXPdisease4_Result>("usp_EXPdisease4", deptParameter);
        }
    
        public virtual ObjectResult<usp_EXPdisease5_Result> usp_EXPdisease5(string dept, string city)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EXPdisease5_Result>("usp_EXPdisease5", deptParameter, cityParameter);
        }
    
        public virtual int usp_fellowpatients(string keyword, string str, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_fellowpatients", keywordParameter, strParameter, modeParameter);
        }
    
        public virtual int usp_FllHospital(string keyword, string facilityid, string city, string address, string hos_name)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var facilityidParameter = facilityid != null ?
                new ObjectParameter("facilityid", facilityid) :
                new ObjectParameter("facilityid", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var hos_nameParameter = hos_name != null ?
                new ObjectParameter("hos_name", hos_name) :
                new ObjectParameter("hos_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FllHospital", keywordParameter, facilityidParameter, cityParameter, addressParameter, hos_nameParameter);
        }
    
        public virtual int usp_fnAsgnQryToProv(string vcProviderId, string vcQueryId, Nullable<bool> btIsQueryAssign, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate)
        {
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var btIsQueryAssignParameter = btIsQueryAssign.HasValue ?
                new ObjectParameter("btIsQueryAssign", btIsQueryAssign) :
                new ObjectParameter("btIsQueryAssign", typeof(bool));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_fnAsgnQryToProv", vcProviderIdParameter, vcQueryIdParameter, btIsQueryAssignParameter, vcUpdatedByParameter, dtUpdationDateParameter);
        }
    
        public virtual int usp_fnAsgnQryToProv1(string vcProviderId, string vcQueryId, Nullable<bool> btIsQueryAssign, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcProvtype)
        {
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var btIsQueryAssignParameter = btIsQueryAssign.HasValue ?
                new ObjectParameter("btIsQueryAssign", btIsQueryAssign) :
                new ObjectParameter("btIsQueryAssign", typeof(bool));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcProvtypeParameter = vcProvtype != null ?
                new ObjectParameter("vcProvtype", vcProvtype) :
                new ObjectParameter("vcProvtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_fnAsgnQryToProv1", vcProviderIdParameter, vcQueryIdParameter, btIsQueryAssignParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcProvtypeParameter);
        }
    
        public virtual int usp_fnAssignDeptt(string vcQueryId, string vcAssignDeptt, Nullable<bool> btIsAssignDeptt)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_fnAssignDeptt", vcQueryIdParameter, vcAssignDepttParameter, btIsAssignDepttParameter);
        }
    
        public virtual ObjectResult<usp_fnFillDeptt_Result> usp_fnFillDeptt()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnFillDeptt_Result>("usp_fnFillDeptt");
        }
    
        public virtual ObjectResult<usp_fnGetAddressDocDetails_Result> usp_fnGetAddressDocDetails(string category_name, string city_name)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAddressDocDetails_Result>("usp_fnGetAddressDocDetails", category_nameParameter, city_nameParameter);
        }
    
        public virtual ObjectResult<usp_fnGetAddressDocDetails_Qry_Result> usp_fnGetAddressDocDetails_Qry(string category_name1, string category_name2, string category_name3, string city1, string city2, string city3)
        {
            var category_name1Parameter = category_name1 != null ?
                new ObjectParameter("category_name1", category_name1) :
                new ObjectParameter("category_name1", typeof(string));
    
            var category_name2Parameter = category_name2 != null ?
                new ObjectParameter("category_name2", category_name2) :
                new ObjectParameter("category_name2", typeof(string));
    
            var category_name3Parameter = category_name3 != null ?
                new ObjectParameter("category_name3", category_name3) :
                new ObjectParameter("category_name3", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("city1", city1) :
                new ObjectParameter("city1", typeof(string));
    
            var city2Parameter = city2 != null ?
                new ObjectParameter("city2", city2) :
                new ObjectParameter("city2", typeof(string));
    
            var city3Parameter = city3 != null ?
                new ObjectParameter("city3", city3) :
                new ObjectParameter("city3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAddressDocDetails_Qry_Result>("usp_fnGetAddressDocDetails_Qry", category_name1Parameter, category_name2Parameter, category_name3Parameter, city1Parameter, city2Parameter, city3Parameter);
        }
    
        public virtual ObjectResult<usp_fnGetAddressDocDetails1_Result> usp_fnGetAddressDocDetails1(string category_name, string city_name)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAddressDocDetails1_Result>("usp_fnGetAddressDocDetails1", category_nameParameter, city_nameParameter);
        }
    
        public virtual ObjectResult<usp_fnGetAddressDocWork_Result> usp_fnGetAddressDocWork(string category_name, string city_name)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAddressDocWork_Result>("usp_fnGetAddressDocWork", category_nameParameter, city_nameParameter);
        }
    
        public virtual ObjectResult<usp_fnGetAddressDocWork_Qry_Result> usp_fnGetAddressDocWork_Qry(string category_name1, string category_name2, string category_name3, string city1, string city2, string city3)
        {
            var category_name1Parameter = category_name1 != null ?
                new ObjectParameter("category_name1", category_name1) :
                new ObjectParameter("category_name1", typeof(string));
    
            var category_name2Parameter = category_name2 != null ?
                new ObjectParameter("category_name2", category_name2) :
                new ObjectParameter("category_name2", typeof(string));
    
            var category_name3Parameter = category_name3 != null ?
                new ObjectParameter("category_name3", category_name3) :
                new ObjectParameter("category_name3", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("city1", city1) :
                new ObjectParameter("city1", typeof(string));
    
            var city2Parameter = city2 != null ?
                new ObjectParameter("city2", city2) :
                new ObjectParameter("city2", typeof(string));
    
            var city3Parameter = city3 != null ?
                new ObjectParameter("city3", city3) :
                new ObjectParameter("city3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAddressDocWork_Qry_Result>("usp_fnGetAddressDocWork_Qry", category_name1Parameter, category_name2Parameter, category_name3Parameter, city1Parameter, city2Parameter, city3Parameter);
        }
    
        public virtual ObjectResult<usp_fnGetAddressDocWork1_Result> usp_fnGetAddressDocWork1(string category_name, string city_name)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAddressDocWork1_Result>("usp_fnGetAddressDocWork1", category_nameParameter, city_nameParameter);
        }
    
        public virtual ObjectResult<usp_fnGetAreaConsultant_Result> usp_fnGetAreaConsultant(string category_name, string city_name)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAreaConsultant_Result>("usp_fnGetAreaConsultant", category_nameParameter, city_nameParameter);
        }
    
        public virtual ObjectResult<usp_fnGetAreaConsultant_Qry_Result> usp_fnGetAreaConsultant_Qry(string category_name1, string category_name2, string category_name3, string city1, string city2, string city3)
        {
            var category_name1Parameter = category_name1 != null ?
                new ObjectParameter("category_name1", category_name1) :
                new ObjectParameter("category_name1", typeof(string));
    
            var category_name2Parameter = category_name2 != null ?
                new ObjectParameter("category_name2", category_name2) :
                new ObjectParameter("category_name2", typeof(string));
    
            var category_name3Parameter = category_name3 != null ?
                new ObjectParameter("category_name3", category_name3) :
                new ObjectParameter("category_name3", typeof(string));
    
            var city1Parameter = city1 != null ?
                new ObjectParameter("city1", city1) :
                new ObjectParameter("city1", typeof(string));
    
            var city2Parameter = city2 != null ?
                new ObjectParameter("city2", city2) :
                new ObjectParameter("city2", typeof(string));
    
            var city3Parameter = city3 != null ?
                new ObjectParameter("city3", city3) :
                new ObjectParameter("city3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAreaConsultant_Qry_Result>("usp_fnGetAreaConsultant_Qry", category_name1Parameter, category_name2Parameter, category_name3Parameter, city1Parameter, city2Parameter, city3Parameter);
        }
    
        public virtual ObjectResult<usp_fnGetAreaConsultant1_Result> usp_fnGetAreaConsultant1(string category_name, string city_name, string clinic_area)
        {
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var city_nameParameter = city_name != null ?
                new ObjectParameter("city_name", city_name) :
                new ObjectParameter("city_name", typeof(string));
    
            var clinic_areaParameter = clinic_area != null ?
                new ObjectParameter("clinic_area", clinic_area) :
                new ObjectParameter("clinic_area", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetAreaConsultant1_Result>("usp_fnGetAreaConsultant1", category_nameParameter, city_nameParameter, clinic_areaParameter);
        }
    
        public virtual ObjectResult<usp_fnGetDiagnostics_Result> usp_fnGetDiagnostics(string vcNukeCity1, string vcNukeCity2, string vcNukeCity3)
        {
            var vcNukeCity1Parameter = vcNukeCity1 != null ?
                new ObjectParameter("vcNukeCity1", vcNukeCity1) :
                new ObjectParameter("vcNukeCity1", typeof(string));
    
            var vcNukeCity2Parameter = vcNukeCity2 != null ?
                new ObjectParameter("vcNukeCity2", vcNukeCity2) :
                new ObjectParameter("vcNukeCity2", typeof(string));
    
            var vcNukeCity3Parameter = vcNukeCity3 != null ?
                new ObjectParameter("vcNukeCity3", vcNukeCity3) :
                new ObjectParameter("vcNukeCity3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetDiagnostics_Result>("usp_fnGetDiagnostics", vcNukeCity1Parameter, vcNukeCity2Parameter, vcNukeCity3Parameter);
        }
    
        public virtual ObjectResult<usp_fnGetDoctorDetailForEmail_Result> usp_fnGetDoctorDetailForEmail(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetDoctorDetailForEmail_Result>("usp_fnGetDoctorDetailForEmail", doc_idParameter);
        }
    
        public virtual ObjectResult<usp_fnGetDoctors_Result> usp_fnGetDoctors(string vcNukeCity1, string vcNukeCity2, string vcNukeCity3, string category_name1, string category_name2, string category_name3)
        {
            var vcNukeCity1Parameter = vcNukeCity1 != null ?
                new ObjectParameter("vcNukeCity1", vcNukeCity1) :
                new ObjectParameter("vcNukeCity1", typeof(string));
    
            var vcNukeCity2Parameter = vcNukeCity2 != null ?
                new ObjectParameter("vcNukeCity2", vcNukeCity2) :
                new ObjectParameter("vcNukeCity2", typeof(string));
    
            var vcNukeCity3Parameter = vcNukeCity3 != null ?
                new ObjectParameter("vcNukeCity3", vcNukeCity3) :
                new ObjectParameter("vcNukeCity3", typeof(string));
    
            var category_name1Parameter = category_name1 != null ?
                new ObjectParameter("category_name1", category_name1) :
                new ObjectParameter("category_name1", typeof(string));
    
            var category_name2Parameter = category_name2 != null ?
                new ObjectParameter("category_name2", category_name2) :
                new ObjectParameter("category_name2", typeof(string));
    
            var category_name3Parameter = category_name3 != null ?
                new ObjectParameter("category_name3", category_name3) :
                new ObjectParameter("category_name3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetDoctors_Result>("usp_fnGetDoctors", vcNukeCity1Parameter, vcNukeCity2Parameter, vcNukeCity3Parameter, category_name1Parameter, category_name2Parameter, category_name3Parameter);
        }
    
        public virtual ObjectResult<usp_fnGetHelp_Result> usp_fnGetHelp(string vcNukeCity1, string vcNukeCity2, string vcNukeCity3)
        {
            var vcNukeCity1Parameter = vcNukeCity1 != null ?
                new ObjectParameter("vcNukeCity1", vcNukeCity1) :
                new ObjectParameter("vcNukeCity1", typeof(string));
    
            var vcNukeCity2Parameter = vcNukeCity2 != null ?
                new ObjectParameter("vcNukeCity2", vcNukeCity2) :
                new ObjectParameter("vcNukeCity2", typeof(string));
    
            var vcNukeCity3Parameter = vcNukeCity3 != null ?
                new ObjectParameter("vcNukeCity3", vcNukeCity3) :
                new ObjectParameter("vcNukeCity3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetHelp_Result>("usp_fnGetHelp", vcNukeCity1Parameter, vcNukeCity2Parameter, vcNukeCity3Parameter);
        }
    
        public virtual ObjectResult<usp_fnGetPatientDetails_Result> usp_fnGetPatientDetails(string vcPatientId, string vcQueryId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetPatientDetails_Result>("usp_fnGetPatientDetails", vcPatientIdParameter, vcQueryIdParameter);
        }
    
        public virtual ObjectResult<usp_fnGetQuery1_Result> usp_fnGetQuery1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetQuery1_Result>("usp_fnGetQuery1");
        }
    
        public virtual ObjectResult<usp_fnGetQueryDetailsforDoc_Result> usp_fnGetQueryDetailsforDoc(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetQueryDetailsforDoc_Result>("usp_fnGetQueryDetailsforDoc", vcQueryIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_fnGetQueryId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_fnGetQueryId");
        }
    
        public virtual ObjectResult<usp_fnGetQuerySubForMail_Result> usp_fnGetQuerySubForMail(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetQuerySubForMail_Result>("usp_fnGetQuerySubForMail", vcQueryIdParameter);
        }
    
        public virtual ObjectResult<usp_fnGetServices_Result> usp_fnGetServices(string vcNukeCity1, string vcNukeCity2, string vcNukeCity3)
        {
            var vcNukeCity1Parameter = vcNukeCity1 != null ?
                new ObjectParameter("vcNukeCity1", vcNukeCity1) :
                new ObjectParameter("vcNukeCity1", typeof(string));
    
            var vcNukeCity2Parameter = vcNukeCity2 != null ?
                new ObjectParameter("vcNukeCity2", vcNukeCity2) :
                new ObjectParameter("vcNukeCity2", typeof(string));
    
            var vcNukeCity3Parameter = vcNukeCity3 != null ?
                new ObjectParameter("vcNukeCity3", vcNukeCity3) :
                new ObjectParameter("vcNukeCity3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fnGetServices_Result>("usp_fnGetServices", vcNukeCity1Parameter, vcNukeCity2Parameter, vcNukeCity3Parameter);
        }
    
        public virtual int usp_fnUpdatePatientInfo(string vcPatientName, string vcPatientGender, string vcPatientAge, Nullable<bool> btIsWeek, Nullable<bool> btIsMonth, Nullable<bool> btIsMore, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcPatientId)
        {
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var vcPatientGenderParameter = vcPatientGender != null ?
                new ObjectParameter("vcPatientGender", vcPatientGender) :
                new ObjectParameter("vcPatientGender", typeof(string));
    
            var vcPatientAgeParameter = vcPatientAge != null ?
                new ObjectParameter("vcPatientAge", vcPatientAge) :
                new ObjectParameter("vcPatientAge", typeof(string));
    
            var btIsWeekParameter = btIsWeek.HasValue ?
                new ObjectParameter("btIsWeek", btIsWeek) :
                new ObjectParameter("btIsWeek", typeof(bool));
    
            var btIsMonthParameter = btIsMonth.HasValue ?
                new ObjectParameter("btIsMonth", btIsMonth) :
                new ObjectParameter("btIsMonth", typeof(bool));
    
            var btIsMoreParameter = btIsMore.HasValue ?
                new ObjectParameter("btIsMore", btIsMore) :
                new ObjectParameter("btIsMore", typeof(bool));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_fnUpdatePatientInfo", vcPatientNameParameter, vcPatientGenderParameter, vcPatientAgeParameter, btIsWeekParameter, btIsMonthParameter, btIsMoreParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcPatientIdParameter);
        }
    
        public virtual int usp_fnUpdateQuery(string vcDiseaseName, string vcSubject, string vcQuery, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, Nullable<bool> btIsPackage, string vcPackageName, Nullable<bool> btIsDiagnostic, string vcDiagnosticName, Nullable<bool> btIsAppiontment, Nullable<bool> btIsOther, string vcOtherType, string vcOtherDisease, string vcOtherPackages, string vcDuration, string vcOtherDiagnostics, string vcOtherServices, string vcPointId, string vcDocAppointment, string vcPreDisease, string vcPatientId, string vcQueryId, string keywords, Nullable<int> btqrydisp, string region, Nullable<bool> chk, string status)
        {
            var vcDiseaseNameParameter = vcDiseaseName != null ?
                new ObjectParameter("vcDiseaseName", vcDiseaseName) :
                new ObjectParameter("vcDiseaseName", typeof(string));
    
            var vcSubjectParameter = vcSubject != null ?
                new ObjectParameter("vcSubject", vcSubject) :
                new ObjectParameter("vcSubject", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var btIsPackageParameter = btIsPackage.HasValue ?
                new ObjectParameter("btIsPackage", btIsPackage) :
                new ObjectParameter("btIsPackage", typeof(bool));
    
            var vcPackageNameParameter = vcPackageName != null ?
                new ObjectParameter("vcPackageName", vcPackageName) :
                new ObjectParameter("vcPackageName", typeof(string));
    
            var btIsDiagnosticParameter = btIsDiagnostic.HasValue ?
                new ObjectParameter("btIsDiagnostic", btIsDiagnostic) :
                new ObjectParameter("btIsDiagnostic", typeof(bool));
    
            var vcDiagnosticNameParameter = vcDiagnosticName != null ?
                new ObjectParameter("vcDiagnosticName", vcDiagnosticName) :
                new ObjectParameter("vcDiagnosticName", typeof(string));
    
            var btIsAppiontmentParameter = btIsAppiontment.HasValue ?
                new ObjectParameter("btIsAppiontment", btIsAppiontment) :
                new ObjectParameter("btIsAppiontment", typeof(bool));
    
            var btIsOtherParameter = btIsOther.HasValue ?
                new ObjectParameter("btIsOther", btIsOther) :
                new ObjectParameter("btIsOther", typeof(bool));
    
            var vcOtherTypeParameter = vcOtherType != null ?
                new ObjectParameter("vcOtherType", vcOtherType) :
                new ObjectParameter("vcOtherType", typeof(string));
    
            var vcOtherDiseaseParameter = vcOtherDisease != null ?
                new ObjectParameter("vcOtherDisease", vcOtherDisease) :
                new ObjectParameter("vcOtherDisease", typeof(string));
    
            var vcOtherPackagesParameter = vcOtherPackages != null ?
                new ObjectParameter("vcOtherPackages", vcOtherPackages) :
                new ObjectParameter("vcOtherPackages", typeof(string));
    
            var vcDurationParameter = vcDuration != null ?
                new ObjectParameter("vcDuration", vcDuration) :
                new ObjectParameter("vcDuration", typeof(string));
    
            var vcOtherDiagnosticsParameter = vcOtherDiagnostics != null ?
                new ObjectParameter("vcOtherDiagnostics", vcOtherDiagnostics) :
                new ObjectParameter("vcOtherDiagnostics", typeof(string));
    
            var vcOtherServicesParameter = vcOtherServices != null ?
                new ObjectParameter("vcOtherServices", vcOtherServices) :
                new ObjectParameter("vcOtherServices", typeof(string));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            var vcDocAppointmentParameter = vcDocAppointment != null ?
                new ObjectParameter("vcDocAppointment", vcDocAppointment) :
                new ObjectParameter("vcDocAppointment", typeof(string));
    
            var vcPreDiseaseParameter = vcPreDisease != null ?
                new ObjectParameter("vcPreDisease", vcPreDisease) :
                new ObjectParameter("vcPreDisease", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("keywords", keywords) :
                new ObjectParameter("keywords", typeof(string));
    
            var btqrydispParameter = btqrydisp.HasValue ?
                new ObjectParameter("btqrydisp", btqrydisp) :
                new ObjectParameter("btqrydisp", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var chkParameter = chk.HasValue ?
                new ObjectParameter("chk", chk) :
                new ObjectParameter("chk", typeof(bool));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_fnUpdateQuery", vcDiseaseNameParameter, vcSubjectParameter, vcQueryParameter, vcUpdatedByParameter, dtUpdationDateParameter, btIsPackageParameter, vcPackageNameParameter, btIsDiagnosticParameter, vcDiagnosticNameParameter, btIsAppiontmentParameter, btIsOtherParameter, vcOtherTypeParameter, vcOtherDiseaseParameter, vcOtherPackagesParameter, vcDurationParameter, vcOtherDiagnosticsParameter, vcOtherServicesParameter, vcPointIdParameter, vcDocAppointmentParameter, vcPreDiseaseParameter, vcPatientIdParameter, vcQueryIdParameter, keywordsParameter, btqrydispParameter, regionParameter, chkParameter, statusParameter);
        }
    
        public virtual int usp_fnUpdateQueryAndDeptt(string vcDiseaseName, string vcSubject, string vcQuery, string vcUpdatedBy, Nullable<bool> btIsPackage, string vcPackageName, Nullable<bool> btIsDiagnostic, string vcDiagnosticName, Nullable<bool> btIsAppiontment, Nullable<bool> btIsOther, string vcOtherType, string vcOtherDisease, string vcOtherPackages, string vcDuration, string vcOtherDiagnostics, string vcOtherServices, string vcPointId, string vcDocAppointment, string vcPreDisease, Nullable<bool> btIsAssignDeptt, string vcAssignDeptt, string vcPatientId, string vcQueryId)
        {
            var vcDiseaseNameParameter = vcDiseaseName != null ?
                new ObjectParameter("vcDiseaseName", vcDiseaseName) :
                new ObjectParameter("vcDiseaseName", typeof(string));
    
            var vcSubjectParameter = vcSubject != null ?
                new ObjectParameter("vcSubject", vcSubject) :
                new ObjectParameter("vcSubject", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var btIsPackageParameter = btIsPackage.HasValue ?
                new ObjectParameter("btIsPackage", btIsPackage) :
                new ObjectParameter("btIsPackage", typeof(bool));
    
            var vcPackageNameParameter = vcPackageName != null ?
                new ObjectParameter("vcPackageName", vcPackageName) :
                new ObjectParameter("vcPackageName", typeof(string));
    
            var btIsDiagnosticParameter = btIsDiagnostic.HasValue ?
                new ObjectParameter("btIsDiagnostic", btIsDiagnostic) :
                new ObjectParameter("btIsDiagnostic", typeof(bool));
    
            var vcDiagnosticNameParameter = vcDiagnosticName != null ?
                new ObjectParameter("vcDiagnosticName", vcDiagnosticName) :
                new ObjectParameter("vcDiagnosticName", typeof(string));
    
            var btIsAppiontmentParameter = btIsAppiontment.HasValue ?
                new ObjectParameter("btIsAppiontment", btIsAppiontment) :
                new ObjectParameter("btIsAppiontment", typeof(bool));
    
            var btIsOtherParameter = btIsOther.HasValue ?
                new ObjectParameter("btIsOther", btIsOther) :
                new ObjectParameter("btIsOther", typeof(bool));
    
            var vcOtherTypeParameter = vcOtherType != null ?
                new ObjectParameter("vcOtherType", vcOtherType) :
                new ObjectParameter("vcOtherType", typeof(string));
    
            var vcOtherDiseaseParameter = vcOtherDisease != null ?
                new ObjectParameter("vcOtherDisease", vcOtherDisease) :
                new ObjectParameter("vcOtherDisease", typeof(string));
    
            var vcOtherPackagesParameter = vcOtherPackages != null ?
                new ObjectParameter("vcOtherPackages", vcOtherPackages) :
                new ObjectParameter("vcOtherPackages", typeof(string));
    
            var vcDurationParameter = vcDuration != null ?
                new ObjectParameter("vcDuration", vcDuration) :
                new ObjectParameter("vcDuration", typeof(string));
    
            var vcOtherDiagnosticsParameter = vcOtherDiagnostics != null ?
                new ObjectParameter("vcOtherDiagnostics", vcOtherDiagnostics) :
                new ObjectParameter("vcOtherDiagnostics", typeof(string));
    
            var vcOtherServicesParameter = vcOtherServices != null ?
                new ObjectParameter("vcOtherServices", vcOtherServices) :
                new ObjectParameter("vcOtherServices", typeof(string));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            var vcDocAppointmentParameter = vcDocAppointment != null ?
                new ObjectParameter("vcDocAppointment", vcDocAppointment) :
                new ObjectParameter("vcDocAppointment", typeof(string));
    
            var vcPreDiseaseParameter = vcPreDisease != null ?
                new ObjectParameter("vcPreDisease", vcPreDisease) :
                new ObjectParameter("vcPreDisease", typeof(string));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_fnUpdateQueryAndDeptt", vcDiseaseNameParameter, vcSubjectParameter, vcQueryParameter, vcUpdatedByParameter, btIsPackageParameter, vcPackageNameParameter, btIsDiagnosticParameter, vcDiagnosticNameParameter, btIsAppiontmentParameter, btIsOtherParameter, vcOtherTypeParameter, vcOtherDiseaseParameter, vcOtherPackagesParameter, vcDurationParameter, vcOtherDiagnosticsParameter, vcOtherServicesParameter, vcPointIdParameter, vcDocAppointmentParameter, vcPreDiseaseParameter, btIsAssignDepttParameter, vcAssignDepttParameter, vcPatientIdParameter, vcQueryIdParameter);
        }
    
        public virtual ObjectResult<usp_fortis_Result> usp_fortis(string keyword, string hos_id, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_fortis_Result>("usp_fortis", keywordParameter, hos_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_GetabtdementiaQuery_Result> usp_GetabtdementiaQuery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetabtdementiaQuery_Result>("usp_GetabtdementiaQuery");
        }
    
        public virtual ObjectResult<usp_GetAnsQueryByDisease_Result> usp_GetAnsQueryByDisease(string des)
        {
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAnsQueryByDisease_Result>("usp_GetAnsQueryByDisease", desParameter);
        }
    
        public virtual int usp_GetBankInfo(string keyword, string banktype, string component, string city, string address, string bnk_name)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var banktypeParameter = banktype != null ?
                new ObjectParameter("banktype", banktype) :
                new ObjectParameter("banktype", typeof(string));
    
            var componentParameter = component != null ?
                new ObjectParameter("component", component) :
                new ObjectParameter("component", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var bnk_nameParameter = bnk_name != null ?
                new ObjectParameter("bnk_name", bnk_name) :
                new ObjectParameter("bnk_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetBankInfo", keywordParameter, banktypeParameter, componentParameter, cityParameter, addressParameter, bnk_nameParameter);
        }
    
        public virtual ObjectResult<usp_GetBlogQuery_Result> usp_GetBlogQuery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetBlogQuery_Result>("usp_GetBlogQuery");
        }
    
        public virtual ObjectResult<string> usp_GetCities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetCities");
        }
    
        public virtual ObjectResult<usp_GetCitiesByCountry_Result> usp_GetCitiesByCountry(string vcCountryCode)
        {
            var vcCountryCodeParameter = vcCountryCode != null ?
                new ObjectParameter("vcCountryCode", vcCountryCode) :
                new ObjectParameter("vcCountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCitiesByCountry_Result>("usp_GetCitiesByCountry", vcCountryCodeParameter);
        }
    
        public virtual ObjectResult<usp_GetClinicalCity_Result> usp_GetClinicalCity(string dept, string city)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClinicalCity_Result>("usp_GetClinicalCity", deptParameter, cityParameter);
        }
    
        public virtual ObjectResult<usp_GetClinicalCity_demo_Result> usp_GetClinicalCity_demo(string dept, string city)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClinicalCity_demo_Result>("usp_GetClinicalCity_demo", deptParameter, cityParameter);
        }
    
        public virtual ObjectResult<usp_GetClinicalCityAlpha_Result> usp_GetClinicalCityAlpha(string dept, string getCity)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var getCityParameter = getCity != null ?
                new ObjectParameter("getCity", getCity) :
                new ObjectParameter("getCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClinicalCityAlpha_Result>("usp_GetClinicalCityAlpha", deptParameter, getCityParameter);
        }
    
        public virtual ObjectResult<usp_GetClinicalCityAlphaHos_Result> usp_GetClinicalCityAlphaHos(string dept, string getCity)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var getCityParameter = getCity != null ?
                new ObjectParameter("getCity", getCity) :
                new ObjectParameter("getCity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClinicalCityAlphaHos_Result>("usp_GetClinicalCityAlphaHos", deptParameter, getCityParameter);
        }
    
        public virtual ObjectResult<usp_GetClinicalCitytest_Result> usp_GetClinicalCitytest(string dept, string city)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetClinicalCitytest_Result>("usp_GetClinicalCitytest", deptParameter, cityParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_GetCodes(string doc_id, string doc_id1, string hos_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var doc_id1Parameter = doc_id1 != null ?
                new ObjectParameter("doc_id1", doc_id1) :
                new ObjectParameter("doc_id1", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_GetCodes", doc_idParameter, doc_id1Parameter, hos_idParameter);
        }
    
        public virtual ObjectResult<usp_GetCountry_Result> usp_GetCountry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCountry_Result>("usp_GetCountry");
        }
    
        public virtual ObjectResult<string> usp_GetDept(string vcArea_name)
        {
            var vcArea_nameParameter = vcArea_name != null ?
                new ObjectParameter("vcArea_name", vcArea_name) :
                new ObjectParameter("vcArea_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetDept", vcArea_nameParameter);
        }
    
        public virtual ObjectResult<usp_getdiagID_Result> usp_getdiagID(string diagId)
        {
            var diagIdParameter = diagId != null ?
                new ObjectParameter("diagId", diagId) :
                new ObjectParameter("diagId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getdiagID_Result>("usp_getdiagID", diagIdParameter);
        }
    
        public virtual ObjectResult<string> usp_GetDiscipline()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetDiscipline");
        }
    
        public virtual ObjectResult<string> usp_GetDiseaseQuery(string doctorname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("Doctorname", doctorname) :
                new ObjectParameter("Doctorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetDiseaseQuery", doctornameParameter);
        }
    
        public virtual int usp_GetDocInHospital(string vcCondition)
        {
            var vcConditionParameter = vcCondition != null ?
                new ObjectParameter("vcCondition", vcCondition) :
                new ObjectParameter("vcCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetDocInHospital", vcConditionParameter);
        }
    
        public virtual int usp_GetDocSearchDetails(string vcCondition, string vcSpecialization)
        {
            var vcConditionParameter = vcCondition != null ?
                new ObjectParameter("vcCondition", vcCondition) :
                new ObjectParameter("vcCondition", typeof(string));
    
            var vcSpecializationParameter = vcSpecialization != null ?
                new ObjectParameter("vcSpecialization", vcSpecialization) :
                new ObjectParameter("vcSpecialization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetDocSearchDetails", vcConditionParameter, vcSpecializationParameter);
        }
    
        public virtual ObjectResult<usp_GetDoctorDetails_Result> usp_GetDoctorDetails(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDoctorDetails_Result>("usp_GetDoctorDetails", doc_idParameter);
        }
    
        public virtual ObjectResult<usp_GetDoctorDetails_edit_Result> usp_GetDoctorDetails_edit(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDoctorDetails_edit_Result>("usp_GetDoctorDetails_edit", doc_idParameter);
        }
    
        public virtual ObjectResult<usp_GetDoctorDetails_edit1_Result> usp_GetDoctorDetails_edit1(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDoctorDetails_edit1_Result>("usp_GetDoctorDetails_edit1", doc_idParameter);
        }
    
        public virtual ObjectResult<usp_GetDoctorResearchInterest_Result> usp_GetDoctorResearchInterest(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDoctorResearchInterest_Result>("usp_GetDoctorResearchInterest", doc_idParameter);
        }
    
        public virtual ObjectResult<usp_GetGridcitysQuery_Result> usp_GetGridcitysQuery(string city)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGridcitysQuery_Result>("usp_GetGridcitysQuery", cityParameter);
        }
    
        public virtual ObjectResult<usp_GetGridDocQuery_Result> usp_GetGridDocQuery(string city, string cat)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var catParameter = cat != null ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGridDocQuery_Result>("usp_GetGridDocQuery", cityParameter, catParameter);
        }
    
        public virtual ObjectResult<usp_GetGridhoscitysQuery_Result> usp_GetGridhoscitysQuery(string scity)
        {
            var scityParameter = scity != null ?
                new ObjectParameter("scity", scity) :
                new ObjectParameter("scity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGridhoscitysQuery_Result>("usp_GetGridhoscitysQuery", scityParameter);
        }
    
        public virtual ObjectResult<usp_GetgridhosotherQuery_Result> usp_GetgridhosotherQuery(string scity)
        {
            var scityParameter = scity != null ?
                new ObjectParameter("scity", scity) :
                new ObjectParameter("scity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetgridhosotherQuery_Result>("usp_GetgridhosotherQuery", scityParameter);
        }
    
        public virtual ObjectResult<usp_GetgridotherQuery_Result> usp_GetgridotherQuery(string cat)
        {
            var catParameter = cat != null ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetgridotherQuery_Result>("usp_GetgridotherQuery", catParameter);
        }
    
        public virtual ObjectResult<usp_GetGridpathcitysQuery_Result> usp_GetGridpathcitysQuery(string scity)
        {
            var scityParameter = scity != null ?
                new ObjectParameter("scity", scity) :
                new ObjectParameter("scity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGridpathcitysQuery_Result>("usp_GetGridpathcitysQuery", scityParameter);
        }
    
        public virtual ObjectResult<usp_GetGridpathothercitysQuery_Result> usp_GetGridpathothercitysQuery(string scity)
        {
            var scityParameter = scity != null ?
                new ObjectParameter("scity", scity) :
                new ObjectParameter("scity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGridpathothercitysQuery_Result>("usp_GetGridpathothercitysQuery", scityParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_gethd_id(string hos_id, string first_name, string last_name, string specialization_name, string city)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_gethd_id", hos_idParameter, first_nameParameter, last_nameParameter, specialization_nameParameter, cityParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_gethd_id_test(string hos_id, string first_name, string last_name, string specialization_name, string city)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_gethd_id_test", hos_idParameter, first_nameParameter, last_nameParameter, specialization_nameParameter, cityParameter);
        }
    
        public virtual ObjectResult<usp_GetHomeQuery_Result> usp_GetHomeQuery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHomeQuery_Result>("usp_GetHomeQuery");
        }
    
        public virtual ObjectResult<usp_GetHomeQueryForCommunty_Result> usp_GetHomeQueryForCommunty(string disease, string vcUserName)
        {
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHomeQueryForCommunty_Result>("usp_GetHomeQueryForCommunty", diseaseParameter, vcUserNameParameter);
        }
    
        public virtual ObjectResult<usp_GetHomeQueryhome_Result> usp_GetHomeQueryhome()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHomeQueryhome_Result>("usp_GetHomeQueryhome");
        }
    
        public virtual ObjectResult<usp_GetHomeQueryhome_int_Result> usp_GetHomeQueryhome_int()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHomeQueryhome_int_Result>("usp_GetHomeQueryhome_int");
        }
    
        public virtual ObjectResult<usp_GetHomeQueryhome1_Result> usp_GetHomeQueryhome1(string docid)
        {
            var docidParameter = docid != null ?
                new ObjectParameter("docid", docid) :
                new ObjectParameter("docid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHomeQueryhome1_Result>("usp_GetHomeQueryhome1", docidParameter);
        }
    
        public virtual ObjectResult<usp_getHosid_Result> usp_getHosid(string hosid)
        {
            var hosidParameter = hosid != null ?
                new ObjectParameter("hosid", hosid) :
                new ObjectParameter("hosid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getHosid_Result>("usp_getHosid", hosidParameter);
        }
    
        public virtual ObjectResult<usp_GetHospConCity_Result> usp_GetHospConCity(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHospConCity_Result>("usp_GetHospConCity", deptParameter);
        }
    
        public virtual ObjectResult<usp_GethospitalconsultantQuery_Result> usp_GethospitalconsultantQuery(Nullable<int> hd_id)
        {
            var hd_idParameter = hd_id.HasValue ?
                new ObjectParameter("Hd_id", hd_id) :
                new ObjectParameter("Hd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GethospitalconsultantQuery_Result>("usp_GethospitalconsultantQuery", hd_idParameter);
        }
    
        public virtual ObjectResult<usp_GethospitalconsultantQuery1_Result> usp_GethospitalconsultantQuery1(Nullable<int> hd_id)
        {
            var hd_idParameter = hd_id.HasValue ?
                new ObjectParameter("Hd_id", hd_id) :
                new ObjectParameter("Hd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GethospitalconsultantQuery1_Result>("usp_GethospitalconsultantQuery1", hd_idParameter);
        }
    
        public virtual ObjectResult<usp_GethospitaldetailQuery_Result> usp_GethospitaldetailQuery(string hosname)
        {
            var hosnameParameter = hosname != null ?
                new ObjectParameter("hosname", hosname) :
                new ObjectParameter("hosname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GethospitaldetailQuery_Result>("usp_GethospitaldetailQuery", hosnameParameter);
        }
    
        public virtual ObjectResult<usp_GethosQuery_Result> usp_GethosQuery(string hos_id)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GethosQuery_Result>("usp_GethosQuery", hos_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetHreview_idQuery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetHreview_idQuery");
        }
    
        public virtual ObjectResult<usp_GetMdoctorsdetailQuery_Result> usp_GetMdoctorsdetailQuery(string doctorname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("Doctorname", doctorname) :
                new ObjectParameter("Doctorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetMdoctorsdetailQuery_Result>("usp_GetMdoctorsdetailQuery", doctornameParameter);
        }
    
        public virtual ObjectResult<string> usp_GetMSothernameQuery(string doc_cat)
        {
            var doc_catParameter = doc_cat != null ?
                new ObjectParameter("doc_cat", doc_cat) :
                new ObjectParameter("doc_cat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetMSothernameQuery", doc_catParameter);
        }
    
        public virtual ObjectResult<usp_GetOrgInfo_Result> usp_GetOrgInfo(string vcOrgId)
        {
            var vcOrgIdParameter = vcOrgId != null ?
                new ObjectParameter("vcOrgId", vcOrgId) :
                new ObjectParameter("vcOrgId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrgInfo_Result>("usp_GetOrgInfo", vcOrgIdParameter);
        }
    
        public virtual ObjectResult<usp_GetOrgName_Result> usp_GetOrgName(string vcCityName)
        {
            var vcCityNameParameter = vcCityName != null ?
                new ObjectParameter("vcCityName", vcCityName) :
                new ObjectParameter("vcCityName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrgName_Result>("usp_GetOrgName", vcCityNameParameter);
        }
    
        public virtual ObjectResult<usp_getotherHos_Result> usp_getotherHos(string dept, string city)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getotherHos_Result>("usp_getotherHos", deptParameter, cityParameter);
        }
    
        public virtual ObjectResult<string> usp_getotherName(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_getotherName", deptParameter);
        }
    
        public virtual ObjectResult<string> usp_GetQuerycity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetQuerycity");
        }
    
        public virtual ObjectResult<string> usp_GetQueryDiscipline()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetQueryDiscipline");
        }
    
        public virtual ObjectResult<string> usp_GetQueryDiseases()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetQueryDiseases");
        }
    
        public virtual ObjectResult<usp_GetQueryFromCommuntyRply_Result> usp_GetQueryFromCommuntyRply(string disease, string vcUserName, string vcPostType, Nullable<int> intIdToPost)
        {
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetQueryFromCommuntyRply_Result>("usp_GetQueryFromCommuntyRply", diseaseParameter, vcUserNameParameter, vcPostTypeParameter, intIdToPostParameter);
        }
    
        public virtual ObjectResult<usp_GetQueryFromCommuntyRply1_Result> usp_GetQueryFromCommuntyRply1(string disease, string vcUserName, string vcPostType, Nullable<int> intIdToPost)
        {
            var diseaseParameter = disease != null ?
                new ObjectParameter("Disease", disease) :
                new ObjectParameter("Disease", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcPostTypeParameter = vcPostType != null ?
                new ObjectParameter("vcPostType", vcPostType) :
                new ObjectParameter("vcPostType", typeof(string));
    
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetQueryFromCommuntyRply1_Result>("usp_GetQueryFromCommuntyRply1", diseaseParameter, vcUserNameParameter, vcPostTypeParameter, intIdToPostParameter);
        }
    
        public virtual ObjectResult<usp_GetQueryProcedures_Result> usp_GetQueryProcedures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetQueryProcedures_Result>("usp_GetQueryProcedures");
        }
    
        public virtual ObjectResult<usp_GetQueryTest_Result> usp_GetQueryTest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetQueryTest_Result>("usp_GetQueryTest");
        }
    
        public virtual ObjectResult<usp_GetreviewDatalistQuery_Result> usp_GetreviewDatalistQuery(string doctorname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("Doctorname", doctorname) :
                new ObjectParameter("Doctorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetreviewDatalistQuery_Result>("usp_GetreviewDatalistQuery", doctornameParameter);
        }
    
        public virtual ObjectResult<usp_GetreviewhosDatalistQuery_Result> usp_GetreviewhosDatalistQuery(string hosname)
        {
            var hosnameParameter = hosname != null ?
                new ObjectParameter("hosname", hosname) :
                new ObjectParameter("hosname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetreviewhosDatalistQuery_Result>("usp_GetreviewhosDatalistQuery", hosnameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetselectcountratingQuery(string doctorname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("Doctorname", doctorname) :
                new ObjectParameter("Doctorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetselectcountratingQuery", doctornameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetselecthoscountratingQuery(string hosname)
        {
            var hosnameParameter = hosname != null ?
                new ObjectParameter("hosname", hosname) :
                new ObjectParameter("hosname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetselecthoscountratingQuery", hosnameParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> usp_GetselecthosratingQuery(string hosname)
        {
            var hosnameParameter = hosname != null ?
                new ObjectParameter("hosname", hosname) :
                new ObjectParameter("hosname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("usp_GetselecthosratingQuery", hosnameParameter);
        }
    
        public virtual ObjectResult<Nullable<double>> usp_GetselectratingQuery(string doctorname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("Doctorname", doctorname) :
                new ObjectParameter("Doctorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<double>>("usp_GetselectratingQuery", doctornameParameter);
        }
    
        public virtual ObjectResult<string> usp_GetSkills(string vcSpecialzationName)
        {
            var vcSpecialzationNameParameter = vcSpecialzationName != null ?
                new ObjectParameter("vcSpecialzationName", vcSpecialzationName) :
                new ObjectParameter("vcSpecialzationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetSkills", vcSpecialzationNameParameter);
        }
    
        public virtual ObjectResult<usp_GetSpechospitalconsultantsQuery_Result> usp_GetSpechospitalconsultantsQuery(Nullable<int> doctorname)
        {
            var doctornameParameter = doctorname.HasValue ?
                new ObjectParameter("Doctorname", doctorname) :
                new ObjectParameter("Doctorname", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSpechospitalconsultantsQuery_Result>("usp_GetSpechospitalconsultantsQuery", doctornameParameter);
        }
    
        public virtual ObjectResult<usp_GetSpeciality_Result> usp_GetSpeciality()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSpeciality_Result>("usp_GetSpeciality");
        }
    
        public virtual ObjectResult<usp_GetSpecialization_Result> usp_GetSpecialization()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSpecialization_Result>("usp_GetSpecialization");
        }
    
        public virtual ObjectResult<usp_Getsubdiscussion_Result> usp_Getsubdiscussion(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Getsubdiscussion_Result>("usp_Getsubdiscussion", vcUserNameParameter);
        }
    
        public virtual ObjectResult<usp_Getsubdiscussion1_Result> usp_Getsubdiscussion1(string vcPatientId, string vcQueryId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Getsubdiscussion1_Result>("usp_Getsubdiscussion1", vcPatientIdParameter, vcQueryIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_GetTableRowsDT(string doc_id, string hos_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_GetTableRowsDT", doc_idParameter, hos_idParameter);
        }
    
        public virtual ObjectResult<usp_GetUnAnsQueryByDisease_Result> usp_GetUnAnsQueryByDisease(string des)
        {
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUnAnsQueryByDisease_Result>("usp_GetUnAnsQueryByDisease", desParameter);
        }
    
        public virtual ObjectResult<string> usp_HealthList(string keyword, string diseasename, string patientname, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var diseasenameParameter = diseasename != null ?
                new ObjectParameter("diseasename", diseasename) :
                new ObjectParameter("diseasename", typeof(string));
    
            var patientnameParameter = patientname != null ?
                new ObjectParameter("patientname", patientname) :
                new ObjectParameter("patientname", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_HealthList", keywordParameter, diseasenameParameter, patientnameParameter, modeParameter);
        }
    
        public virtual int usp_HosContact(string keyword, string ips, string hos_id, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var ipsParameter = ips != null ?
                new ObjectParameter("ips", ips) :
                new ObjectParameter("ips", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HosContact", keywordParameter, ipsParameter, hos_idParameter, modeParameter);
        }
    
        public virtual int usp_HosDetbyBank(string keyword, string hos_id, string facilityid, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("Hos_id", hos_id) :
                new ObjectParameter("Hos_id", typeof(string));
    
            var facilityidParameter = facilityid != null ?
                new ObjectParameter("facilityid", facilityid) :
                new ObjectParameter("facilityid", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HosDetbyBank", keywordParameter, hos_idParameter, facilityidParameter, modeParameter);
        }
    
        public virtual int usp_HosDetbyDaig(string keyword, string hos_id, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("Hos_id", hos_id) :
                new ObjectParameter("Hos_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HosDetbyDaig", keywordParameter, hos_idParameter, modeParameter);
        }
    
        public virtual int usp_HosDetbySpeciality(string keyword, string hos_id, string specialization_name, string sub, string opd_name, string procedure_name, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("Hos_id", hos_id) :
                new ObjectParameter("Hos_id", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var subParameter = sub != null ?
                new ObjectParameter("sub", sub) :
                new ObjectParameter("sub", typeof(string));
    
            var opd_nameParameter = opd_name != null ?
                new ObjectParameter("opd_name", opd_name) :
                new ObjectParameter("opd_name", typeof(string));
    
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HosDetbySpeciality", keywordParameter, hos_idParameter, specialization_nameParameter, subParameter, opd_nameParameter, procedure_nameParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_HospCity_Result> usp_HospCity(string city, string procedure_name)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospCity_Result>("usp_HospCity", cityParameter, procedure_nameParameter);
        }
    
        public virtual ObjectResult<usp_HospCity1_Result> usp_HospCity1(string city, string procedure_name)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospCity1_Result>("usp_HospCity1", cityParameter, procedure_nameParameter);
        }
    
        public virtual ObjectResult<usp_HospCons_Result> usp_HospCons(string city, string hos_id, string specialization_name)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospCons_Result>("usp_HospCons", cityParameter, hos_idParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<usp_HospConsProc_Result> usp_HospConsProc(string city, string hos_id, string specialization_name, string procedure_name)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospConsProc_Result>("usp_HospConsProc", cityParameter, hos_idParameter, specialization_nameParameter, procedure_nameParameter);
        }
    
        public virtual ObjectResult<usp_HospDept_Result> usp_HospDept(string hos_id, string city, string opd_name)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var opd_nameParameter = opd_name != null ?
                new ObjectParameter("opd_name", opd_name) :
                new ObjectParameter("opd_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospDept_Result>("usp_HospDept", hos_idParameter, cityParameter, opd_nameParameter);
        }
    
        public virtual ObjectResult<usp_HospDept1_Result> usp_HospDept1(string hos_id, string city, string opd_name)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var opd_nameParameter = opd_name != null ?
                new ObjectParameter("opd_name", opd_name) :
                new ObjectParameter("opd_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospDept1_Result>("usp_HospDept1", hos_idParameter, cityParameter, opd_nameParameter);
        }
    
        public virtual ObjectResult<usp_HospProc_Result> usp_HospProc(string hos_id, string city, string procedure_name, string specialization_name)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospProc_Result>("usp_HospProc", hos_idParameter, cityParameter, procedure_nameParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<usp_HospProc1_Result> usp_HospProc1(string hos_id, string city, string procedure_name)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HospProc1_Result>("usp_HospProc1", hos_idParameter, cityParameter, procedure_nameParameter);
        }
    
        public virtual ObjectResult<usp_inddoc_Result> usp_inddoc(string cat, string city, string vcAreaName)
        {
            var catParameter = cat != null ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var vcAreaNameParameter = vcAreaName != null ?
                new ObjectParameter("vcAreaName", vcAreaName) :
                new ObjectParameter("vcAreaName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_inddoc_Result>("usp_inddoc", catParameter, cityParameter, vcAreaNameParameter);
        }
    
        public virtual int Usp_InsertCity(Nullable<long> city_id, string other_city_name)
        {
            var city_idParameter = city_id.HasValue ?
                new ObjectParameter("city_id", city_id) :
                new ObjectParameter("city_id", typeof(long));
    
            var other_city_nameParameter = other_city_name != null ?
                new ObjectParameter("other_city_name", other_city_name) :
                new ObjectParameter("other_city_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_InsertCity", city_idParameter, other_city_nameParameter);
        }
    
        public virtual int usp_InsertDoctorCategory(string doc_id, string category_name, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDoctorCategory", doc_idParameter, category_nameParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_InsertDoctorResearchInterest(string doc_id, Nullable<bool> btClinicalResearch, Nullable<bool> btPreClinicalResearch, Nullable<bool> btOtherResearch, string vcOtherResearch, Nullable<bool> btUniversityFacility, Nullable<bool> btGeneralFacility, Nullable<bool> btPrimaryFacility, Nullable<bool> btOtherFacility, string vcOtherFacility, Nullable<bool> btPediatricPatient, Nullable<bool> btAdultPatient, Nullable<bool> btElderlyPatient, string vcClinicalStudies, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcExperienceDetails)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var btClinicalResearchParameter = btClinicalResearch.HasValue ?
                new ObjectParameter("btClinicalResearch", btClinicalResearch) :
                new ObjectParameter("btClinicalResearch", typeof(bool));
    
            var btPreClinicalResearchParameter = btPreClinicalResearch.HasValue ?
                new ObjectParameter("btPreClinicalResearch", btPreClinicalResearch) :
                new ObjectParameter("btPreClinicalResearch", typeof(bool));
    
            var btOtherResearchParameter = btOtherResearch.HasValue ?
                new ObjectParameter("btOtherResearch", btOtherResearch) :
                new ObjectParameter("btOtherResearch", typeof(bool));
    
            var vcOtherResearchParameter = vcOtherResearch != null ?
                new ObjectParameter("vcOtherResearch", vcOtherResearch) :
                new ObjectParameter("vcOtherResearch", typeof(string));
    
            var btUniversityFacilityParameter = btUniversityFacility.HasValue ?
                new ObjectParameter("btUniversityFacility", btUniversityFacility) :
                new ObjectParameter("btUniversityFacility", typeof(bool));
    
            var btGeneralFacilityParameter = btGeneralFacility.HasValue ?
                new ObjectParameter("btGeneralFacility", btGeneralFacility) :
                new ObjectParameter("btGeneralFacility", typeof(bool));
    
            var btPrimaryFacilityParameter = btPrimaryFacility.HasValue ?
                new ObjectParameter("btPrimaryFacility", btPrimaryFacility) :
                new ObjectParameter("btPrimaryFacility", typeof(bool));
    
            var btOtherFacilityParameter = btOtherFacility.HasValue ?
                new ObjectParameter("btOtherFacility", btOtherFacility) :
                new ObjectParameter("btOtherFacility", typeof(bool));
    
            var vcOtherFacilityParameter = vcOtherFacility != null ?
                new ObjectParameter("vcOtherFacility", vcOtherFacility) :
                new ObjectParameter("vcOtherFacility", typeof(string));
    
            var btPediatricPatientParameter = btPediatricPatient.HasValue ?
                new ObjectParameter("btPediatricPatient", btPediatricPatient) :
                new ObjectParameter("btPediatricPatient", typeof(bool));
    
            var btAdultPatientParameter = btAdultPatient.HasValue ?
                new ObjectParameter("btAdultPatient", btAdultPatient) :
                new ObjectParameter("btAdultPatient", typeof(bool));
    
            var btElderlyPatientParameter = btElderlyPatient.HasValue ?
                new ObjectParameter("btElderlyPatient", btElderlyPatient) :
                new ObjectParameter("btElderlyPatient", typeof(bool));
    
            var vcClinicalStudiesParameter = vcClinicalStudies != null ?
                new ObjectParameter("vcClinicalStudies", vcClinicalStudies) :
                new ObjectParameter("vcClinicalStudies", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcExperienceDetailsParameter = vcExperienceDetails != null ?
                new ObjectParameter("vcExperienceDetails", vcExperienceDetails) :
                new ObjectParameter("vcExperienceDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDoctorResearchInterest", doc_idParameter, btClinicalResearchParameter, btPreClinicalResearchParameter, btOtherResearchParameter, vcOtherResearchParameter, btUniversityFacilityParameter, btGeneralFacilityParameter, btPrimaryFacilityParameter, btOtherFacilityParameter, vcOtherFacilityParameter, btPediatricPatientParameter, btAdultPatientParameter, btElderlyPatientParameter, vcClinicalStudiesParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcExperienceDetailsParameter);
        }
    
        public virtual int usp_InsertDoctorsClinicTiming(string doc_id, string start_time, string end_time, string day_name, string updated_by)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var start_timeParameter = start_time != null ?
                new ObjectParameter("start_time", start_time) :
                new ObjectParameter("start_time", typeof(string));
    
            var end_timeParameter = end_time != null ?
                new ObjectParameter("end_time", end_time) :
                new ObjectParameter("end_time", typeof(string));
    
            var day_nameParameter = day_name != null ?
                new ObjectParameter("day_name", day_name) :
                new ObjectParameter("day_name", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDoctorsClinicTiming", doc_idParameter, start_timeParameter, end_timeParameter, day_nameParameter, updated_byParameter);
        }
    
        public virtual ObjectResult<string> usp_InsertDoctorsDetail(ObjectParameter doc_id, string istr, string first_name, string middle_name, string last_name, Nullable<System.DateTime> date_of_birth, string address, string city, Nullable<decimal> pincode, string primary_std, string primary_phone, string secondry_std, string secondry_phone, string web_url, string email, string qualification1, string specialization_name1, Nullable<decimal> year1, string institute1, string qualification2, string specialization_name2, Nullable<decimal> year2, string institute2, string qualification3, string specialization_name3, Nullable<decimal> year3, string institute3, string qualification4, string specialization_name4, Nullable<decimal> year4, string institute4, string registration_No, Nullable<decimal> consultation_Fee, string experience1, string updated_by, Nullable<System.DateTime> updated_DateTime, string designation, string approval, Nullable<decimal> category_code, string vcUserName, string vcRoleType, string vcCountry, string vcOthercity, string vcimage, string category_name, string clinic_address, string clinic_city, string clinic_Othercity, string gender)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var primary_stdParameter = primary_std != null ?
                new ObjectParameter("primary_std", primary_std) :
                new ObjectParameter("primary_std", typeof(string));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var secondry_stdParameter = secondry_std != null ?
                new ObjectParameter("secondry_std", secondry_std) :
                new ObjectParameter("secondry_std", typeof(string));
    
            var secondry_phoneParameter = secondry_phone != null ?
                new ObjectParameter("secondry_phone", secondry_phone) :
                new ObjectParameter("secondry_phone", typeof(string));
    
            var web_urlParameter = web_url != null ?
                new ObjectParameter("web_url", web_url) :
                new ObjectParameter("web_url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var qualification1Parameter = qualification1 != null ?
                new ObjectParameter("Qualification1", qualification1) :
                new ObjectParameter("Qualification1", typeof(string));
    
            var specialization_name1Parameter = specialization_name1 != null ?
                new ObjectParameter("specialization_name1", specialization_name1) :
                new ObjectParameter("specialization_name1", typeof(string));
    
            var year1Parameter = year1.HasValue ?
                new ObjectParameter("year1", year1) :
                new ObjectParameter("year1", typeof(decimal));
    
            var institute1Parameter = institute1 != null ?
                new ObjectParameter("institute1", institute1) :
                new ObjectParameter("institute1", typeof(string));
    
            var qualification2Parameter = qualification2 != null ?
                new ObjectParameter("qualification2", qualification2) :
                new ObjectParameter("qualification2", typeof(string));
    
            var specialization_name2Parameter = specialization_name2 != null ?
                new ObjectParameter("specialization_name2", specialization_name2) :
                new ObjectParameter("specialization_name2", typeof(string));
    
            var year2Parameter = year2.HasValue ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(decimal));
    
            var institute2Parameter = institute2 != null ?
                new ObjectParameter("institute2", institute2) :
                new ObjectParameter("institute2", typeof(string));
    
            var qualification3Parameter = qualification3 != null ?
                new ObjectParameter("Qualification3", qualification3) :
                new ObjectParameter("Qualification3", typeof(string));
    
            var specialization_name3Parameter = specialization_name3 != null ?
                new ObjectParameter("specialization_name3", specialization_name3) :
                new ObjectParameter("specialization_name3", typeof(string));
    
            var year3Parameter = year3.HasValue ?
                new ObjectParameter("year3", year3) :
                new ObjectParameter("year3", typeof(decimal));
    
            var institute3Parameter = institute3 != null ?
                new ObjectParameter("institute3", institute3) :
                new ObjectParameter("institute3", typeof(string));
    
            var qualification4Parameter = qualification4 != null ?
                new ObjectParameter("qualification4", qualification4) :
                new ObjectParameter("qualification4", typeof(string));
    
            var specialization_name4Parameter = specialization_name4 != null ?
                new ObjectParameter("specialization_name4", specialization_name4) :
                new ObjectParameter("specialization_name4", typeof(string));
    
            var year4Parameter = year4.HasValue ?
                new ObjectParameter("year4", year4) :
                new ObjectParameter("year4", typeof(decimal));
    
            var institute4Parameter = institute4 != null ?
                new ObjectParameter("institute4", institute4) :
                new ObjectParameter("institute4", typeof(string));
    
            var registration_NoParameter = registration_No != null ?
                new ObjectParameter("Registration_No", registration_No) :
                new ObjectParameter("Registration_No", typeof(string));
    
            var consultation_FeeParameter = consultation_Fee.HasValue ?
                new ObjectParameter("Consultation_Fee", consultation_Fee) :
                new ObjectParameter("Consultation_Fee", typeof(decimal));
    
            var experience1Parameter = experience1 != null ?
                new ObjectParameter("experience1", experience1) :
                new ObjectParameter("experience1", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_DateTimeParameter = updated_DateTime.HasValue ?
                new ObjectParameter("updated_DateTime", updated_DateTime) :
                new ObjectParameter("updated_DateTime", typeof(System.DateTime));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var approvalParameter = approval != null ?
                new ObjectParameter("approval", approval) :
                new ObjectParameter("approval", typeof(string));
    
            var category_codeParameter = category_code.HasValue ?
                new ObjectParameter("category_code", category_code) :
                new ObjectParameter("category_code", typeof(decimal));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            var vcOthercityParameter = vcOthercity != null ?
                new ObjectParameter("vcOthercity", vcOthercity) :
                new ObjectParameter("vcOthercity", typeof(string));
    
            var vcimageParameter = vcimage != null ?
                new ObjectParameter("vcimage", vcimage) :
                new ObjectParameter("vcimage", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var clinic_OthercityParameter = clinic_Othercity != null ?
                new ObjectParameter("clinic_Othercity", clinic_Othercity) :
                new ObjectParameter("clinic_Othercity", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_InsertDoctorsDetail", doc_id, istrParameter, first_nameParameter, middle_nameParameter, last_nameParameter, date_of_birthParameter, addressParameter, cityParameter, pincodeParameter, primary_stdParameter, primary_phoneParameter, secondry_stdParameter, secondry_phoneParameter, web_urlParameter, emailParameter, qualification1Parameter, specialization_name1Parameter, year1Parameter, institute1Parameter, qualification2Parameter, specialization_name2Parameter, year2Parameter, institute2Parameter, qualification3Parameter, specialization_name3Parameter, year3Parameter, institute3Parameter, qualification4Parameter, specialization_name4Parameter, year4Parameter, institute4Parameter, registration_NoParameter, consultation_FeeParameter, experience1Parameter, updated_byParameter, updated_DateTimeParameter, designationParameter, approvalParameter, category_codeParameter, vcUserNameParameter, vcRoleTypeParameter, vcCountryParameter, vcOthercityParameter, vcimageParameter, category_nameParameter, clinic_addressParameter, clinic_cityParameter, clinic_OthercityParameter, genderParameter);
        }
    
        public virtual ObjectResult<string> usp_InsertDoctorsDetail1(ObjectParameter doc_id, string istr, string first_name, string middle_name, string last_name, Nullable<System.DateTime> date_of_birth, string address, string city, Nullable<decimal> pincode, string primary_std, string primary_phone, string secondry_std, string secondry_phone, string web_url, string email, string qualification1, string specialization_name1, Nullable<decimal> year1, string institute1, string qualification2, string specialization_name2, Nullable<decimal> year2, string institute2, string qualification3, string specialization_name3, Nullable<decimal> year3, string institute3, string qualification4, string specialization_name4, Nullable<decimal> year4, string institute4, string registration_No, Nullable<decimal> consultation_Fee, string experience1, string updated_by, Nullable<System.DateTime> updated_DateTime, string designation, string approval, Nullable<decimal> category_code, string vcUserName, string vcRoleType, string vcCountry, string vcOthercity, string vcimage, string category_name, string clinic_address, string clinic_city, string clinic_Othercity, string gender)
        {
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var middle_nameParameter = middle_name != null ?
                new ObjectParameter("middle_name", middle_name) :
                new ObjectParameter("middle_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var date_of_birthParameter = date_of_birth.HasValue ?
                new ObjectParameter("date_of_birth", date_of_birth) :
                new ObjectParameter("date_of_birth", typeof(System.DateTime));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var primary_stdParameter = primary_std != null ?
                new ObjectParameter("primary_std", primary_std) :
                new ObjectParameter("primary_std", typeof(string));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var secondry_stdParameter = secondry_std != null ?
                new ObjectParameter("secondry_std", secondry_std) :
                new ObjectParameter("secondry_std", typeof(string));
    
            var secondry_phoneParameter = secondry_phone != null ?
                new ObjectParameter("secondry_phone", secondry_phone) :
                new ObjectParameter("secondry_phone", typeof(string));
    
            var web_urlParameter = web_url != null ?
                new ObjectParameter("web_url", web_url) :
                new ObjectParameter("web_url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var qualification1Parameter = qualification1 != null ?
                new ObjectParameter("Qualification1", qualification1) :
                new ObjectParameter("Qualification1", typeof(string));
    
            var specialization_name1Parameter = specialization_name1 != null ?
                new ObjectParameter("specialization_name1", specialization_name1) :
                new ObjectParameter("specialization_name1", typeof(string));
    
            var year1Parameter = year1.HasValue ?
                new ObjectParameter("year1", year1) :
                new ObjectParameter("year1", typeof(decimal));
    
            var institute1Parameter = institute1 != null ?
                new ObjectParameter("institute1", institute1) :
                new ObjectParameter("institute1", typeof(string));
    
            var qualification2Parameter = qualification2 != null ?
                new ObjectParameter("qualification2", qualification2) :
                new ObjectParameter("qualification2", typeof(string));
    
            var specialization_name2Parameter = specialization_name2 != null ?
                new ObjectParameter("specialization_name2", specialization_name2) :
                new ObjectParameter("specialization_name2", typeof(string));
    
            var year2Parameter = year2.HasValue ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(decimal));
    
            var institute2Parameter = institute2 != null ?
                new ObjectParameter("institute2", institute2) :
                new ObjectParameter("institute2", typeof(string));
    
            var qualification3Parameter = qualification3 != null ?
                new ObjectParameter("Qualification3", qualification3) :
                new ObjectParameter("Qualification3", typeof(string));
    
            var specialization_name3Parameter = specialization_name3 != null ?
                new ObjectParameter("specialization_name3", specialization_name3) :
                new ObjectParameter("specialization_name3", typeof(string));
    
            var year3Parameter = year3.HasValue ?
                new ObjectParameter("year3", year3) :
                new ObjectParameter("year3", typeof(decimal));
    
            var institute3Parameter = institute3 != null ?
                new ObjectParameter("institute3", institute3) :
                new ObjectParameter("institute3", typeof(string));
    
            var qualification4Parameter = qualification4 != null ?
                new ObjectParameter("qualification4", qualification4) :
                new ObjectParameter("qualification4", typeof(string));
    
            var specialization_name4Parameter = specialization_name4 != null ?
                new ObjectParameter("specialization_name4", specialization_name4) :
                new ObjectParameter("specialization_name4", typeof(string));
    
            var year4Parameter = year4.HasValue ?
                new ObjectParameter("year4", year4) :
                new ObjectParameter("year4", typeof(decimal));
    
            var institute4Parameter = institute4 != null ?
                new ObjectParameter("institute4", institute4) :
                new ObjectParameter("institute4", typeof(string));
    
            var registration_NoParameter = registration_No != null ?
                new ObjectParameter("Registration_No", registration_No) :
                new ObjectParameter("Registration_No", typeof(string));
    
            var consultation_FeeParameter = consultation_Fee.HasValue ?
                new ObjectParameter("Consultation_Fee", consultation_Fee) :
                new ObjectParameter("Consultation_Fee", typeof(decimal));
    
            var experience1Parameter = experience1 != null ?
                new ObjectParameter("experience1", experience1) :
                new ObjectParameter("experience1", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_DateTimeParameter = updated_DateTime.HasValue ?
                new ObjectParameter("updated_DateTime", updated_DateTime) :
                new ObjectParameter("updated_DateTime", typeof(System.DateTime));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var approvalParameter = approval != null ?
                new ObjectParameter("approval", approval) :
                new ObjectParameter("approval", typeof(string));
    
            var category_codeParameter = category_code.HasValue ?
                new ObjectParameter("category_code", category_code) :
                new ObjectParameter("category_code", typeof(decimal));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            var vcOthercityParameter = vcOthercity != null ?
                new ObjectParameter("vcOthercity", vcOthercity) :
                new ObjectParameter("vcOthercity", typeof(string));
    
            var vcimageParameter = vcimage != null ?
                new ObjectParameter("vcimage", vcimage) :
                new ObjectParameter("vcimage", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var clinic_OthercityParameter = clinic_Othercity != null ?
                new ObjectParameter("clinic_Othercity", clinic_Othercity) :
                new ObjectParameter("clinic_Othercity", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_InsertDoctorsDetail1", doc_id, istrParameter, first_nameParameter, middle_nameParameter, last_nameParameter, date_of_birthParameter, addressParameter, cityParameter, pincodeParameter, primary_stdParameter, primary_phoneParameter, secondry_stdParameter, secondry_phoneParameter, web_urlParameter, emailParameter, qualification1Parameter, specialization_name1Parameter, year1Parameter, institute1Parameter, qualification2Parameter, specialization_name2Parameter, year2Parameter, institute2Parameter, qualification3Parameter, specialization_name3Parameter, year3Parameter, institute3Parameter, qualification4Parameter, specialization_name4Parameter, year4Parameter, institute4Parameter, registration_NoParameter, consultation_FeeParameter, experience1Parameter, updated_byParameter, updated_DateTimeParameter, designationParameter, approvalParameter, category_codeParameter, vcUserNameParameter, vcRoleTypeParameter, vcCountryParameter, vcOthercityParameter, vcimageParameter, category_nameParameter, clinic_addressParameter, clinic_cityParameter, clinic_OthercityParameter, genderParameter);
        }
    
        public virtual int usp_InsertDoctorSkills(string doc_id, string speciality_name, string skill_name, string other, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var speciality_nameParameter = speciality_name != null ?
                new ObjectParameter("speciality_name", speciality_name) :
                new ObjectParameter("speciality_name", typeof(string));
    
            var skill_nameParameter = skill_name != null ?
                new ObjectParameter("skill_name", skill_name) :
                new ObjectParameter("skill_name", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDoctorSkills", doc_idParameter, speciality_nameParameter, skill_nameParameter, otherParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_InsertDoctorsVisitingDetail(string doc_id, string hospital_name, string address, string city, string std_code, Nullable<decimal> phone_no, string day_time, string updated_by, string updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var std_codeParameter = std_code != null ?
                new ObjectParameter("std_code", std_code) :
                new ObjectParameter("std_code", typeof(string));
    
            var phone_noParameter = phone_no.HasValue ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(decimal));
    
            var day_timeParameter = day_time != null ?
                new ObjectParameter("day_time", day_time) :
                new ObjectParameter("day_time", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime != null ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDoctorsVisitingDetail", doc_idParameter, hospital_nameParameter, addressParameter, cityParameter, std_codeParameter, phone_noParameter, day_timeParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_InsertDocWorkDetail(string doc_id, string clinic_address, string clinic_city, string clinic_Othercity)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var clinic_OthercityParameter = clinic_Othercity != null ?
                new ObjectParameter("clinic_Othercity", clinic_Othercity) :
                new ObjectParameter("clinic_Othercity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDocWorkDetail", doc_idParameter, clinic_addressParameter, clinic_cityParameter, clinic_OthercityParameter);
        }
    
        public virtual int usp_InsertHospitalsDetail(string hos_id, string hospital_name, string hospital_category, string hospital_type, Nullable<bool> allopathic, Nullable<bool> aurvadic, Nullable<bool> homeopathic, Nullable<bool> unani, string address, string city, Nullable<decimal> pincode, string primary_phone, string fax_no, string email, string web_url, Nullable<bool> ambulance_services, string ambulance_std, string ambulance_phone, Nullable<decimal> no_of_beds, string accredited_by, Nullable<bool> icu_facility, Nullable<int> count_hosId, Nullable<decimal> category_code, string ind_Name, string ind_Mobile, string ind_Email, string vcUserName, string vcRoleType, string primary_std, string updated_by, Nullable<System.DateTime> updated_datetime, string vcEmergency_std, string vcEmergency_phone)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var hospital_nameParameter = hospital_name != null ?
                new ObjectParameter("hospital_name", hospital_name) :
                new ObjectParameter("hospital_name", typeof(string));
    
            var hospital_categoryParameter = hospital_category != null ?
                new ObjectParameter("hospital_category", hospital_category) :
                new ObjectParameter("hospital_category", typeof(string));
    
            var hospital_typeParameter = hospital_type != null ?
                new ObjectParameter("hospital_type", hospital_type) :
                new ObjectParameter("hospital_type", typeof(string));
    
            var allopathicParameter = allopathic.HasValue ?
                new ObjectParameter("Allopathic", allopathic) :
                new ObjectParameter("Allopathic", typeof(bool));
    
            var aurvadicParameter = aurvadic.HasValue ?
                new ObjectParameter("Aurvadic", aurvadic) :
                new ObjectParameter("Aurvadic", typeof(bool));
    
            var homeopathicParameter = homeopathic.HasValue ?
                new ObjectParameter("Homeopathic", homeopathic) :
                new ObjectParameter("Homeopathic", typeof(bool));
    
            var unaniParameter = unani.HasValue ?
                new ObjectParameter("Unani", unani) :
                new ObjectParameter("Unani", typeof(bool));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(decimal));
    
            var primary_phoneParameter = primary_phone != null ?
                new ObjectParameter("primary_phone", primary_phone) :
                new ObjectParameter("primary_phone", typeof(string));
    
            var fax_noParameter = fax_no != null ?
                new ObjectParameter("fax_no", fax_no) :
                new ObjectParameter("fax_no", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var web_urlParameter = web_url != null ?
                new ObjectParameter("web_url", web_url) :
                new ObjectParameter("web_url", typeof(string));
    
            var ambulance_servicesParameter = ambulance_services.HasValue ?
                new ObjectParameter("ambulance_services", ambulance_services) :
                new ObjectParameter("ambulance_services", typeof(bool));
    
            var ambulance_stdParameter = ambulance_std != null ?
                new ObjectParameter("ambulance_std", ambulance_std) :
                new ObjectParameter("ambulance_std", typeof(string));
    
            var ambulance_phoneParameter = ambulance_phone != null ?
                new ObjectParameter("ambulance_phone", ambulance_phone) :
                new ObjectParameter("ambulance_phone", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(decimal));
    
            var accredited_byParameter = accredited_by != null ?
                new ObjectParameter("accredited_by", accredited_by) :
                new ObjectParameter("accredited_by", typeof(string));
    
            var icu_facilityParameter = icu_facility.HasValue ?
                new ObjectParameter("icu_facility", icu_facility) :
                new ObjectParameter("icu_facility", typeof(bool));
    
            var count_hosIdParameter = count_hosId.HasValue ?
                new ObjectParameter("Count_hosId", count_hosId) :
                new ObjectParameter("Count_hosId", typeof(int));
    
            var category_codeParameter = category_code.HasValue ?
                new ObjectParameter("category_code", category_code) :
                new ObjectParameter("category_code", typeof(decimal));
    
            var ind_NameParameter = ind_Name != null ?
                new ObjectParameter("Ind_Name", ind_Name) :
                new ObjectParameter("Ind_Name", typeof(string));
    
            var ind_MobileParameter = ind_Mobile != null ?
                new ObjectParameter("Ind_Mobile", ind_Mobile) :
                new ObjectParameter("Ind_Mobile", typeof(string));
    
            var ind_EmailParameter = ind_Email != null ?
                new ObjectParameter("Ind_Email", ind_Email) :
                new ObjectParameter("Ind_Email", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var primary_stdParameter = primary_std != null ?
                new ObjectParameter("primary_std", primary_std) :
                new ObjectParameter("primary_std", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var vcEmergency_stdParameter = vcEmergency_std != null ?
                new ObjectParameter("vcEmergency_std", vcEmergency_std) :
                new ObjectParameter("vcEmergency_std", typeof(string));
    
            var vcEmergency_phoneParameter = vcEmergency_phone != null ?
                new ObjectParameter("vcEmergency_phone", vcEmergency_phone) :
                new ObjectParameter("vcEmergency_phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertHospitalsDetail", hos_idParameter, hospital_nameParameter, hospital_categoryParameter, hospital_typeParameter, allopathicParameter, aurvadicParameter, homeopathicParameter, unaniParameter, addressParameter, cityParameter, pincodeParameter, primary_phoneParameter, fax_noParameter, emailParameter, web_urlParameter, ambulance_servicesParameter, ambulance_stdParameter, ambulance_phoneParameter, no_of_bedsParameter, accredited_byParameter, icu_facilityParameter, count_hosIdParameter, category_codeParameter, ind_NameParameter, ind_MobileParameter, ind_EmailParameter, vcUserNameParameter, vcRoleTypeParameter, primary_stdParameter, updated_byParameter, updated_datetimeParameter, vcEmergency_stdParameter, vcEmergency_phoneParameter);
        }
    
        public virtual int usp_InsertPGFamialy(string order_id, string bill_cus_Name1, string bill_cus_Name2, string bill_cus_Name3, string bill_cus_Name4, string bill_cus_Gender1, string bill_cus_Gender2, string bill_cus_Gender3, string bill_cus_Gender4, string bill_cus_age1, string bill_cus_age2, string bill_cus_age3, string bill_cus_age4, string bill_cus_Allergies1, string bill_cus_Allergies2, string bill_cus_Allergies3, string bill_cus_Allergies4, string bill_cus_blood1, string bill_cus_blood2, string bill_cus_blood3, string bill_cus_blood4, string bill_cus_phone1, string bill_cus_phone2, string bill_cus_phone3, string bill_cus_phone4, string bill_cus_email1, string bill_cus_email2, string bill_cus_email3, string bill_cus_email4, string bill_cus_address, string bill_cus_pincode, string bill_cus_city, string bill_cus_state, string bill_cus_country, string delivery_cust_name, string delivery_cust_address, string del_cus_pincode, string del_cus_city, string del_cus_state, string del_cus_country, string amount, string bill_cus_Name)
        {
            var order_idParameter = order_id != null ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(string));
    
            var bill_cus_Name1Parameter = bill_cus_Name1 != null ?
                new ObjectParameter("bill_cus_Name1", bill_cus_Name1) :
                new ObjectParameter("bill_cus_Name1", typeof(string));
    
            var bill_cus_Name2Parameter = bill_cus_Name2 != null ?
                new ObjectParameter("bill_cus_Name2", bill_cus_Name2) :
                new ObjectParameter("bill_cus_Name2", typeof(string));
    
            var bill_cus_Name3Parameter = bill_cus_Name3 != null ?
                new ObjectParameter("bill_cus_Name3", bill_cus_Name3) :
                new ObjectParameter("bill_cus_Name3", typeof(string));
    
            var bill_cus_Name4Parameter = bill_cus_Name4 != null ?
                new ObjectParameter("bill_cus_Name4", bill_cus_Name4) :
                new ObjectParameter("bill_cus_Name4", typeof(string));
    
            var bill_cus_Gender1Parameter = bill_cus_Gender1 != null ?
                new ObjectParameter("bill_cus_Gender1", bill_cus_Gender1) :
                new ObjectParameter("bill_cus_Gender1", typeof(string));
    
            var bill_cus_Gender2Parameter = bill_cus_Gender2 != null ?
                new ObjectParameter("bill_cus_Gender2", bill_cus_Gender2) :
                new ObjectParameter("bill_cus_Gender2", typeof(string));
    
            var bill_cus_Gender3Parameter = bill_cus_Gender3 != null ?
                new ObjectParameter("bill_cus_Gender3", bill_cus_Gender3) :
                new ObjectParameter("bill_cus_Gender3", typeof(string));
    
            var bill_cus_Gender4Parameter = bill_cus_Gender4 != null ?
                new ObjectParameter("bill_cus_Gender4", bill_cus_Gender4) :
                new ObjectParameter("bill_cus_Gender4", typeof(string));
    
            var bill_cus_age1Parameter = bill_cus_age1 != null ?
                new ObjectParameter("bill_cus_age1", bill_cus_age1) :
                new ObjectParameter("bill_cus_age1", typeof(string));
    
            var bill_cus_age2Parameter = bill_cus_age2 != null ?
                new ObjectParameter("bill_cus_age2", bill_cus_age2) :
                new ObjectParameter("bill_cus_age2", typeof(string));
    
            var bill_cus_age3Parameter = bill_cus_age3 != null ?
                new ObjectParameter("bill_cus_age3", bill_cus_age3) :
                new ObjectParameter("bill_cus_age3", typeof(string));
    
            var bill_cus_age4Parameter = bill_cus_age4 != null ?
                new ObjectParameter("bill_cus_age4", bill_cus_age4) :
                new ObjectParameter("bill_cus_age4", typeof(string));
    
            var bill_cus_Allergies1Parameter = bill_cus_Allergies1 != null ?
                new ObjectParameter("bill_cus_Allergies1", bill_cus_Allergies1) :
                new ObjectParameter("bill_cus_Allergies1", typeof(string));
    
            var bill_cus_Allergies2Parameter = bill_cus_Allergies2 != null ?
                new ObjectParameter("bill_cus_Allergies2", bill_cus_Allergies2) :
                new ObjectParameter("bill_cus_Allergies2", typeof(string));
    
            var bill_cus_Allergies3Parameter = bill_cus_Allergies3 != null ?
                new ObjectParameter("bill_cus_Allergies3", bill_cus_Allergies3) :
                new ObjectParameter("bill_cus_Allergies3", typeof(string));
    
            var bill_cus_Allergies4Parameter = bill_cus_Allergies4 != null ?
                new ObjectParameter("bill_cus_Allergies4", bill_cus_Allergies4) :
                new ObjectParameter("bill_cus_Allergies4", typeof(string));
    
            var bill_cus_blood1Parameter = bill_cus_blood1 != null ?
                new ObjectParameter("bill_cus_blood1", bill_cus_blood1) :
                new ObjectParameter("bill_cus_blood1", typeof(string));
    
            var bill_cus_blood2Parameter = bill_cus_blood2 != null ?
                new ObjectParameter("bill_cus_blood2", bill_cus_blood2) :
                new ObjectParameter("bill_cus_blood2", typeof(string));
    
            var bill_cus_blood3Parameter = bill_cus_blood3 != null ?
                new ObjectParameter("bill_cus_blood3", bill_cus_blood3) :
                new ObjectParameter("bill_cus_blood3", typeof(string));
    
            var bill_cus_blood4Parameter = bill_cus_blood4 != null ?
                new ObjectParameter("bill_cus_blood4", bill_cus_blood4) :
                new ObjectParameter("bill_cus_blood4", typeof(string));
    
            var bill_cus_phone1Parameter = bill_cus_phone1 != null ?
                new ObjectParameter("bill_cus_phone1", bill_cus_phone1) :
                new ObjectParameter("bill_cus_phone1", typeof(string));
    
            var bill_cus_phone2Parameter = bill_cus_phone2 != null ?
                new ObjectParameter("bill_cus_phone2", bill_cus_phone2) :
                new ObjectParameter("bill_cus_phone2", typeof(string));
    
            var bill_cus_phone3Parameter = bill_cus_phone3 != null ?
                new ObjectParameter("bill_cus_phone3", bill_cus_phone3) :
                new ObjectParameter("bill_cus_phone3", typeof(string));
    
            var bill_cus_phone4Parameter = bill_cus_phone4 != null ?
                new ObjectParameter("bill_cus_phone4", bill_cus_phone4) :
                new ObjectParameter("bill_cus_phone4", typeof(string));
    
            var bill_cus_email1Parameter = bill_cus_email1 != null ?
                new ObjectParameter("bill_cus_email1", bill_cus_email1) :
                new ObjectParameter("bill_cus_email1", typeof(string));
    
            var bill_cus_email2Parameter = bill_cus_email2 != null ?
                new ObjectParameter("bill_cus_email2", bill_cus_email2) :
                new ObjectParameter("bill_cus_email2", typeof(string));
    
            var bill_cus_email3Parameter = bill_cus_email3 != null ?
                new ObjectParameter("bill_cus_email3", bill_cus_email3) :
                new ObjectParameter("bill_cus_email3", typeof(string));
    
            var bill_cus_email4Parameter = bill_cus_email4 != null ?
                new ObjectParameter("bill_cus_email4", bill_cus_email4) :
                new ObjectParameter("bill_cus_email4", typeof(string));
    
            var bill_cus_addressParameter = bill_cus_address != null ?
                new ObjectParameter("bill_cus_address", bill_cus_address) :
                new ObjectParameter("bill_cus_address", typeof(string));
    
            var bill_cus_pincodeParameter = bill_cus_pincode != null ?
                new ObjectParameter("bill_cus_pincode", bill_cus_pincode) :
                new ObjectParameter("bill_cus_pincode", typeof(string));
    
            var bill_cus_cityParameter = bill_cus_city != null ?
                new ObjectParameter("bill_cus_city", bill_cus_city) :
                new ObjectParameter("bill_cus_city", typeof(string));
    
            var bill_cus_stateParameter = bill_cus_state != null ?
                new ObjectParameter("bill_cus_state", bill_cus_state) :
                new ObjectParameter("bill_cus_state", typeof(string));
    
            var bill_cus_countryParameter = bill_cus_country != null ?
                new ObjectParameter("bill_cus_country", bill_cus_country) :
                new ObjectParameter("bill_cus_country", typeof(string));
    
            var delivery_cust_nameParameter = delivery_cust_name != null ?
                new ObjectParameter("delivery_cust_name", delivery_cust_name) :
                new ObjectParameter("delivery_cust_name", typeof(string));
    
            var delivery_cust_addressParameter = delivery_cust_address != null ?
                new ObjectParameter("delivery_cust_address", delivery_cust_address) :
                new ObjectParameter("delivery_cust_address", typeof(string));
    
            var del_cus_pincodeParameter = del_cus_pincode != null ?
                new ObjectParameter("del_cus_pincode", del_cus_pincode) :
                new ObjectParameter("del_cus_pincode", typeof(string));
    
            var del_cus_cityParameter = del_cus_city != null ?
                new ObjectParameter("del_cus_city", del_cus_city) :
                new ObjectParameter("del_cus_city", typeof(string));
    
            var del_cus_stateParameter = del_cus_state != null ?
                new ObjectParameter("del_cus_state", del_cus_state) :
                new ObjectParameter("del_cus_state", typeof(string));
    
            var del_cus_countryParameter = del_cus_country != null ?
                new ObjectParameter("del_cus_country", del_cus_country) :
                new ObjectParameter("del_cus_country", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(string));
    
            var bill_cus_NameParameter = bill_cus_Name != null ?
                new ObjectParameter("bill_cus_Name", bill_cus_Name) :
                new ObjectParameter("bill_cus_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertPGFamialy", order_idParameter, bill_cus_Name1Parameter, bill_cus_Name2Parameter, bill_cus_Name3Parameter, bill_cus_Name4Parameter, bill_cus_Gender1Parameter, bill_cus_Gender2Parameter, bill_cus_Gender3Parameter, bill_cus_Gender4Parameter, bill_cus_age1Parameter, bill_cus_age2Parameter, bill_cus_age3Parameter, bill_cus_age4Parameter, bill_cus_Allergies1Parameter, bill_cus_Allergies2Parameter, bill_cus_Allergies3Parameter, bill_cus_Allergies4Parameter, bill_cus_blood1Parameter, bill_cus_blood2Parameter, bill_cus_blood3Parameter, bill_cus_blood4Parameter, bill_cus_phone1Parameter, bill_cus_phone2Parameter, bill_cus_phone3Parameter, bill_cus_phone4Parameter, bill_cus_email1Parameter, bill_cus_email2Parameter, bill_cus_email3Parameter, bill_cus_email4Parameter, bill_cus_addressParameter, bill_cus_pincodeParameter, bill_cus_cityParameter, bill_cus_stateParameter, bill_cus_countryParameter, delivery_cust_nameParameter, delivery_cust_addressParameter, del_cus_pincodeParameter, del_cus_cityParameter, del_cus_stateParameter, del_cus_countryParameter, amountParameter, bill_cus_NameParameter);
        }
    
        public virtual int usp_InsertPGIndividual(string order_id, string name, string blood_group, string allergies, string gender, string marital_status, string age, string amount, string address, string pincode, string country, string state, string city, string phone_no, string email, string delivery_cust_name, string delivery_cust_address, string delivery_pincode, string delivery_country, string delivery_state, string delivery_city, string bill_cus_Name, Nullable<int> mem_type)
        {
            var order_idParameter = order_id != null ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var blood_groupParameter = blood_group != null ?
                new ObjectParameter("blood_group", blood_group) :
                new ObjectParameter("blood_group", typeof(string));
    
            var allergiesParameter = allergies != null ?
                new ObjectParameter("allergies", allergies) :
                new ObjectParameter("allergies", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var marital_statusParameter = marital_status != null ?
                new ObjectParameter("marital_status", marital_status) :
                new ObjectParameter("marital_status", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var delivery_cust_nameParameter = delivery_cust_name != null ?
                new ObjectParameter("delivery_cust_name", delivery_cust_name) :
                new ObjectParameter("delivery_cust_name", typeof(string));
    
            var delivery_cust_addressParameter = delivery_cust_address != null ?
                new ObjectParameter("delivery_cust_address", delivery_cust_address) :
                new ObjectParameter("delivery_cust_address", typeof(string));
    
            var delivery_pincodeParameter = delivery_pincode != null ?
                new ObjectParameter("delivery_pincode", delivery_pincode) :
                new ObjectParameter("delivery_pincode", typeof(string));
    
            var delivery_countryParameter = delivery_country != null ?
                new ObjectParameter("delivery_country", delivery_country) :
                new ObjectParameter("delivery_country", typeof(string));
    
            var delivery_stateParameter = delivery_state != null ?
                new ObjectParameter("delivery_state", delivery_state) :
                new ObjectParameter("delivery_state", typeof(string));
    
            var delivery_cityParameter = delivery_city != null ?
                new ObjectParameter("delivery_city", delivery_city) :
                new ObjectParameter("delivery_city", typeof(string));
    
            var bill_cus_NameParameter = bill_cus_Name != null ?
                new ObjectParameter("bill_cus_Name", bill_cus_Name) :
                new ObjectParameter("bill_cus_Name", typeof(string));
    
            var mem_typeParameter = mem_type.HasValue ?
                new ObjectParameter("Mem_type", mem_type) :
                new ObjectParameter("Mem_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertPGIndividual", order_idParameter, nameParameter, blood_groupParameter, allergiesParameter, genderParameter, marital_statusParameter, ageParameter, amountParameter, addressParameter, pincodeParameter, countryParameter, stateParameter, cityParameter, phone_noParameter, emailParameter, delivery_cust_nameParameter, delivery_cust_addressParameter, delivery_pincodeParameter, delivery_countryParameter, delivery_stateParameter, delivery_cityParameter, bill_cus_NameParameter, mem_typeParameter);
        }
    
        public virtual int usp_InsertPGIndividual1(string order_id, string name, string blood_group, string allergies, string gender, string marital_status, string age, string amount, string address, string pincode, string country, string state, string city, string phone_no, string email, string delivery_cust_name, string delivery_cust_address, string delivery_pincode, string delivery_country, string delivery_state, string delivery_city, string bill_cus_Name, Nullable<int> mem_type, string vcUsername, string code4disc)
        {
            var order_idParameter = order_id != null ?
                new ObjectParameter("order_id", order_id) :
                new ObjectParameter("order_id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var blood_groupParameter = blood_group != null ?
                new ObjectParameter("blood_group", blood_group) :
                new ObjectParameter("blood_group", typeof(string));
    
            var allergiesParameter = allergies != null ?
                new ObjectParameter("allergies", allergies) :
                new ObjectParameter("allergies", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var marital_statusParameter = marital_status != null ?
                new ObjectParameter("marital_status", marital_status) :
                new ObjectParameter("marital_status", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(string));
    
            var amountParameter = amount != null ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var phone_noParameter = phone_no != null ?
                new ObjectParameter("phone_no", phone_no) :
                new ObjectParameter("phone_no", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var delivery_cust_nameParameter = delivery_cust_name != null ?
                new ObjectParameter("delivery_cust_name", delivery_cust_name) :
                new ObjectParameter("delivery_cust_name", typeof(string));
    
            var delivery_cust_addressParameter = delivery_cust_address != null ?
                new ObjectParameter("delivery_cust_address", delivery_cust_address) :
                new ObjectParameter("delivery_cust_address", typeof(string));
    
            var delivery_pincodeParameter = delivery_pincode != null ?
                new ObjectParameter("delivery_pincode", delivery_pincode) :
                new ObjectParameter("delivery_pincode", typeof(string));
    
            var delivery_countryParameter = delivery_country != null ?
                new ObjectParameter("delivery_country", delivery_country) :
                new ObjectParameter("delivery_country", typeof(string));
    
            var delivery_stateParameter = delivery_state != null ?
                new ObjectParameter("delivery_state", delivery_state) :
                new ObjectParameter("delivery_state", typeof(string));
    
            var delivery_cityParameter = delivery_city != null ?
                new ObjectParameter("delivery_city", delivery_city) :
                new ObjectParameter("delivery_city", typeof(string));
    
            var bill_cus_NameParameter = bill_cus_Name != null ?
                new ObjectParameter("bill_cus_Name", bill_cus_Name) :
                new ObjectParameter("bill_cus_Name", typeof(string));
    
            var mem_typeParameter = mem_type.HasValue ?
                new ObjectParameter("Mem_type", mem_type) :
                new ObjectParameter("Mem_type", typeof(int));
    
            var vcUsernameParameter = vcUsername != null ?
                new ObjectParameter("vcUsername", vcUsername) :
                new ObjectParameter("vcUsername", typeof(string));
    
            var code4discParameter = code4disc != null ?
                new ObjectParameter("Code4disc", code4disc) :
                new ObjectParameter("Code4disc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertPGIndividual1", order_idParameter, nameParameter, blood_groupParameter, allergiesParameter, genderParameter, marital_statusParameter, ageParameter, amountParameter, addressParameter, pincodeParameter, countryParameter, stateParameter, cityParameter, phone_noParameter, emailParameter, delivery_cust_nameParameter, delivery_cust_addressParameter, delivery_pincodeParameter, delivery_countryParameter, delivery_stateParameter, delivery_cityParameter, bill_cus_NameParameter, mem_typeParameter, vcUsernameParameter, code4discParameter);
        }
    
        public virtual int usp_Insertrating(string doctorname, string review, string reviews_name, Nullable<double> firstrating_value, Nullable<double> secondrating_value, Nullable<double> thirdrating_vlaue, Nullable<double> fourthrating_value, Nullable<double> fivthrating_value, Nullable<double> totalrating_value, string doc_firstname, string doc_middlename, string doc_lastname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("Doctorname", doctorname) :
                new ObjectParameter("Doctorname", typeof(string));
    
            var reviewParameter = review != null ?
                new ObjectParameter("Review", review) :
                new ObjectParameter("Review", typeof(string));
    
            var reviews_nameParameter = reviews_name != null ?
                new ObjectParameter("Reviews_name", reviews_name) :
                new ObjectParameter("Reviews_name", typeof(string));
    
            var firstrating_valueParameter = firstrating_value.HasValue ?
                new ObjectParameter("firstrating_value", firstrating_value) :
                new ObjectParameter("firstrating_value", typeof(double));
    
            var secondrating_valueParameter = secondrating_value.HasValue ?
                new ObjectParameter("secondrating_value", secondrating_value) :
                new ObjectParameter("secondrating_value", typeof(double));
    
            var thirdrating_vlaueParameter = thirdrating_vlaue.HasValue ?
                new ObjectParameter("thirdrating_vlaue", thirdrating_vlaue) :
                new ObjectParameter("thirdrating_vlaue", typeof(double));
    
            var fourthrating_valueParameter = fourthrating_value.HasValue ?
                new ObjectParameter("fourthrating_value", fourthrating_value) :
                new ObjectParameter("fourthrating_value", typeof(double));
    
            var fivthrating_valueParameter = fivthrating_value.HasValue ?
                new ObjectParameter("fivthrating_value", fivthrating_value) :
                new ObjectParameter("fivthrating_value", typeof(double));
    
            var totalrating_valueParameter = totalrating_value.HasValue ?
                new ObjectParameter("totalrating_value", totalrating_value) :
                new ObjectParameter("totalrating_value", typeof(double));
    
            var doc_firstnameParameter = doc_firstname != null ?
                new ObjectParameter("doc_firstname", doc_firstname) :
                new ObjectParameter("doc_firstname", typeof(string));
    
            var doc_middlenameParameter = doc_middlename != null ?
                new ObjectParameter("doc_middlename", doc_middlename) :
                new ObjectParameter("doc_middlename", typeof(string));
    
            var doc_lastnameParameter = doc_lastname != null ?
                new ObjectParameter("doc_lastname", doc_lastname) :
                new ObjectParameter("doc_lastname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insertrating", doctornameParameter, reviewParameter, reviews_nameParameter, firstrating_valueParameter, secondrating_valueParameter, thirdrating_vlaueParameter, fourthrating_valueParameter, fivthrating_valueParameter, totalrating_valueParameter, doc_firstnameParameter, doc_middlenameParameter, doc_lastnameParameter);
        }
    
        public virtual ObjectResult<string> usp_Insurance(string id, string mode, string vcqueryid, string fname, Nullable<System.DateTime> dOB, string email, string mobile, string gender, string state, string city, string insutype, string memberscovered)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            var vcqueryidParameter = vcqueryid != null ?
                new ObjectParameter("vcqueryid", vcqueryid) :
                new ObjectParameter("vcqueryid", typeof(string));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var insutypeParameter = insutype != null ?
                new ObjectParameter("Insutype", insutype) :
                new ObjectParameter("Insutype", typeof(string));
    
            var memberscoveredParameter = memberscovered != null ?
                new ObjectParameter("Memberscovered", memberscovered) :
                new ObjectParameter("Memberscovered", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Insurance", idParameter, modeParameter, vcqueryidParameter, fnameParameter, dOBParameter, emailParameter, mobileParameter, genderParameter, stateParameter, cityParameter, insutypeParameter, memberscoveredParameter);
        }
    
        public virtual ObjectResult<string> usp_Organization(string keyword, string vcusername, string org_id, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Organization", keywordParameter, vcusernameParameter, org_idParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_OrgforReg_Result> usp_OrgforReg(string keyword, string org_id, string svcid, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var org_idParameter = org_id != null ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(string));
    
            var svcidParameter = svcid != null ?
                new ObjectParameter("Svcid", svcid) :
                new ObjectParameter("Svcid", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OrgforReg_Result>("usp_OrgforReg", keywordParameter, org_idParameter, svcidParameter, modeParameter);
        }
    
        public virtual ObjectResult<usp_patGridFellow_Result> usp_patGridFellow(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_patGridFellow_Result>("usp_patGridFellow", vcUserNameParameter);
        }
    
        public virtual ObjectResult<usp_proccity_Result> usp_proccity(string procedure_name)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_proccity_Result>("usp_proccity", procedure_nameParameter);
        }
    
        public virtual ObjectResult<usp_procdoccity_Result> usp_procdoccity(string procedure_name)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_procdoccity_Result>("usp_procdoccity", procedure_nameParameter);
        }
    
        public virtual int usp_procforaspx(string keyword, string id, string cond, string mode)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var condParameter = cond != null ?
                new ObjectParameter("cond", cond) :
                new ObjectParameter("cond", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_procforaspx", keywordParameter, idParameter, condParameter, modeParameter);
        }
    
        public virtual ObjectResult<string> usp_procname()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_procname");
        }
    
        public virtual ObjectResult<usp_ProcNameCode_Result> usp_ProcNameCode(string procedure_name)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProcNameCode_Result>("usp_ProcNameCode", procedure_nameParameter);
        }
    
        public virtual int usp_QryInsertAskQuery(string vcPatientId, string vcQueryId, string vcMemberName, string vcUserName, string vcSubject, string vcQuery, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, Nullable<bool> btIsPackage, Nullable<bool> btIsDiagnostic, Nullable<bool> btIsAppiontment, Nullable<bool> btIsOther, Nullable<bool> btIsApprove, string vcQueryStatus, Nullable<bool> btIsAssignDeptt, string vcAssignDeptt, string vcPaidProviderId, string vcProviderId, string vcPackageName, string vcDiagnosticName, string vcOtherType, string vcDocAppointment, string vcPointId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcSubjectParameter = vcSubject != null ?
                new ObjectParameter("vcSubject", vcSubject) :
                new ObjectParameter("vcSubject", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var btIsPackageParameter = btIsPackage.HasValue ?
                new ObjectParameter("btIsPackage", btIsPackage) :
                new ObjectParameter("btIsPackage", typeof(bool));
    
            var btIsDiagnosticParameter = btIsDiagnostic.HasValue ?
                new ObjectParameter("btIsDiagnostic", btIsDiagnostic) :
                new ObjectParameter("btIsDiagnostic", typeof(bool));
    
            var btIsAppiontmentParameter = btIsAppiontment.HasValue ?
                new ObjectParameter("btIsAppiontment", btIsAppiontment) :
                new ObjectParameter("btIsAppiontment", typeof(bool));
    
            var btIsOtherParameter = btIsOther.HasValue ?
                new ObjectParameter("btIsOther", btIsOther) :
                new ObjectParameter("btIsOther", typeof(bool));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var vcQueryStatusParameter = vcQueryStatus != null ?
                new ObjectParameter("vcQueryStatus", vcQueryStatus) :
                new ObjectParameter("vcQueryStatus", typeof(string));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            var vcPaidProviderIdParameter = vcPaidProviderId != null ?
                new ObjectParameter("vcPaidProviderId", vcPaidProviderId) :
                new ObjectParameter("vcPaidProviderId", typeof(string));
    
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcPackageNameParameter = vcPackageName != null ?
                new ObjectParameter("vcPackageName", vcPackageName) :
                new ObjectParameter("vcPackageName", typeof(string));
    
            var vcDiagnosticNameParameter = vcDiagnosticName != null ?
                new ObjectParameter("vcDiagnosticName", vcDiagnosticName) :
                new ObjectParameter("vcDiagnosticName", typeof(string));
    
            var vcOtherTypeParameter = vcOtherType != null ?
                new ObjectParameter("vcOtherType", vcOtherType) :
                new ObjectParameter("vcOtherType", typeof(string));
    
            var vcDocAppointmentParameter = vcDocAppointment != null ?
                new ObjectParameter("vcDocAppointment", vcDocAppointment) :
                new ObjectParameter("vcDocAppointment", typeof(string));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QryInsertAskQuery", vcPatientIdParameter, vcQueryIdParameter, vcMemberNameParameter, vcUserNameParameter, vcSubjectParameter, vcQueryParameter, vcUpdatedByParameter, dtUpdationDateParameter, btIsPackageParameter, btIsDiagnosticParameter, btIsAppiontmentParameter, btIsOtherParameter, btIsApproveParameter, vcQueryStatusParameter, btIsAssignDepttParameter, vcAssignDepttParameter, vcPaidProviderIdParameter, vcProviderIdParameter, vcPackageNameParameter, vcDiagnosticNameParameter, vcOtherTypeParameter, vcDocAppointmentParameter, vcPointIdParameter);
        }
    
        public virtual int usp_QryInsertAskQuery_Appt(string vcPatientId, string vcQueryId, string vcMemberName, string vcUserName, string vcSubject, string vcQuery, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, Nullable<bool> btIsPackage, Nullable<bool> btIsDiagnostic, Nullable<bool> btIsAppiontment, Nullable<bool> btIsOther, Nullable<bool> btIsApprove, string vcQueryStatus, Nullable<bool> btIsAssignDeptt, string vcAssignDeptt, string vcPaidProviderId, string vcProviderId, string vcPackageName, string vcDiagnosticName, string vcOtherType, string vcDocAppointment, string vcPointId, Nullable<System.DateTime> date_Appt, string vcAppt_prov, string vcCardMemId, string vcOrderId)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcSubjectParameter = vcSubject != null ?
                new ObjectParameter("vcSubject", vcSubject) :
                new ObjectParameter("vcSubject", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var btIsPackageParameter = btIsPackage.HasValue ?
                new ObjectParameter("btIsPackage", btIsPackage) :
                new ObjectParameter("btIsPackage", typeof(bool));
    
            var btIsDiagnosticParameter = btIsDiagnostic.HasValue ?
                new ObjectParameter("btIsDiagnostic", btIsDiagnostic) :
                new ObjectParameter("btIsDiagnostic", typeof(bool));
    
            var btIsAppiontmentParameter = btIsAppiontment.HasValue ?
                new ObjectParameter("btIsAppiontment", btIsAppiontment) :
                new ObjectParameter("btIsAppiontment", typeof(bool));
    
            var btIsOtherParameter = btIsOther.HasValue ?
                new ObjectParameter("btIsOther", btIsOther) :
                new ObjectParameter("btIsOther", typeof(bool));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var vcQueryStatusParameter = vcQueryStatus != null ?
                new ObjectParameter("vcQueryStatus", vcQueryStatus) :
                new ObjectParameter("vcQueryStatus", typeof(string));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            var vcPaidProviderIdParameter = vcPaidProviderId != null ?
                new ObjectParameter("vcPaidProviderId", vcPaidProviderId) :
                new ObjectParameter("vcPaidProviderId", typeof(string));
    
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcPackageNameParameter = vcPackageName != null ?
                new ObjectParameter("vcPackageName", vcPackageName) :
                new ObjectParameter("vcPackageName", typeof(string));
    
            var vcDiagnosticNameParameter = vcDiagnosticName != null ?
                new ObjectParameter("vcDiagnosticName", vcDiagnosticName) :
                new ObjectParameter("vcDiagnosticName", typeof(string));
    
            var vcOtherTypeParameter = vcOtherType != null ?
                new ObjectParameter("vcOtherType", vcOtherType) :
                new ObjectParameter("vcOtherType", typeof(string));
    
            var vcDocAppointmentParameter = vcDocAppointment != null ?
                new ObjectParameter("vcDocAppointment", vcDocAppointment) :
                new ObjectParameter("vcDocAppointment", typeof(string));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            var date_ApptParameter = date_Appt.HasValue ?
                new ObjectParameter("date_Appt", date_Appt) :
                new ObjectParameter("date_Appt", typeof(System.DateTime));
    
            var vcAppt_provParameter = vcAppt_prov != null ?
                new ObjectParameter("vcAppt_prov", vcAppt_prov) :
                new ObjectParameter("vcAppt_prov", typeof(string));
    
            var vcCardMemIdParameter = vcCardMemId != null ?
                new ObjectParameter("vcCardMemId", vcCardMemId) :
                new ObjectParameter("vcCardMemId", typeof(string));
    
            var vcOrderIdParameter = vcOrderId != null ?
                new ObjectParameter("vcOrderId", vcOrderId) :
                new ObjectParameter("vcOrderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QryInsertAskQuery_Appt", vcPatientIdParameter, vcQueryIdParameter, vcMemberNameParameter, vcUserNameParameter, vcSubjectParameter, vcQueryParameter, vcUpdatedByParameter, dtUpdationDateParameter, btIsPackageParameter, btIsDiagnosticParameter, btIsAppiontmentParameter, btIsOtherParameter, btIsApproveParameter, vcQueryStatusParameter, btIsAssignDepttParameter, vcAssignDepttParameter, vcPaidProviderIdParameter, vcProviderIdParameter, vcPackageNameParameter, vcDiagnosticNameParameter, vcOtherTypeParameter, vcDocAppointmentParameter, vcPointIdParameter, date_ApptParameter, vcAppt_provParameter, vcCardMemIdParameter, vcOrderIdParameter);
        }
    
        public virtual int usp_QryInsertAskQueryHCL(string vcPatientId, string vcQueryId, string vcMemberName, string vcUserName, string vcSubject, string vcQuery, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, Nullable<bool> btIsPackage, Nullable<bool> btIsDiagnostic, Nullable<bool> btIsAppiontment, Nullable<bool> btIsOther, Nullable<bool> btIsApprove, string vcQueryStatus, Nullable<bool> btIsAssignDeptt, string vcAssignDeptt, string vcPaidProviderId, string vcProviderId, string vcPackageName, string vcDiagnosticName, string vcOtherType, string vcDocAppointment, string vcPointId, string vccompany)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcSubjectParameter = vcSubject != null ?
                new ObjectParameter("vcSubject", vcSubject) :
                new ObjectParameter("vcSubject", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var btIsPackageParameter = btIsPackage.HasValue ?
                new ObjectParameter("btIsPackage", btIsPackage) :
                new ObjectParameter("btIsPackage", typeof(bool));
    
            var btIsDiagnosticParameter = btIsDiagnostic.HasValue ?
                new ObjectParameter("btIsDiagnostic", btIsDiagnostic) :
                new ObjectParameter("btIsDiagnostic", typeof(bool));
    
            var btIsAppiontmentParameter = btIsAppiontment.HasValue ?
                new ObjectParameter("btIsAppiontment", btIsAppiontment) :
                new ObjectParameter("btIsAppiontment", typeof(bool));
    
            var btIsOtherParameter = btIsOther.HasValue ?
                new ObjectParameter("btIsOther", btIsOther) :
                new ObjectParameter("btIsOther", typeof(bool));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var vcQueryStatusParameter = vcQueryStatus != null ?
                new ObjectParameter("vcQueryStatus", vcQueryStatus) :
                new ObjectParameter("vcQueryStatus", typeof(string));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            var vcPaidProviderIdParameter = vcPaidProviderId != null ?
                new ObjectParameter("vcPaidProviderId", vcPaidProviderId) :
                new ObjectParameter("vcPaidProviderId", typeof(string));
    
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcPackageNameParameter = vcPackageName != null ?
                new ObjectParameter("vcPackageName", vcPackageName) :
                new ObjectParameter("vcPackageName", typeof(string));
    
            var vcDiagnosticNameParameter = vcDiagnosticName != null ?
                new ObjectParameter("vcDiagnosticName", vcDiagnosticName) :
                new ObjectParameter("vcDiagnosticName", typeof(string));
    
            var vcOtherTypeParameter = vcOtherType != null ?
                new ObjectParameter("vcOtherType", vcOtherType) :
                new ObjectParameter("vcOtherType", typeof(string));
    
            var vcDocAppointmentParameter = vcDocAppointment != null ?
                new ObjectParameter("vcDocAppointment", vcDocAppointment) :
                new ObjectParameter("vcDocAppointment", typeof(string));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            var vccompanyParameter = vccompany != null ?
                new ObjectParameter("vccompany", vccompany) :
                new ObjectParameter("vccompany", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QryInsertAskQueryHCL", vcPatientIdParameter, vcQueryIdParameter, vcMemberNameParameter, vcUserNameParameter, vcSubjectParameter, vcQueryParameter, vcUpdatedByParameter, dtUpdationDateParameter, btIsPackageParameter, btIsDiagnosticParameter, btIsAppiontmentParameter, btIsOtherParameter, btIsApproveParameter, vcQueryStatusParameter, btIsAssignDepttParameter, vcAssignDepttParameter, vcPaidProviderIdParameter, vcProviderIdParameter, vcPackageNameParameter, vcDiagnosticNameParameter, vcOtherTypeParameter, vcDocAppointmentParameter, vcPointIdParameter, vccompanyParameter);
        }
    
        public virtual int usp_QryInsertAskQueryOffers(string vcPatientId, string vcQueryId, string vcMemberName, string vcUserName, string vcSubject, string vcQuery, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, Nullable<bool> btIsPackage, Nullable<bool> btIsDiagnostic, Nullable<bool> btIsAppiontment, Nullable<bool> btIsOther, Nullable<bool> btIsApprove, string vcQueryStatus, Nullable<bool> btIsAssignDeptt, string vcAssignDeptt, string vcPaidProviderId, string vcProviderId, string vcPackageName, string vcDiagnosticName, string vcOtherType, string vcDocAppointment, string vcPointId, Nullable<bool> insNeeded, Nullable<bool> healtServNeeded, Nullable<bool> overSeastretmnt)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcSubjectParameter = vcSubject != null ?
                new ObjectParameter("vcSubject", vcSubject) :
                new ObjectParameter("vcSubject", typeof(string));
    
            var vcQueryParameter = vcQuery != null ?
                new ObjectParameter("vcQuery", vcQuery) :
                new ObjectParameter("vcQuery", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var btIsPackageParameter = btIsPackage.HasValue ?
                new ObjectParameter("btIsPackage", btIsPackage) :
                new ObjectParameter("btIsPackage", typeof(bool));
    
            var btIsDiagnosticParameter = btIsDiagnostic.HasValue ?
                new ObjectParameter("btIsDiagnostic", btIsDiagnostic) :
                new ObjectParameter("btIsDiagnostic", typeof(bool));
    
            var btIsAppiontmentParameter = btIsAppiontment.HasValue ?
                new ObjectParameter("btIsAppiontment", btIsAppiontment) :
                new ObjectParameter("btIsAppiontment", typeof(bool));
    
            var btIsOtherParameter = btIsOther.HasValue ?
                new ObjectParameter("btIsOther", btIsOther) :
                new ObjectParameter("btIsOther", typeof(bool));
    
            var btIsApproveParameter = btIsApprove.HasValue ?
                new ObjectParameter("btIsApprove", btIsApprove) :
                new ObjectParameter("btIsApprove", typeof(bool));
    
            var vcQueryStatusParameter = vcQueryStatus != null ?
                new ObjectParameter("vcQueryStatus", vcQueryStatus) :
                new ObjectParameter("vcQueryStatus", typeof(string));
    
            var btIsAssignDepttParameter = btIsAssignDeptt.HasValue ?
                new ObjectParameter("btIsAssignDeptt", btIsAssignDeptt) :
                new ObjectParameter("btIsAssignDeptt", typeof(bool));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            var vcPaidProviderIdParameter = vcPaidProviderId != null ?
                new ObjectParameter("vcPaidProviderId", vcPaidProviderId) :
                new ObjectParameter("vcPaidProviderId", typeof(string));
    
            var vcProviderIdParameter = vcProviderId != null ?
                new ObjectParameter("vcProviderId", vcProviderId) :
                new ObjectParameter("vcProviderId", typeof(string));
    
            var vcPackageNameParameter = vcPackageName != null ?
                new ObjectParameter("vcPackageName", vcPackageName) :
                new ObjectParameter("vcPackageName", typeof(string));
    
            var vcDiagnosticNameParameter = vcDiagnosticName != null ?
                new ObjectParameter("vcDiagnosticName", vcDiagnosticName) :
                new ObjectParameter("vcDiagnosticName", typeof(string));
    
            var vcOtherTypeParameter = vcOtherType != null ?
                new ObjectParameter("vcOtherType", vcOtherType) :
                new ObjectParameter("vcOtherType", typeof(string));
    
            var vcDocAppointmentParameter = vcDocAppointment != null ?
                new ObjectParameter("vcDocAppointment", vcDocAppointment) :
                new ObjectParameter("vcDocAppointment", typeof(string));
    
            var vcPointIdParameter = vcPointId != null ?
                new ObjectParameter("vcPointId", vcPointId) :
                new ObjectParameter("vcPointId", typeof(string));
    
            var insNeededParameter = insNeeded.HasValue ?
                new ObjectParameter("InsNeeded", insNeeded) :
                new ObjectParameter("InsNeeded", typeof(bool));
    
            var healtServNeededParameter = healtServNeeded.HasValue ?
                new ObjectParameter("HealtServNeeded", healtServNeeded) :
                new ObjectParameter("HealtServNeeded", typeof(bool));
    
            var overSeastretmntParameter = overSeastretmnt.HasValue ?
                new ObjectParameter("OverSeastretmnt", overSeastretmnt) :
                new ObjectParameter("OverSeastretmnt", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QryInsertAskQueryOffers", vcPatientIdParameter, vcQueryIdParameter, vcMemberNameParameter, vcUserNameParameter, vcSubjectParameter, vcQueryParameter, vcUpdatedByParameter, dtUpdationDateParameter, btIsPackageParameter, btIsDiagnosticParameter, btIsAppiontmentParameter, btIsOtherParameter, btIsApproveParameter, vcQueryStatusParameter, btIsAssignDepttParameter, vcAssignDepttParameter, vcPaidProviderIdParameter, vcProviderIdParameter, vcPackageNameParameter, vcDiagnosticNameParameter, vcOtherTypeParameter, vcDocAppointmentParameter, vcPointIdParameter, insNeededParameter, healtServNeededParameter, overSeastretmntParameter);
        }
    
        public virtual int usp_QryInsertCompanyInfo(string vcPatientId, string vcMemberName, string vcPatientName, string vcPatientPhone, string vcPatientGender, string vcPatientAge, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcUserName, string vcRoleType, string vcPatientAddress, string vcPatientCity, string vcCountry, string vcTreatmentCity, Nullable<bool> btIsPaidQuery, string vcPatientOtherCity, Nullable<bool> btIsWeek, Nullable<bool> btIsMonth, Nullable<bool> btIsMore, string vccompany)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            var vcPatientGenderParameter = vcPatientGender != null ?
                new ObjectParameter("vcPatientGender", vcPatientGender) :
                new ObjectParameter("vcPatientGender", typeof(string));
    
            var vcPatientAgeParameter = vcPatientAge != null ?
                new ObjectParameter("vcPatientAge", vcPatientAge) :
                new ObjectParameter("vcPatientAge", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var vcPatientAddressParameter = vcPatientAddress != null ?
                new ObjectParameter("vcPatientAddress", vcPatientAddress) :
                new ObjectParameter("vcPatientAddress", typeof(string));
    
            var vcPatientCityParameter = vcPatientCity != null ?
                new ObjectParameter("vcPatientCity", vcPatientCity) :
                new ObjectParameter("vcPatientCity", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            var vcTreatmentCityParameter = vcTreatmentCity != null ?
                new ObjectParameter("vcTreatmentCity", vcTreatmentCity) :
                new ObjectParameter("vcTreatmentCity", typeof(string));
    
            var btIsPaidQueryParameter = btIsPaidQuery.HasValue ?
                new ObjectParameter("btIsPaidQuery", btIsPaidQuery) :
                new ObjectParameter("btIsPaidQuery", typeof(bool));
    
            var vcPatientOtherCityParameter = vcPatientOtherCity != null ?
                new ObjectParameter("vcPatientOtherCity", vcPatientOtherCity) :
                new ObjectParameter("vcPatientOtherCity", typeof(string));
    
            var btIsWeekParameter = btIsWeek.HasValue ?
                new ObjectParameter("btIsWeek", btIsWeek) :
                new ObjectParameter("btIsWeek", typeof(bool));
    
            var btIsMonthParameter = btIsMonth.HasValue ?
                new ObjectParameter("btIsMonth", btIsMonth) :
                new ObjectParameter("btIsMonth", typeof(bool));
    
            var btIsMoreParameter = btIsMore.HasValue ?
                new ObjectParameter("btIsMore", btIsMore) :
                new ObjectParameter("btIsMore", typeof(bool));
    
            var vccompanyParameter = vccompany != null ?
                new ObjectParameter("vccompany", vccompany) :
                new ObjectParameter("vccompany", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QryInsertCompanyInfo", vcPatientIdParameter, vcMemberNameParameter, vcPatientNameParameter, vcPatientPhoneParameter, vcPatientGenderParameter, vcPatientAgeParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcUserNameParameter, vcRoleTypeParameter, vcPatientAddressParameter, vcPatientCityParameter, vcCountryParameter, vcTreatmentCityParameter, btIsPaidQueryParameter, vcPatientOtherCityParameter, btIsWeekParameter, btIsMonthParameter, btIsMoreParameter, vccompanyParameter);
        }
    
        public virtual int usp_QryInsertPatientInfo(string vcPatientId, string vcMemberName, string vcPatientName, string vcPatientPhone, string vcPatientGender, string vcPatientAge, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcUserName, string vcRoleType, string vcPatientAddress, string vcPatientCity, string vcCountry, string vcTreatmentCity, Nullable<bool> btIsPaidQuery, string vcPatientOtherCity, Nullable<bool> btIsWeek, Nullable<bool> btIsMonth, Nullable<bool> btIsMore)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcMemberNameParameter = vcMemberName != null ?
                new ObjectParameter("vcMemberName", vcMemberName) :
                new ObjectParameter("vcMemberName", typeof(string));
    
            var vcPatientNameParameter = vcPatientName != null ?
                new ObjectParameter("vcPatientName", vcPatientName) :
                new ObjectParameter("vcPatientName", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            var vcPatientGenderParameter = vcPatientGender != null ?
                new ObjectParameter("vcPatientGender", vcPatientGender) :
                new ObjectParameter("vcPatientGender", typeof(string));
    
            var vcPatientAgeParameter = vcPatientAge != null ?
                new ObjectParameter("vcPatientAge", vcPatientAge) :
                new ObjectParameter("vcPatientAge", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            var vcRoleTypeParameter = vcRoleType != null ?
                new ObjectParameter("vcRoleType", vcRoleType) :
                new ObjectParameter("vcRoleType", typeof(string));
    
            var vcPatientAddressParameter = vcPatientAddress != null ?
                new ObjectParameter("vcPatientAddress", vcPatientAddress) :
                new ObjectParameter("vcPatientAddress", typeof(string));
    
            var vcPatientCityParameter = vcPatientCity != null ?
                new ObjectParameter("vcPatientCity", vcPatientCity) :
                new ObjectParameter("vcPatientCity", typeof(string));
    
            var vcCountryParameter = vcCountry != null ?
                new ObjectParameter("vcCountry", vcCountry) :
                new ObjectParameter("vcCountry", typeof(string));
    
            var vcTreatmentCityParameter = vcTreatmentCity != null ?
                new ObjectParameter("vcTreatmentCity", vcTreatmentCity) :
                new ObjectParameter("vcTreatmentCity", typeof(string));
    
            var btIsPaidQueryParameter = btIsPaidQuery.HasValue ?
                new ObjectParameter("btIsPaidQuery", btIsPaidQuery) :
                new ObjectParameter("btIsPaidQuery", typeof(bool));
    
            var vcPatientOtherCityParameter = vcPatientOtherCity != null ?
                new ObjectParameter("vcPatientOtherCity", vcPatientOtherCity) :
                new ObjectParameter("vcPatientOtherCity", typeof(string));
    
            var btIsWeekParameter = btIsWeek.HasValue ?
                new ObjectParameter("btIsWeek", btIsWeek) :
                new ObjectParameter("btIsWeek", typeof(bool));
    
            var btIsMonthParameter = btIsMonth.HasValue ?
                new ObjectParameter("btIsMonth", btIsMonth) :
                new ObjectParameter("btIsMonth", typeof(bool));
    
            var btIsMoreParameter = btIsMore.HasValue ?
                new ObjectParameter("btIsMore", btIsMore) :
                new ObjectParameter("btIsMore", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QryInsertPatientInfo", vcPatientIdParameter, vcMemberNameParameter, vcPatientNameParameter, vcPatientPhoneParameter, vcPatientGenderParameter, vcPatientAgeParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcUserNameParameter, vcRoleTypeParameter, vcPatientAddressParameter, vcPatientCityParameter, vcCountryParameter, vcTreatmentCityParameter, btIsPaidQueryParameter, vcPatientOtherCityParameter, btIsWeekParameter, btIsMonthParameter, btIsMoreParameter);
        }
    
        public virtual int usp_QryInsertTreatmentCity(string vcPatientId, string vcQueryId, string vcTreatmentCity1, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcTreatmentCity2, string vcTreatmentCity3)
        {
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcTreatmentCity1Parameter = vcTreatmentCity1 != null ?
                new ObjectParameter("vcTreatmentCity1", vcTreatmentCity1) :
                new ObjectParameter("vcTreatmentCity1", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcTreatmentCity2Parameter = vcTreatmentCity2 != null ?
                new ObjectParameter("vcTreatmentCity2", vcTreatmentCity2) :
                new ObjectParameter("vcTreatmentCity2", typeof(string));
    
            var vcTreatmentCity3Parameter = vcTreatmentCity3 != null ?
                new ObjectParameter("vcTreatmentCity3", vcTreatmentCity3) :
                new ObjectParameter("vcTreatmentCity3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_QryInsertTreatmentCity", vcPatientIdParameter, vcQueryIdParameter, vcTreatmentCity1Parameter, vcUpdatedByParameter, dtUpdationDateParameter, vcTreatmentCity2Parameter, vcTreatmentCity3Parameter);
        }
    
        public virtual ObjectResult<usp_QueryDeptt_Result> usp_QueryDeptt(string vcAssignDeptt)
        {
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueryDeptt_Result>("usp_QueryDeptt", vcAssignDepttParameter);
        }
    
        public virtual ObjectResult<USP_QueryMyDisscussion1_Result> USP_QueryMyDisscussion1(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QueryMyDisscussion1_Result>("USP_QueryMyDisscussion1", vcUserNameParameter);
        }
    
        public virtual ObjectResult<USP_QueryMyDisscussion2_Result> USP_QueryMyDisscussion2(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QueryMyDisscussion2_Result>("USP_QueryMyDisscussion2", vcUserNameParameter);
        }
    
        public virtual int USP_QueryMyDisscussion3(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_QueryMyDisscussion3", vcUserNameParameter);
        }
    
        public virtual ObjectResult<USP_QueryMyDisscussion4_Result> USP_QueryMyDisscussion4(string vcUserName)
        {
            var vcUserNameParameter = vcUserName != null ?
                new ObjectParameter("vcUserName", vcUserName) :
                new ObjectParameter("vcUserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_QueryMyDisscussion4_Result>("USP_QueryMyDisscussion4", vcUserNameParameter);
        }
    
        public virtual ObjectResult<usp_QueryPackage_Result> usp_QueryPackage(string vcPackageName)
        {
            var vcPackageNameParameter = vcPackageName != null ?
                new ObjectParameter("vcPackageName", vcPackageName) :
                new ObjectParameter("vcPackageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_QueryPackage_Result>("usp_QueryPackage", vcPackageNameParameter);
        }
    
        public virtual ObjectResult<string> usp_SelectCity(string procedure_name)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_SelectCity", procedure_nameParameter);
        }
    
        public virtual ObjectResult<string> usp_SelectDeptForHosp(string procedure_name, string city, string hos_id)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_SelectDeptForHosp", procedure_nameParameter, cityParameter, hos_idParameter);
        }
    
        public virtual ObjectResult<string> usp_selectDeptForProc(string procName)
        {
            var procNameParameter = procName != null ?
                new ObjectParameter("ProcName", procName) :
                new ObjectParameter("ProcName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_selectDeptForProc", procNameParameter);
        }
    
        public virtual ObjectResult<usp_SelectDocDept_Result> usp_SelectDocDept(string clinic_city, string category_name)
        {
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectDocDept_Result>("usp_SelectDocDept", clinic_cityParameter, category_nameParameter);
        }
    
        public virtual int usp_SelectDocForProc(string procedure_name, string city)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SelectDocForProc", procedure_nameParameter, cityParameter);
        }
    
        public virtual ObjectResult<usp_selectdoctordetail_Result> usp_selectdoctordetail(string doctorname)
        {
            var doctornameParameter = doctorname != null ?
                new ObjectParameter("doctorname", doctorname) :
                new ObjectParameter("doctorname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_selectdoctordetail_Result>("usp_selectdoctordetail", doctornameParameter);
        }
    
        public virtual ObjectResult<usp_SelectHosForProc_Result> usp_SelectHosForProc(string procedure_name, string city)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectHosForProc_Result>("usp_SelectHosForProc", procedure_nameParameter, cityParameter);
        }
    
        public virtual ObjectResult<usp_SelectHospConsultant_Result> usp_SelectHospConsultant(string hos_id, string specialization_name)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectHospConsultant_Result>("usp_SelectHospConsultant", hos_idParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<usp_selectHospDetail_Result> usp_selectHospDetail(string hos_id)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_selectHospDetail_Result>("usp_selectHospDetail", hos_idParameter);
        }
    
        public virtual ObjectResult<usp_SelectHospital_Result> usp_SelectHospital(string procedure_name, string city)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectHospital_Result>("usp_SelectHospital", procedure_nameParameter, cityParameter);
        }
    
        public virtual ObjectResult<usp_SelectHospital1_Result> usp_SelectHospital1(string procedure_name, string city, string specialization_name)
        {
            var procedure_nameParameter = procedure_name != null ?
                new ObjectParameter("procedure_name", procedure_name) :
                new ObjectParameter("procedure_name", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var specialization_nameParameter = specialization_name != null ?
                new ObjectParameter("specialization_name", specialization_name) :
                new ObjectParameter("specialization_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectHospital1_Result>("usp_SelectHospital1", procedure_nameParameter, cityParameter, specialization_nameParameter);
        }
    
        public virtual ObjectResult<usp_selectHospProc_Result> usp_selectHospProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_selectHospProc_Result>("usp_selectHospProc");
        }
    
        public virtual ObjectResult<string> usp_selectHospProc1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_selectHospProc1");
        }
    
        public virtual ObjectResult<usp_selectProcDesc_Result> usp_selectProcDesc(string speciality_name, string skill_name)
        {
            var speciality_nameParameter = speciality_name != null ?
                new ObjectParameter("speciality_name", speciality_name) :
                new ObjectParameter("speciality_name", typeof(string));
    
            var skill_nameParameter = skill_name != null ?
                new ObjectParameter("skill_name", skill_name) :
                new ObjectParameter("skill_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_selectProcDesc_Result>("usp_selectProcDesc", speciality_nameParameter, skill_nameParameter);
        }
    
        public virtual ObjectResult<usp_SpecializationMasterdetail_Result> usp_SpecializationMasterdetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SpecializationMasterdetail_Result>("usp_SpecializationMasterdetail");
        }
    
        public virtual ObjectResult<usp_topquery_Result> usp_topquery(string vcQueryId, string vcAssignDeptt)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcAssignDepttParameter = vcAssignDeptt != null ?
                new ObjectParameter("vcAssignDeptt", vcAssignDeptt) :
                new ObjectParameter("vcAssignDeptt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_topquery_Result>("usp_topquery", vcQueryIdParameter, vcAssignDepttParameter);
        }
    
        public virtual ObjectResult<usp_topquery1_Result> usp_topquery1(string vcusername)
        {
            var vcusernameParameter = vcusername != null ?
                new ObjectParameter("vcusername", vcusername) :
                new ObjectParameter("vcusername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_topquery1_Result>("usp_topquery1", vcusernameParameter);
        }
    
        public virtual ObjectResult<usp_topquery2_Result> usp_topquery2(string ddl_disease)
        {
            var ddl_diseaseParameter = ddl_disease != null ?
                new ObjectParameter("ddl_disease", ddl_disease) :
                new ObjectParameter("ddl_disease", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_topquery2_Result>("usp_topquery2", ddl_diseaseParameter);
        }
    
        public virtual ObjectResult<usp_topquery3_Result> usp_topquery3(string ddl_disease)
        {
            var ddl_diseaseParameter = ddl_disease != null ?
                new ObjectParameter("ddl_disease", ddl_disease) :
                new ObjectParameter("ddl_disease", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_topquery3_Result>("usp_topquery3", ddl_diseaseParameter);
        }
    
        public virtual ObjectResult<usp_topquery4_Result> usp_topquery4(string vcQueryId)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_topquery4_Result>("usp_topquery4", vcQueryIdParameter);
        }
    
        public virtual ObjectResult<usp_topquery5_Result> usp_topquery5(string vcQueryId, string vcDiseasename)
        {
            var vcQueryIdParameter = vcQueryId != null ?
                new ObjectParameter("vcQueryId", vcQueryId) :
                new ObjectParameter("vcQueryId", typeof(string));
    
            var vcDiseasenameParameter = vcDiseasename != null ?
                new ObjectParameter("vcDiseasename", vcDiseasename) :
                new ObjectParameter("vcDiseasename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_topquery5_Result>("usp_topquery5", vcQueryIdParameter, vcDiseasenameParameter);
        }
    
        public virtual int usp_updateComQus(Nullable<int> intIdToPost)
        {
            var intIdToPostParameter = intIdToPost.HasValue ?
                new ObjectParameter("intIdToPost", intIdToPost) :
                new ObjectParameter("intIdToPost", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_updateComQus", intIdToPostParameter);
        }
    
        public virtual int usp_UpdateDoctorResearchInterest(string doc_id, Nullable<bool> btClinicalResearch, Nullable<bool> btPreClinicalResearch, Nullable<bool> btOtherResearch, string vcOtherResearch, Nullable<bool> btUniversityFacility, Nullable<bool> btGeneralFacility, Nullable<bool> btPrimaryFacility, Nullable<bool> btOtherFacility, string vcOtherFacility, Nullable<bool> btPediatricPatient, Nullable<bool> btAdultPatient, Nullable<bool> btElderlyPatient, string vcClinicalStudies, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcExperienceDetails)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var btClinicalResearchParameter = btClinicalResearch.HasValue ?
                new ObjectParameter("btClinicalResearch", btClinicalResearch) :
                new ObjectParameter("btClinicalResearch", typeof(bool));
    
            var btPreClinicalResearchParameter = btPreClinicalResearch.HasValue ?
                new ObjectParameter("btPreClinicalResearch", btPreClinicalResearch) :
                new ObjectParameter("btPreClinicalResearch", typeof(bool));
    
            var btOtherResearchParameter = btOtherResearch.HasValue ?
                new ObjectParameter("btOtherResearch", btOtherResearch) :
                new ObjectParameter("btOtherResearch", typeof(bool));
    
            var vcOtherResearchParameter = vcOtherResearch != null ?
                new ObjectParameter("vcOtherResearch", vcOtherResearch) :
                new ObjectParameter("vcOtherResearch", typeof(string));
    
            var btUniversityFacilityParameter = btUniversityFacility.HasValue ?
                new ObjectParameter("btUniversityFacility", btUniversityFacility) :
                new ObjectParameter("btUniversityFacility", typeof(bool));
    
            var btGeneralFacilityParameter = btGeneralFacility.HasValue ?
                new ObjectParameter("btGeneralFacility", btGeneralFacility) :
                new ObjectParameter("btGeneralFacility", typeof(bool));
    
            var btPrimaryFacilityParameter = btPrimaryFacility.HasValue ?
                new ObjectParameter("btPrimaryFacility", btPrimaryFacility) :
                new ObjectParameter("btPrimaryFacility", typeof(bool));
    
            var btOtherFacilityParameter = btOtherFacility.HasValue ?
                new ObjectParameter("btOtherFacility", btOtherFacility) :
                new ObjectParameter("btOtherFacility", typeof(bool));
    
            var vcOtherFacilityParameter = vcOtherFacility != null ?
                new ObjectParameter("vcOtherFacility", vcOtherFacility) :
                new ObjectParameter("vcOtherFacility", typeof(string));
    
            var btPediatricPatientParameter = btPediatricPatient.HasValue ?
                new ObjectParameter("btPediatricPatient", btPediatricPatient) :
                new ObjectParameter("btPediatricPatient", typeof(bool));
    
            var btAdultPatientParameter = btAdultPatient.HasValue ?
                new ObjectParameter("btAdultPatient", btAdultPatient) :
                new ObjectParameter("btAdultPatient", typeof(bool));
    
            var btElderlyPatientParameter = btElderlyPatient.HasValue ?
                new ObjectParameter("btElderlyPatient", btElderlyPatient) :
                new ObjectParameter("btElderlyPatient", typeof(bool));
    
            var vcClinicalStudiesParameter = vcClinicalStudies != null ?
                new ObjectParameter("vcClinicalStudies", vcClinicalStudies) :
                new ObjectParameter("vcClinicalStudies", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcExperienceDetailsParameter = vcExperienceDetails != null ?
                new ObjectParameter("vcExperienceDetails", vcExperienceDetails) :
                new ObjectParameter("vcExperienceDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDoctorResearchInterest", doc_idParameter, btClinicalResearchParameter, btPreClinicalResearchParameter, btOtherResearchParameter, vcOtherResearchParameter, btUniversityFacilityParameter, btGeneralFacilityParameter, btPrimaryFacilityParameter, btOtherFacilityParameter, vcOtherFacilityParameter, btPediatricPatientParameter, btAdultPatientParameter, btElderlyPatientParameter, vcClinicalStudiesParameter, vcUpdatedByParameter, dtUpdationDateParameter, vcExperienceDetailsParameter);
        }
    
        public virtual int usp_UpdateDoctorWorkDetail(string doc_id, string clinic_address, string clinic_city, Nullable<bool> have_selfClinic, string clinic_phone, Nullable<decimal> no_of_beds, Nullable<bool> have_xray, Nullable<bool> have_ultrasound, Nullable<bool> credit_card_accepted, Nullable<bool> emergency_available, Nullable<bool> home_visit, string updated_by)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var have_selfClinicParameter = have_selfClinic.HasValue ?
                new ObjectParameter("have_selfClinic", have_selfClinic) :
                new ObjectParameter("have_selfClinic", typeof(bool));
    
            var clinic_phoneParameter = clinic_phone != null ?
                new ObjectParameter("clinic_phone", clinic_phone) :
                new ObjectParameter("clinic_phone", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(decimal));
    
            var have_xrayParameter = have_xray.HasValue ?
                new ObjectParameter("have_xray", have_xray) :
                new ObjectParameter("have_xray", typeof(bool));
    
            var have_ultrasoundParameter = have_ultrasound.HasValue ?
                new ObjectParameter("have_ultrasound", have_ultrasound) :
                new ObjectParameter("have_ultrasound", typeof(bool));
    
            var credit_card_acceptedParameter = credit_card_accepted.HasValue ?
                new ObjectParameter("credit_card_accepted", credit_card_accepted) :
                new ObjectParameter("credit_card_accepted", typeof(bool));
    
            var emergency_availableParameter = emergency_available.HasValue ?
                new ObjectParameter("emergency_available", emergency_available) :
                new ObjectParameter("emergency_available", typeof(bool));
    
            var home_visitParameter = home_visit.HasValue ?
                new ObjectParameter("home_visit", home_visit) :
                new ObjectParameter("home_visit", typeof(bool));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDoctorWorkDetail", doc_idParameter, clinic_addressParameter, clinic_cityParameter, have_selfClinicParameter, clinic_phoneParameter, no_of_bedsParameter, have_xrayParameter, have_ultrasoundParameter, credit_card_acceptedParameter, emergency_availableParameter, home_visitParameter, updated_byParameter);
        }
    
        public virtual int usp_UpdateDoctorWorkDetail1(string doc_id, Nullable<bool> have_selfClinic, string clinic_phone, Nullable<decimal> no_of_beds, Nullable<bool> have_xray, Nullable<bool> have_ultrasound, Nullable<bool> credit_card_accepted, Nullable<bool> emergency_available, Nullable<bool> home_visit, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var have_selfClinicParameter = have_selfClinic.HasValue ?
                new ObjectParameter("have_selfClinic", have_selfClinic) :
                new ObjectParameter("have_selfClinic", typeof(bool));
    
            var clinic_phoneParameter = clinic_phone != null ?
                new ObjectParameter("clinic_phone", clinic_phone) :
                new ObjectParameter("clinic_phone", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(decimal));
    
            var have_xrayParameter = have_xray.HasValue ?
                new ObjectParameter("have_xray", have_xray) :
                new ObjectParameter("have_xray", typeof(bool));
    
            var have_ultrasoundParameter = have_ultrasound.HasValue ?
                new ObjectParameter("have_ultrasound", have_ultrasound) :
                new ObjectParameter("have_ultrasound", typeof(bool));
    
            var credit_card_acceptedParameter = credit_card_accepted.HasValue ?
                new ObjectParameter("credit_card_accepted", credit_card_accepted) :
                new ObjectParameter("credit_card_accepted", typeof(bool));
    
            var emergency_availableParameter = emergency_available.HasValue ?
                new ObjectParameter("emergency_available", emergency_available) :
                new ObjectParameter("emergency_available", typeof(bool));
    
            var home_visitParameter = home_visit.HasValue ?
                new ObjectParameter("home_visit", home_visit) :
                new ObjectParameter("home_visit", typeof(bool));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDoctorWorkDetail1", doc_idParameter, have_selfClinicParameter, clinic_phoneParameter, no_of_bedsParameter, have_xrayParameter, have_ultrasoundParameter, credit_card_acceptedParameter, emergency_availableParameter, home_visitParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_UpdateDoctorWorkDetail2(string doc_id, string clinic_address, Nullable<bool> have_selfClinic, string clinic_phone, Nullable<decimal> no_of_beds, Nullable<bool> have_xray, Nullable<bool> have_ultrasound, Nullable<bool> credit_card_accepted, Nullable<bool> emergency_available, Nullable<bool> home_visit, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var have_selfClinicParameter = have_selfClinic.HasValue ?
                new ObjectParameter("have_selfClinic", have_selfClinic) :
                new ObjectParameter("have_selfClinic", typeof(bool));
    
            var clinic_phoneParameter = clinic_phone != null ?
                new ObjectParameter("clinic_phone", clinic_phone) :
                new ObjectParameter("clinic_phone", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(decimal));
    
            var have_xrayParameter = have_xray.HasValue ?
                new ObjectParameter("have_xray", have_xray) :
                new ObjectParameter("have_xray", typeof(bool));
    
            var have_ultrasoundParameter = have_ultrasound.HasValue ?
                new ObjectParameter("have_ultrasound", have_ultrasound) :
                new ObjectParameter("have_ultrasound", typeof(bool));
    
            var credit_card_acceptedParameter = credit_card_accepted.HasValue ?
                new ObjectParameter("credit_card_accepted", credit_card_accepted) :
                new ObjectParameter("credit_card_accepted", typeof(bool));
    
            var emergency_availableParameter = emergency_available.HasValue ?
                new ObjectParameter("emergency_available", emergency_available) :
                new ObjectParameter("emergency_available", typeof(bool));
    
            var home_visitParameter = home_visit.HasValue ?
                new ObjectParameter("home_visit", home_visit) :
                new ObjectParameter("home_visit", typeof(bool));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDoctorWorkDetail2", doc_idParameter, clinic_addressParameter, have_selfClinicParameter, clinic_phoneParameter, no_of_bedsParameter, have_xrayParameter, have_ultrasoundParameter, credit_card_acceptedParameter, emergency_availableParameter, home_visitParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_UpdateDoctorWorkDetail3(string doc_id, string clinic_city, Nullable<bool> have_selfClinic, string clinic_phone, Nullable<decimal> no_of_beds, Nullable<bool> have_xray, Nullable<bool> have_ultrasound, Nullable<bool> credit_card_accepted, Nullable<bool> emergency_available, Nullable<bool> home_visit, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var have_selfClinicParameter = have_selfClinic.HasValue ?
                new ObjectParameter("have_selfClinic", have_selfClinic) :
                new ObjectParameter("have_selfClinic", typeof(bool));
    
            var clinic_phoneParameter = clinic_phone != null ?
                new ObjectParameter("clinic_phone", clinic_phone) :
                new ObjectParameter("clinic_phone", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(decimal));
    
            var have_xrayParameter = have_xray.HasValue ?
                new ObjectParameter("have_xray", have_xray) :
                new ObjectParameter("have_xray", typeof(bool));
    
            var have_ultrasoundParameter = have_ultrasound.HasValue ?
                new ObjectParameter("have_ultrasound", have_ultrasound) :
                new ObjectParameter("have_ultrasound", typeof(bool));
    
            var credit_card_acceptedParameter = credit_card_accepted.HasValue ?
                new ObjectParameter("credit_card_accepted", credit_card_accepted) :
                new ObjectParameter("credit_card_accepted", typeof(bool));
    
            var emergency_availableParameter = emergency_available.HasValue ?
                new ObjectParameter("emergency_available", emergency_available) :
                new ObjectParameter("emergency_available", typeof(bool));
    
            var home_visitParameter = home_visit.HasValue ?
                new ObjectParameter("home_visit", home_visit) :
                new ObjectParameter("home_visit", typeof(bool));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDoctorWorkDetail3", doc_idParameter, clinic_cityParameter, have_selfClinicParameter, clinic_phoneParameter, no_of_bedsParameter, have_xrayParameter, have_ultrasoundParameter, credit_card_acceptedParameter, emergency_availableParameter, home_visitParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_UpdateDoctorWorkDetail4(string doc_id, string clinic_address, string clinic_city, Nullable<bool> have_selfClinic, string clinic_phone, Nullable<decimal> no_of_beds, Nullable<bool> have_xray, Nullable<bool> have_ultrasound, Nullable<bool> credit_card_accepted, Nullable<bool> emergency_available, Nullable<bool> home_visit, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            var clinic_addressParameter = clinic_address != null ?
                new ObjectParameter("clinic_address", clinic_address) :
                new ObjectParameter("clinic_address", typeof(string));
    
            var clinic_cityParameter = clinic_city != null ?
                new ObjectParameter("clinic_city", clinic_city) :
                new ObjectParameter("clinic_city", typeof(string));
    
            var have_selfClinicParameter = have_selfClinic.HasValue ?
                new ObjectParameter("have_selfClinic", have_selfClinic) :
                new ObjectParameter("have_selfClinic", typeof(bool));
    
            var clinic_phoneParameter = clinic_phone != null ?
                new ObjectParameter("clinic_phone", clinic_phone) :
                new ObjectParameter("clinic_phone", typeof(string));
    
            var no_of_bedsParameter = no_of_beds.HasValue ?
                new ObjectParameter("no_of_beds", no_of_beds) :
                new ObjectParameter("no_of_beds", typeof(decimal));
    
            var have_xrayParameter = have_xray.HasValue ?
                new ObjectParameter("have_xray", have_xray) :
                new ObjectParameter("have_xray", typeof(bool));
    
            var have_ultrasoundParameter = have_ultrasound.HasValue ?
                new ObjectParameter("have_ultrasound", have_ultrasound) :
                new ObjectParameter("have_ultrasound", typeof(bool));
    
            var credit_card_acceptedParameter = credit_card_accepted.HasValue ?
                new ObjectParameter("credit_card_accepted", credit_card_accepted) :
                new ObjectParameter("credit_card_accepted", typeof(bool));
    
            var emergency_availableParameter = emergency_available.HasValue ?
                new ObjectParameter("emergency_available", emergency_available) :
                new ObjectParameter("emergency_available", typeof(bool));
    
            var home_visitParameter = home_visit.HasValue ?
                new ObjectParameter("home_visit", home_visit) :
                new ObjectParameter("home_visit", typeof(bool));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateDoctorWorkDetail4", doc_idParameter, clinic_addressParameter, clinic_cityParameter, have_selfClinicParameter, clinic_phoneParameter, no_of_bedsParameter, have_xrayParameter, have_ultrasoundParameter, credit_card_acceptedParameter, emergency_availableParameter, home_visitParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_updateHospitalContactPersonDetail(string person_name, string designation, string contact_no, string email, string other_info, string updated_by, Nullable<System.DateTime> updated_datetime, string hos_id, Nullable<int> int_contactId)
        {
            var person_nameParameter = person_name != null ?
                new ObjectParameter("person_name", person_name) :
                new ObjectParameter("person_name", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var other_infoParameter = other_info != null ?
                new ObjectParameter("other_info", other_info) :
                new ObjectParameter("other_info", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var int_contactIdParameter = int_contactId.HasValue ?
                new ObjectParameter("int_contactId", int_contactId) :
                new ObjectParameter("int_contactId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_updateHospitalContactPersonDetail", person_nameParameter, designationParameter, contact_noParameter, emailParameter, other_infoParameter, updated_byParameter, updated_datetimeParameter, hos_idParameter, int_contactIdParameter);
        }
    
        public virtual int usp_updateopdtiming(string hos_id, string opd_name, string opd_name1, string season, string registration_time, string consultation_time, string day_name, string location, string other, string updated_by, Nullable<System.DateTime> updated_datetime)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var opd_nameParameter = opd_name != null ?
                new ObjectParameter("opd_name", opd_name) :
                new ObjectParameter("opd_name", typeof(string));
    
            var opd_name1Parameter = opd_name1 != null ?
                new ObjectParameter("opd_name1", opd_name1) :
                new ObjectParameter("opd_name1", typeof(string));
    
            var seasonParameter = season != null ?
                new ObjectParameter("season", season) :
                new ObjectParameter("season", typeof(string));
    
            var registration_timeParameter = registration_time != null ?
                new ObjectParameter("registration_time", registration_time) :
                new ObjectParameter("registration_time", typeof(string));
    
            var consultation_timeParameter = consultation_time != null ?
                new ObjectParameter("consultation_time", consultation_time) :
                new ObjectParameter("consultation_time", typeof(string));
    
            var day_nameParameter = day_name != null ?
                new ObjectParameter("day_name", day_name) :
                new ObjectParameter("day_name", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var otherParameter = other != null ?
                new ObjectParameter("other", other) :
                new ObjectParameter("other", typeof(string));
    
            var updated_byParameter = updated_by != null ?
                new ObjectParameter("updated_by", updated_by) :
                new ObjectParameter("updated_by", typeof(string));
    
            var updated_datetimeParameter = updated_datetime.HasValue ?
                new ObjectParameter("updated_datetime", updated_datetime) :
                new ObjectParameter("updated_datetime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_updateopdtiming", hos_idParameter, opd_nameParameter, opd_name1Parameter, seasonParameter, registration_timeParameter, consultation_timeParameter, day_nameParameter, locationParameter, otherParameter, updated_byParameter, updated_datetimeParameter);
        }
    
        public virtual int usp_UpdateTreatmentCity(string vcTreatmentCity1, string vcTreatmentCity2, string vcTreatmentCity3, string vcUpdatedBy, Nullable<System.DateTime> dtUpdationDate, string vcPatientId)
        {
            var vcTreatmentCity1Parameter = vcTreatmentCity1 != null ?
                new ObjectParameter("vcTreatmentCity1", vcTreatmentCity1) :
                new ObjectParameter("vcTreatmentCity1", typeof(string));
    
            var vcTreatmentCity2Parameter = vcTreatmentCity2 != null ?
                new ObjectParameter("vcTreatmentCity2", vcTreatmentCity2) :
                new ObjectParameter("vcTreatmentCity2", typeof(string));
    
            var vcTreatmentCity3Parameter = vcTreatmentCity3 != null ?
                new ObjectParameter("vcTreatmentCity3", vcTreatmentCity3) :
                new ObjectParameter("vcTreatmentCity3", typeof(string));
    
            var vcUpdatedByParameter = vcUpdatedBy != null ?
                new ObjectParameter("vcUpdatedBy", vcUpdatedBy) :
                new ObjectParameter("vcUpdatedBy", typeof(string));
    
            var dtUpdationDateParameter = dtUpdationDate.HasValue ?
                new ObjectParameter("dtUpdationDate", dtUpdationDate) :
                new ObjectParameter("dtUpdationDate", typeof(System.DateTime));
    
            var vcPatientIdParameter = vcPatientId != null ?
                new ObjectParameter("vcPatientId", vcPatientId) :
                new ObjectParameter("vcPatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateTreatmentCity", vcTreatmentCity1Parameter, vcTreatmentCity2Parameter, vcTreatmentCity3Parameter, vcUpdatedByParameter, dtUpdationDateParameter, vcPatientIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_validateprocurl(string hos_id, string sname, string pname)
        {
            var hos_idParameter = hos_id != null ?
                new ObjectParameter("hos_id", hos_id) :
                new ObjectParameter("hos_id", typeof(string));
    
            var snameParameter = sname != null ?
                new ObjectParameter("sname", sname) :
                new ObjectParameter("sname", typeof(string));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_validateprocurl", hos_idParameter, snameParameter, pnameParameter);
        }
    
        public virtual ObjectResult<uspdoctorskill_dp_Result> uspdoctorskill_dp(string doc_id)
        {
            var doc_idParameter = doc_id != null ?
                new ObjectParameter("doc_id", doc_id) :
                new ObjectParameter("doc_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspdoctorskill_dp_Result>("uspdoctorskill_dp", doc_idParameter);
        }
    
        public virtual ObjectResult<Validation_dp_Result> Validation_dp(string code, string vcpatientid, string vcPatientPhone, string istr, string vcPatientEmail)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var vcpatientidParameter = vcpatientid != null ?
                new ObjectParameter("vcpatientid", vcpatientid) :
                new ObjectParameter("vcpatientid", typeof(string));
    
            var vcPatientPhoneParameter = vcPatientPhone != null ?
                new ObjectParameter("vcPatientPhone", vcPatientPhone) :
                new ObjectParameter("vcPatientPhone", typeof(string));
    
            var istrParameter = istr != null ?
                new ObjectParameter("Istr", istr) :
                new ObjectParameter("Istr", typeof(string));
    
            var vcPatientEmailParameter = vcPatientEmail != null ?
                new ObjectParameter("vcPatientEmail", vcPatientEmail) :
                new ObjectParameter("vcPatientEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Validation_dp_Result>("Validation_dp", codeParameter, vcpatientidParameter, vcPatientPhoneParameter, istrParameter, vcPatientEmailParameter);
        }
    
        public virtual ObjectResult<string> web_cityreturn(string city)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("web_cityreturn", cityParameter);
        }
    }
}
